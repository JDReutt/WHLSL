half cos(half);
half2 cos(half2);
half3 cos(half3);
half4 cos(half4);
half2x2 cos(half2x2);
half2x3 cos(half2x3);
half2x4 cos(half2x4);
half3x2 cos(half3x2);
half3x3 cos(half3x3);
half3x4 cos(half3x4);
half4x2 cos(half4x2);
half4x3 cos(half4x3);
half4x4 cos(half4x4);
float cos(float);
float2 cos(float2);
float3 cos(float3);
float4 cos(float4);
float2x2 cos(float2x2);
float2x3 cos(float2x3);
float2x4 cos(float2x4);
float3x2 cos(float3x2);
float3x3 cos(float3x3);
float3x4 cos(float3x4);
float4x2 cos(float4x2);
float4x3 cos(float4x3);
float4x4 cos(float4x4);
half sin(half);
half2 sin(half2);
half3 sin(half3);
half4 sin(half4);
half2x2 sin(half2x2);
half2x3 sin(half2x3);
half2x4 sin(half2x4);
half3x2 sin(half3x2);
half3x3 sin(half3x3);
half3x4 sin(half3x4);
half4x2 sin(half4x2);
half4x3 sin(half4x3);
half4x4 sin(half4x4);
float sin(float);
float2 sin(float2);
float3 sin(float3);
float4 sin(float4);
float2x2 sin(float2x2);
float2x3 sin(float2x3);
float2x4 sin(float2x4);
float3x2 sin(float3x2);
float3x3 sin(float3x3);
float3x4 sin(float3x4);
float4x2 sin(float4x2);
float4x3 sin(float4x3);
float4x4 sin(float4x4);
half tan(half);
half2 tan(half2);
half3 tan(half3);
half4 tan(half4);
half2x2 tan(half2x2);
half2x3 tan(half2x3);
half2x4 tan(half2x4);
half3x2 tan(half3x2);
half3x3 tan(half3x3);
half3x4 tan(half3x4);
half4x2 tan(half4x2);
half4x3 tan(half4x3);
half4x4 tan(half4x4);
float tan(float);
float2 tan(float2);
float3 tan(float3);
float4 tan(float4);
float2x2 tan(float2x2);
float2x3 tan(float2x3);
float2x4 tan(float2x4);
float3x2 tan(float3x2);
float3x3 tan(float3x3);
float3x4 tan(float3x4);
float4x2 tan(float4x2);
float4x3 tan(float4x3);
float4x4 tan(float4x4);
half acos(half);
half2 acos(half2);
half3 acos(half3);
half4 acos(half4);
half2x2 acos(half2x2);
half2x3 acos(half2x3);
half2x4 acos(half2x4);
half3x2 acos(half3x2);
half3x3 acos(half3x3);
half3x4 acos(half3x4);
half4x2 acos(half4x2);
half4x3 acos(half4x3);
half4x4 acos(half4x4);
float acos(float);
float2 acos(float2);
float3 acos(float3);
float4 acos(float4);
float2x2 acos(float2x2);
float2x3 acos(float2x3);
float2x4 acos(float2x4);
float3x2 acos(float3x2);
float3x3 acos(float3x3);
float3x4 acos(float3x4);
float4x2 acos(float4x2);
float4x3 acos(float4x3);
float4x4 acos(float4x4);
half asin(half);
half2 asin(half2);
half3 asin(half3);
half4 asin(half4);
half2x2 asin(half2x2);
half2x3 asin(half2x3);
half2x4 asin(half2x4);
half3x2 asin(half3x2);
half3x3 asin(half3x3);
half3x4 asin(half3x4);
half4x2 asin(half4x2);
half4x3 asin(half4x3);
half4x4 asin(half4x4);
float asin(float);
float2 asin(float2);
float3 asin(float3);
float4 asin(float4);
float2x2 asin(float2x2);
float2x3 asin(float2x3);
float2x4 asin(float2x4);
float3x2 asin(float3x2);
float3x3 asin(float3x3);
float3x4 asin(float3x4);
float4x2 asin(float4x2);
float4x3 asin(float4x3);
float4x4 asin(float4x4);
half atan(half);
half2 atan(half2);
half3 atan(half3);
half4 atan(half4);
half2x2 atan(half2x2);
half2x3 atan(half2x3);
half2x4 atan(half2x4);
half3x2 atan(half3x2);
half3x3 atan(half3x3);
half3x4 atan(half3x4);
half4x2 atan(half4x2);
half4x3 atan(half4x3);
half4x4 atan(half4x4);
float atan(float);
float2 atan(float2);
float3 atan(float3);
float4 atan(float4);
float2x2 atan(float2x2);
float2x3 atan(float2x3);
float2x4 atan(float2x4);
float3x2 atan(float3x2);
float3x3 atan(float3x3);
float3x4 atan(float3x4);
float4x2 atan(float4x2);
float4x3 atan(float4x3);
float4x4 atan(float4x4);
half atan2(half, half);
half2 atan2(half2, half2);
half3 atan2(half3, half3);
half4 atan2(half4, half4);
half2x2 atan2(half2x2, half2x2);
half2x3 atan2(half2x3, half2x3);
half2x4 atan2(half2x4, half2x4);
half3x2 atan2(half3x2, half3x2);
half3x3 atan2(half3x3, half3x3);
half3x4 atan2(half3x4, half3x4);
half4x2 atan2(half4x2, half4x2);
half4x3 atan2(half4x3, half4x3);
half4x4 atan2(half4x4, half4x4);
float atan2(float, float);
float2 atan2(float2, float2);
float3 atan2(float3, float3);
float4 atan2(float4, float4);
float2x2 atan2(float2x2, float2x2);
float2x3 atan2(float2x3, float2x3);
float2x4 atan2(float2x4, float2x4);
float3x2 atan2(float3x2, float3x2);
float3x3 atan2(float3x3, float3x3);
float3x4 atan2(float3x4, float3x4);
float4x2 atan2(float4x2, float4x2);
float4x3 atan2(float4x3, float4x3);
float4x4 atan2(float4x4, float4x4);
half cosh(half);
half2 cosh(half2);
half3 cosh(half3);
half4 cosh(half4);
half2x2 cosh(half2x2);
half2x3 cosh(half2x3);
half2x4 cosh(half2x4);
half3x2 cosh(half3x2);
half3x3 cosh(half3x3);
half3x4 cosh(half3x4);
half4x2 cosh(half4x2);
half4x3 cosh(half4x3);
half4x4 cosh(half4x4);
float cosh(float);
float2 cosh(float2);
float3 cosh(float3);
float4 cosh(float4);
float2x2 cosh(float2x2);
float2x3 cosh(float2x3);
float2x4 cosh(float2x4);
float3x2 cosh(float3x2);
float3x3 cosh(float3x3);
float3x4 cosh(float3x4);
float4x2 cosh(float4x2);
float4x3 cosh(float4x3);
float4x4 cosh(float4x4);
half sinh(half);
half2 sinh(half2);
half3 sinh(half3);
half4 sinh(half4);
half2x2 sinh(half2x2);
half2x3 sinh(half2x3);
half2x4 sinh(half2x4);
half3x2 sinh(half3x2);
half3x3 sinh(half3x3);
half3x4 sinh(half3x4);
half4x2 sinh(half4x2);
half4x3 sinh(half4x3);
half4x4 sinh(half4x4);
float sinh(float);
float2 sinh(float2);
float3 sinh(float3);
float4 sinh(float4);
float2x2 sinh(float2x2);
float2x3 sinh(float2x3);
float2x4 sinh(float2x4);
float3x2 sinh(float3x2);
float3x3 sinh(float3x3);
float3x4 sinh(float3x4);
float4x2 sinh(float4x2);
float4x3 sinh(float4x3);
float4x4 sinh(float4x4);
half tanh(half);
half2 tanh(half2);
half3 tanh(half3);
half4 tanh(half4);
half2x2 tanh(half2x2);
half2x3 tanh(half2x3);
half2x4 tanh(half2x4);
half3x2 tanh(half3x2);
half3x3 tanh(half3x3);
half3x4 tanh(half3x4);
half4x2 tanh(half4x2);
half4x3 tanh(half4x3);
half4x4 tanh(half4x4);
float tanh(float);
float2 tanh(float2);
float3 tanh(float3);
float4 tanh(float4);
float2x2 tanh(float2x2);
float2x3 tanh(float2x3);
float2x4 tanh(float2x4);
float3x2 tanh(float3x2);
float3x3 tanh(float3x3);
float3x4 tanh(float3x4);
float4x2 tanh(float4x2);
float4x3 tanh(float4x3);
float4x4 tanh(float4x4);
void sincos(half, thread half* s, thread half* c);
void sincos(half2, thread half2* s, thread half2* c);
void sincos(half3, thread half3* s, thread half3* c);
void sincos(half4, thread half4* s, thread half4* c);
void sincos(half2x2, thread half2x2* s, thread half2x2* c);
void sincos(half2x3, thread half2x3* s, thread half2x3* c);
void sincos(half2x4, thread half2x4* s, thread half2x4* c);
void sincos(half3x2, thread half3x2* s, thread half3x2* c);
void sincos(half3x3, thread half3x3* s, thread half3x3* c);
void sincos(half3x4, thread half3x4* s, thread half3x4* c);
void sincos(half4x2, thread half4x2* s, thread half4x2* c);
void sincos(half4x3, thread half4x3* s, thread half4x3* c);
void sincos(half4x4, thread half4x4* s, thread half4x4* c);
void sincos(float, thread float* s, thread float* c);
void sincos(float2, thread float2* s, thread float2* c);
void sincos(float3, thread float3* s, thread float3* c);
void sincos(float4, thread float4* s, thread float4* c);
void sincos(float2x2, thread float2x2* s, thread float2x2* c);
void sincos(float2x3, thread float2x3* s, thread float2x3* c);
void sincos(float2x4, thread float2x4* s, thread float2x4* c);
void sincos(float3x2, thread float3x2* s, thread float3x2* c);
void sincos(float3x3, thread float3x3* s, thread float3x3* c);
void sincos(float3x4, thread float3x4* s, thread float3x4* c);
void sincos(float4x2, thread float4x2* s, thread float4x2* c);
void sincos(float4x3, thread float4x3* s, thread float4x3* c);
void sincos(float4x4, thread float4x4* s, thread float4x4* c);
bool all(bool);
bool all(bool2);
bool all(bool3);
bool all(bool4);
bool all(bool2x2);
bool all(bool2x3);
bool all(bool2x4);
bool all(bool3x2);
bool all(bool3x3);
bool all(bool3x4);
bool all(bool4x2);
bool all(bool4x3);
bool all(bool4x4);
bool all(uchar);
bool all(uchar2);
bool all(uchar3);
bool all(uchar4);
bool all(uchar2x2);
bool all(uchar2x3);
bool all(uchar2x4);
bool all(uchar3x2);
bool all(uchar3x3);
bool all(uchar3x4);
bool all(uchar4x2);
bool all(uchar4x3);
bool all(uchar4x4);
bool all(ushort);
bool all(ushort2);
bool all(ushort3);
bool all(ushort4);
bool all(ushort2x2);
bool all(ushort2x3);
bool all(ushort2x4);
bool all(ushort3x2);
bool all(ushort3x3);
bool all(ushort3x4);
bool all(ushort4x2);
bool all(ushort4x3);
bool all(ushort4x4);
bool all(uint);
bool all(uint2);
bool all(uint3);
bool all(uint4);
bool all(uint2x2);
bool all(uint2x3);
bool all(uint2x4);
bool all(uint3x2);
bool all(uint3x3);
bool all(uint3x4);
bool all(uint4x2);
bool all(uint4x3);
bool all(uint4x4);
bool all(char);
bool all(char2);
bool all(char3);
bool all(char4);
bool all(char2x2);
bool all(char2x3);
bool all(char2x4);
bool all(char3x2);
bool all(char3x3);
bool all(char3x4);
bool all(char4x2);
bool all(char4x3);
bool all(char4x4);
bool all(short);
bool all(short2);
bool all(short3);
bool all(short4);
bool all(short2x2);
bool all(short2x3);
bool all(short2x4);
bool all(short3x2);
bool all(short3x3);
bool all(short3x4);
bool all(short4x2);
bool all(short4x3);
bool all(short4x4);
bool all(int);
bool all(int2);
bool all(int3);
bool all(int4);
bool all(int2x2);
bool all(int2x3);
bool all(int2x4);
bool all(int3x2);
bool all(int3x3);
bool all(int3x4);
bool all(int4x2);
bool all(int4x3);
bool all(int4x4);
bool all(half);
bool all(half2);
bool all(half3);
bool all(half4);
bool all(half2x2);
bool all(half2x3);
bool all(half2x4);
bool all(half3x2);
bool all(half3x3);
bool all(half3x4);
bool all(half4x2);
bool all(half4x3);
bool all(half4x4);
bool all(float);
bool all(float2);
bool all(float3);
bool all(float4);
bool all(float2x2);
bool all(float2x3);
bool all(float2x4);
bool all(float3x2);
bool all(float3x3);
bool all(float3x4);
bool all(float4x2);
bool all(float4x3);
bool all(float4x4);
bool any(bool);
bool any(bool2);
bool any(bool3);
bool any(bool4);
bool any(bool2x2);
bool any(bool2x3);
bool any(bool2x4);
bool any(bool3x2);
bool any(bool3x3);
bool any(bool3x4);
bool any(bool4x2);
bool any(bool4x3);
bool any(bool4x4);
bool any(uchar);
bool any(uchar2);
bool any(uchar3);
bool any(uchar4);
bool any(uchar2x2);
bool any(uchar2x3);
bool any(uchar2x4);
bool any(uchar3x2);
bool any(uchar3x3);
bool any(uchar3x4);
bool any(uchar4x2);
bool any(uchar4x3);
bool any(uchar4x4);
bool any(ushort);
bool any(ushort2);
bool any(ushort3);
bool any(ushort4);
bool any(ushort2x2);
bool any(ushort2x3);
bool any(ushort2x4);
bool any(ushort3x2);
bool any(ushort3x3);
bool any(ushort3x4);
bool any(ushort4x2);
bool any(ushort4x3);
bool any(ushort4x4);
bool any(uint);
bool any(uint2);
bool any(uint3);
bool any(uint4);
bool any(uint2x2);
bool any(uint2x3);
bool any(uint2x4);
bool any(uint3x2);
bool any(uint3x3);
bool any(uint3x4);
bool any(uint4x2);
bool any(uint4x3);
bool any(uint4x4);
bool any(char);
bool any(char2);
bool any(char3);
bool any(char4);
bool any(char2x2);
bool any(char2x3);
bool any(char2x4);
bool any(char3x2);
bool any(char3x3);
bool any(char3x4);
bool any(char4x2);
bool any(char4x3);
bool any(char4x4);
bool any(short);
bool any(short2);
bool any(short3);
bool any(short4);
bool any(short2x2);
bool any(short2x3);
bool any(short2x4);
bool any(short3x2);
bool any(short3x3);
bool any(short3x4);
bool any(short4x2);
bool any(short4x3);
bool any(short4x4);
bool any(int);
bool any(int2);
bool any(int3);
bool any(int4);
bool any(int2x2);
bool any(int2x3);
bool any(int2x4);
bool any(int3x2);
bool any(int3x3);
bool any(int3x4);
bool any(int4x2);
bool any(int4x3);
bool any(int4x4);
bool any(half);
bool any(half2);
bool any(half3);
bool any(half4);
bool any(half2x2);
bool any(half2x3);
bool any(half2x4);
bool any(half3x2);
bool any(half3x3);
bool any(half3x4);
bool any(half4x2);
bool any(half4x3);
bool any(half4x4);
bool any(float);
bool any(float2);
bool any(float3);
bool any(float4);
bool any(float2x2);
bool any(float2x3);
bool any(float2x4);
bool any(float3x2);
bool any(float3x3);
bool any(float3x4);
bool any(float4x2);
bool any(float4x3);
bool any(float4x4);
half determinant(half2x2);
half determinant(half3x3);
half determinant(half4x4);
float determinant(float2x2);
float determinant(float3x3);
float determinant(float4x4);
uchar4 dst(uchar4);
ushort4 dst(ushort4);
uint4 dst(uint4);
char4 dst(char4);
short4 dst(short4);
int4 dst(int4);
half4 dst(half4);
float4 dst(float4);
half distance(half, half);
half distance(half2, half2);
half distance(half3, half3);
half distance(half4, half4);
float distance(float, float);
float distance(float2, float2);
float distance(float3, float3);
float distance(float4, float4);
half3 cross(half3, half3);
float3 cross(float3, float3);
uchar dot(uchar, uchar);
uchar dot(uchar2, uchar2);
uchar dot(uchar3, uchar3);
uchar dot(uchar4, uchar4);
ushort dot(ushort, ushort);
ushort dot(ushort2, ushort2);
ushort dot(ushort3, ushort3);
ushort dot(ushort4, ushort4);
uint dot(uint, uint);
uint dot(uint2, uint2);
uint dot(uint3, uint3);
uint dot(uint4, uint4);
char dot(char, char);
char dot(char2, char2);
char dot(char3, char3);
char dot(char4, char4);
short dot(short, short);
short dot(short2, short2);
short dot(short3, short3);
short dot(short4, short4);
int dot(int, int);
int dot(int2, int2);
int dot(int3, int3);
int dot(int4, int4);
half dot(half, half);
half dot(half2, half2);
half dot(half3, half3);
half dot(half4, half4);
float dot(float, float);
float dot(float2, float2);
float dot(float3, float3);
float dot(float4, float4);
half faceforward(half, half, half);
half2 faceforward(half2, half2, half2);
half3 faceforward(half3, half3, half3);
half4 faceforward(half4, half4, half4);
float faceforward(float, float, float);
float2 faceforward(float2, float2, float2);
float3 faceforward(float3, float3, float3);
float4 faceforward(float4, float4, float4);
half length(half);
half length(half2);
half length(half3);
half length(half4);
float length(float);
float length(float2);
float length(float3);
float length(float4);
half4 lit(half, half, half);
float4 lit(float, float, float);
half normalize(half);
half2 normalize(half2);
half3 normalize(half3);
half4 normalize(half4);
float normalize(float);
float2 normalize(float2);
float3 normalize(float3);
float4 normalize(float4);
half reflect(half, half);
half2 reflect(half2, half2);
half3 reflect(half3, half3);
half4 reflect(half4, half4);
float reflect(float, float);
float2 reflect(float2, float2);
float3 reflect(float3, float3);
float4 reflect(float4, float4);
half refract(half, half, half);
half2 refract(half2, half2, half);
half3 refract(half3, half3, half);
half4 refract(half4, half4, half);
float refract(float, float, float);
float2 refract(float2, float2, float);
float3 refract(float3, float3, float);
float4 refract(float4, float4, float);
half2x2 transpose(half2x2);
half2x3 transpose(half3x2);
half2x4 transpose(half4x2);
half3x2 transpose(half2x3);
half3x3 transpose(half3x3);
half3x4 transpose(half4x3);
half4x2 transpose(half2x4);
half4x3 transpose(half3x4);
half4x4 transpose(half4x4);
float2x2 transpose(float2x2);
float2x3 transpose(float3x2);
float2x4 transpose(float4x2);
float3x2 transpose(float2x3);
float3x3 transpose(float3x3);
float3x4 transpose(float4x3);
float4x2 transpose(float2x4);
float4x3 transpose(float3x4);
float4x4 transpose(float4x4);
bool mul(bool, bool);
bool mul(bool2, bool2);
bool mul(bool3, bool3);
bool mul(bool4, bool4);
bool2 mul(bool, bool2);
bool2 mul(bool2, bool);
bool3 mul(bool, bool3);
bool3 mul(bool3, bool);
bool4 mul(bool, bool4);
bool4 mul(bool4, bool);
char mul(char, char);
char mul(char2, char2);
char mul(char3, char3);
char mul(char4, char4);
char2 mul(char, char2);
char2 mul(char2, char);
char3 mul(char, char3);
char3 mul(char3, char);
char4 mul(char, char4);
char4 mul(char4, char);
float mul(float, float);
float mul(float2, float2);
float mul(float3, float3);
float mul(float4, float4);
float2 mul(float, float2);
float2 mul(float2, float);
float3 mul(float, float3);
float3 mul(float3, float);
float4 mul(float, float4);
float4 mul(float4, float);
half mul(half, half);
half mul(half2, half2);
half mul(half3, half3);
half mul(half4, half4);
half2 mul(half, half2);
half2 mul(half2, half);
half3 mul(half, half3);
half3 mul(half3, half);
half4 mul(half, half4);
half4 mul(half4, half);
int mul(int, int);
int mul(int2, int2);
int mul(int3, int3);
int mul(int4, int4);
int2 mul(int, int2);
int2 mul(int2, int);
int3 mul(int, int3);
int3 mul(int3, int);
int4 mul(int, int4);
int4 mul(int4, int);
short mul(short, short);
short mul(short2, short2);
short mul(short3, short3);
short mul(short4, short4);
short2 mul(short, short2);
short2 mul(short2, short);
short3 mul(short, short3);
short3 mul(short3, short);
short4 mul(short, short4);
short4 mul(short4, short);
uchar mul(uchar, uchar);
uchar mul(uchar2, uchar2);
uchar mul(uchar3, uchar3);
uchar mul(uchar4, uchar4);
uchar2 mul(uchar, uchar2);
uchar2 mul(uchar2, uchar);
uchar3 mul(uchar, uchar3);
uchar3 mul(uchar3, uchar);
uchar4 mul(uchar, uchar4);
uchar4 mul(uchar4, uchar);
uint mul(uint, uint);
uint mul(uint2, uint2);
uint mul(uint3, uint3);
uint mul(uint4, uint4);
uint2 mul(uint, uint2);
uint2 mul(uint2, uint);
uint3 mul(uint, uint3);
uint3 mul(uint3, uint);
uint4 mul(uint, uint4);
uint4 mul(uint4, uint);
ushort mul(ushort, ushort);
ushort mul(ushort2, ushort2);
ushort mul(ushort3, ushort3);
ushort mul(ushort4, ushort4);
ushort2 mul(ushort, ushort2);
ushort2 mul(ushort2, ushort);
ushort3 mul(ushort, ushort3);
ushort3 mul(ushort3, ushort);
ushort4 mul(ushort, ushort4);
ushort4 mul(ushort4, ushort);
half2x2 mul(half, half2x2);
half2x2 mul(half2x2, half);
half2 mul(half2, half2x2);
half2 mul(half2x2, half2);
half2x3 mul(half, half2x3);
half2x3 mul(half2x3, half);
half3 mul(half2, half2x3);
half2 mul(half2x3, half3);
half2x4 mul(half, half2x4);
half2x4 mul(half2x4, half);
half4 mul(half2, half2x4);
half2 mul(half2x4, half4);
half3x2 mul(half, half3x2);
half3x2 mul(half3x2, half);
half2 mul(half3, half3x2);
half3 mul(half3x2, half2);
half3x3 mul(half, half3x3);
half3x3 mul(half3x3, half);
half3 mul(half3, half3x3);
half3 mul(half3x3, half3);
half3x4 mul(half, half3x4);
half3x4 mul(half3x4, half);
half4 mul(half3, half3x4);
half3 mul(half3x4, half4);
half4x2 mul(half, half4x2);
half4x2 mul(half4x2, half);
half2 mul(half4, half4x2);
half4 mul(half4x2, half2);
half4x3 mul(half, half4x3);
half4x3 mul(half4x3, half);
half3 mul(half4, half4x3);
half4 mul(half4x3, half3);
half4x4 mul(half, half4x4);
half4x4 mul(half4x4, half);
half4 mul(half4, half4x4);
half4 mul(half4x4, half4);
float2x2 mul(float, float2x2);
float2x2 mul(float2x2, float);
float2 mul(float2, float2x2);
float2 mul(float2x2, float2);
float2x3 mul(float, float2x3);
float2x3 mul(float2x3, float);
float3 mul(float2, float2x3);
float2 mul(float2x3, float3);
float2x4 mul(float, float2x4);
float2x4 mul(float2x4, float);
float4 mul(float2, float2x4);
float2 mul(float2x4, float4);
float3x2 mul(float, float3x2);
float3x2 mul(float3x2, float);
float2 mul(float3, float3x2);
float3 mul(float3x2, float2);
float3x3 mul(float, float3x3);
float3x3 mul(float3x3, float);
float3 mul(float3, float3x3);
float3 mul(float3x3, float3);
float3x4 mul(float, float3x4);
float3x4 mul(float3x4, float);
float4 mul(float3, float3x4);
float3 mul(float3x4, float4);
float4x2 mul(float, float4x2);
float4x2 mul(float4x2, float);
float2 mul(float4, float4x2);
float4 mul(float4x2, float2);
float4x3 mul(float, float4x3);
float4x3 mul(float4x3, float);
float3 mul(float4, float4x3);
float4 mul(float4x3, float3);
float4x4 mul(float, float4x4);
float4x4 mul(float4x4, float);
float4 mul(float4, float4x4);
float4 mul(float4x4, float4);
half2x2 mul(half2x2, half2x2);
half2x3 mul(half2x2, half2x3);
half2x4 mul(half2x2, half2x4);
half2x2 mul(half2x3, half3x2);
half2x3 mul(half2x3, half3x3);
half2x4 mul(half2x3, half3x4);
half2x2 mul(half2x4, half4x2);
half2x3 mul(half2x4, half4x3);
half2x4 mul(half2x4, half4x4);
half3x2 mul(half3x2, half2x2);
half3x3 mul(half3x2, half2x3);
half3x4 mul(half3x2, half2x4);
half3x2 mul(half3x3, half3x2);
half3x3 mul(half3x3, half3x3);
half3x4 mul(half3x3, half3x4);
half3x2 mul(half3x4, half4x2);
half3x3 mul(half3x4, half4x3);
half3x4 mul(half3x4, half4x4);
half4x2 mul(half4x2, half2x2);
half4x3 mul(half4x2, half2x3);
half4x4 mul(half4x2, half2x4);
half4x2 mul(half4x3, half3x2);
half4x3 mul(half4x3, half3x3);
half4x4 mul(half4x3, half3x4);
half4x2 mul(half4x4, half4x2);
half4x3 mul(half4x4, half4x3);
half4x4 mul(half4x4, half4x4);
float2x2 mul(float2x2, float2x2);
float2x3 mul(float2x2, float2x3);
float2x4 mul(float2x2, float2x4);
float2x2 mul(float2x3, float3x2);
float2x3 mul(float2x3, float3x3);
float2x4 mul(float2x3, float3x4);
float2x2 mul(float2x4, float4x2);
float2x3 mul(float2x4, float4x3);
float2x4 mul(float2x4, float4x4);
float3x2 mul(float3x2, float2x2);
float3x3 mul(float3x2, float2x3);
float3x4 mul(float3x2, float2x4);
float3x2 mul(float3x3, float3x2);
float3x3 mul(float3x3, float3x3);
float3x4 mul(float3x3, float3x4);
float3x2 mul(float3x4, float4x2);
float3x3 mul(float3x4, float4x3);
float3x4 mul(float3x4, float4x4);
float4x2 mul(float4x2, float2x2);
float4x3 mul(float4x2, float2x3);
float4x4 mul(float4x2, float2x4);
float4x2 mul(float4x3, float3x2);
float4x3 mul(float4x3, float3x3);
float4x4 mul(float4x3, float3x4);
float4x2 mul(float4x4, float4x2);
float4x3 mul(float4x4, float4x3);
float4x4 mul(float4x4, float4x4);
void AllMemoryBarrierWithGroupSync();
void DeviceMemoryBarrierWithGroupSync();
void GroupMemoryBarrierWithGroupSync();
float asfloat(uint);
float2 asfloat(uint2);
float3 asfloat(uint3);
float4 asfloat(uint4);
float asfloat(int);
float2 asfloat(int2);
float3 asfloat(int3);
float4 asfloat(int4);
float asfloat(float);
float2 asfloat(float2);
float3 asfloat(float3);
float4 asfloat(float4);
float2x2 asfloat(float2x2);
float2x3 asfloat(float2x3);
float2x4 asfloat(float2x4);
float3x2 asfloat(float3x2);
float3x3 asfloat(float3x3);
float3x4 asfloat(float3x4);
float4x2 asfloat(float4x2);
float4x3 asfloat(float4x3);
float4x4 asfloat(float4x4);
uint asuint(int);
uint2 asuint(int2);
uint3 asuint(int3);
uint4 asuint(int4);
uint asuint(float);
uint2 asuint(float2);
uint3 asuint(float3);
uint4 asuint(float4);
uint2x2 asuint(float2x2);
uint2x3 asuint(float2x3);
uint2x4 asuint(float2x4);
uint3x2 asuint(float3x2);
uint3x3 asuint(float3x3);
uint3x4 asuint(float3x4);
uint4x2 asuint(float4x2);
uint4x3 asuint(float4x3);
uint4x4 asuint(float4x4);
int asint(uint);
int2 asint(uint2);
int3 asint(uint3);
int4 asint(uint4);
int asint(float);
int2 asint(float2);
int3 asint(float3);
int4 asint(float4);
int2x2 asint(float2x2);
int2x3 asint(float2x3);
int2x4 asint(float2x4);
int3x2 asint(float3x2);
int3x3 asint(float3x3);
int3x4 asint(float3x4);
int4x2 asint(float4x2);
int4x3 asint(float4x3);
int4x4 asint(float4x4);
half ceil(half);
half2 ceil(half2);
half3 ceil(half3);
half4 ceil(half4);
half2x2 ceil(half2x2);
half2x3 ceil(half2x3);
half2x4 ceil(half2x4);
half3x2 ceil(half3x2);
half3x3 ceil(half3x3);
half3x4 ceil(half3x4);
half4x2 ceil(half4x2);
half4x3 ceil(half4x3);
half4x4 ceil(half4x4);
float ceil(float);
float2 ceil(float2);
float3 ceil(float3);
float4 ceil(float4);
float2x2 ceil(float2x2);
float2x3 ceil(float2x3);
float2x4 ceil(float2x4);
float3x2 ceil(float3x2);
float3x3 ceil(float3x3);
float3x4 ceil(float3x4);
float4x2 ceil(float4x2);
float4x3 ceil(float4x3);
float4x4 ceil(float4x4);
half degrees(half);
half2 degrees(half2);
half3 degrees(half3);
half4 degrees(half4);
half2x2 degrees(half2x2);
half2x3 degrees(half2x3);
half2x4 degrees(half2x4);
half3x2 degrees(half3x2);
half3x3 degrees(half3x3);
half3x4 degrees(half3x4);
half4x2 degrees(half4x2);
half4x3 degrees(half4x3);
half4x4 degrees(half4x4);
float degrees(float);
float2 degrees(float2);
float3 degrees(float3);
float4 degrees(float4);
float2x2 degrees(float2x2);
float2x3 degrees(float2x3);
float2x4 degrees(float2x4);
float3x2 degrees(float3x2);
float3x3 degrees(float3x3);
float3x4 degrees(float3x4);
float4x2 degrees(float4x2);
float4x3 degrees(float4x3);
float4x4 degrees(float4x4);
half exp(half);
half2 exp(half2);
half3 exp(half3);
half4 exp(half4);
half2x2 exp(half2x2);
half2x3 exp(half2x3);
half2x4 exp(half2x4);
half3x2 exp(half3x2);
half3x3 exp(half3x3);
half3x4 exp(half3x4);
half4x2 exp(half4x2);
half4x3 exp(half4x3);
half4x4 exp(half4x4);
float exp(float);
float2 exp(float2);
float3 exp(float3);
float4 exp(float4);
float2x2 exp(float2x2);
float2x3 exp(float2x3);
float2x4 exp(float2x4);
float3x2 exp(float3x2);
float3x3 exp(float3x3);
float3x4 exp(float3x4);
float4x2 exp(float4x2);
float4x3 exp(float4x3);
float4x4 exp(float4x4);
half exp2(half);
half2 exp2(half2);
half3 exp2(half3);
half4 exp2(half4);
half2x2 exp2(half2x2);
half2x3 exp2(half2x3);
half2x4 exp2(half2x4);
half3x2 exp2(half3x2);
half3x3 exp2(half3x3);
half3x4 exp2(half3x4);
half4x2 exp2(half4x2);
half4x3 exp2(half4x3);
half4x4 exp2(half4x4);
float exp2(float);
float2 exp2(float2);
float3 exp2(float3);
float4 exp2(float4);
float2x2 exp2(float2x2);
float2x3 exp2(float2x3);
float2x4 exp2(float2x4);
float3x2 exp2(float3x2);
float3x3 exp2(float3x3);
float3x4 exp2(float3x4);
float4x2 exp2(float4x2);
float4x3 exp2(float4x3);
float4x4 exp2(float4x4);
half floor(half);
half2 floor(half2);
half3 floor(half3);
half4 floor(half4);
half2x2 floor(half2x2);
half2x3 floor(half2x3);
half2x4 floor(half2x4);
half3x2 floor(half3x2);
half3x3 floor(half3x3);
half3x4 floor(half3x4);
half4x2 floor(half4x2);
half4x3 floor(half4x3);
half4x4 floor(half4x4);
float floor(float);
float2 floor(float2);
float3 floor(float3);
float4 floor(float4);
float2x2 floor(float2x2);
float2x3 floor(float2x3);
float2x4 floor(float2x4);
float3x2 floor(float3x2);
float3x3 floor(float3x3);
float3x4 floor(float3x4);
float4x2 floor(float4x2);
float4x3 floor(float4x3);
float4x4 floor(float4x4);
half frac(half);
half2 frac(half2);
half3 frac(half3);
half4 frac(half4);
half2x2 frac(half2x2);
half2x3 frac(half2x3);
half2x4 frac(half2x4);
half3x2 frac(half3x2);
half3x3 frac(half3x3);
half3x4 frac(half3x4);
half4x2 frac(half4x2);
half4x3 frac(half4x3);
half4x4 frac(half4x4);
float frac(float);
float2 frac(float2);
float3 frac(float3);
float4 frac(float4);
float2x2 frac(float2x2);
float2x3 frac(float2x3);
float2x4 frac(float2x4);
float3x2 frac(float3x2);
float3x3 frac(float3x3);
float3x4 frac(float3x4);
float4x2 frac(float4x2);
float4x3 frac(float4x3);
float4x4 frac(float4x4);
half log(half);
half2 log(half2);
half3 log(half3);
half4 log(half4);
half2x2 log(half2x2);
half2x3 log(half2x3);
half2x4 log(half2x4);
half3x2 log(half3x2);
half3x3 log(half3x3);
half3x4 log(half3x4);
half4x2 log(half4x2);
half4x3 log(half4x3);
half4x4 log(half4x4);
float log(float);
float2 log(float2);
float3 log(float3);
float4 log(float4);
float2x2 log(float2x2);
float2x3 log(float2x3);
float2x4 log(float2x4);
float3x2 log(float3x2);
float3x3 log(float3x3);
float3x4 log(float3x4);
float4x2 log(float4x2);
float4x3 log(float4x3);
float4x4 log(float4x4);
half log2(half);
half2 log2(half2);
half3 log2(half3);
half4 log2(half4);
half2x2 log2(half2x2);
half2x3 log2(half2x3);
half2x4 log2(half2x4);
half3x2 log2(half3x2);
half3x3 log2(half3x3);
half3x4 log2(half3x4);
half4x2 log2(half4x2);
half4x3 log2(half4x3);
half4x4 log2(half4x4);
float log2(float);
float2 log2(float2);
float3 log2(float3);
float4 log2(float4);
float2x2 log2(float2x2);
float2x3 log2(float2x3);
float2x4 log2(float2x4);
float3x2 log2(float3x2);
float3x3 log2(float3x3);
float3x4 log2(float3x4);
float4x2 log2(float4x2);
float4x3 log2(float4x3);
float4x4 log2(float4x4);
half log10(half);
half2 log10(half2);
half3 log10(half3);
half4 log10(half4);
half2x2 log10(half2x2);
half2x3 log10(half2x3);
half2x4 log10(half2x4);
half3x2 log10(half3x2);
half3x3 log10(half3x3);
half3x4 log10(half3x4);
half4x2 log10(half4x2);
half4x3 log10(half4x3);
half4x4 log10(half4x4);
float log10(float);
float2 log10(float2);
float3 log10(float3);
float4 log10(float4);
float2x2 log10(float2x2);
float2x3 log10(float2x3);
float2x4 log10(float2x4);
float3x2 log10(float3x2);
float3x3 log10(float3x3);
float3x4 log10(float3x4);
float4x2 log10(float4x2);
float4x3 log10(float4x3);
float4x4 log10(float4x4);
half degrees(half);
half2 degrees(half2);
half3 degrees(half3);
half4 degrees(half4);
half2x2 degrees(half2x2);
half2x3 degrees(half2x3);
half2x4 degrees(half2x4);
half3x2 degrees(half3x2);
half3x3 degrees(half3x3);
half3x4 degrees(half3x4);
half4x2 degrees(half4x2);
half4x3 degrees(half4x3);
half4x4 degrees(half4x4);
float degrees(float);
float2 degrees(float2);
float3 degrees(float3);
float4 degrees(float4);
float2x2 degrees(float2x2);
float2x3 degrees(float2x3);
float2x4 degrees(float2x4);
float3x2 degrees(float3x2);
float3x3 degrees(float3x3);
float3x4 degrees(float3x4);
float4x2 degrees(float4x2);
float4x3 degrees(float4x3);
float4x4 degrees(float4x4);
half rcp(half);
half2 rcp(half2);
half3 rcp(half3);
half4 rcp(half4);
half2x2 rcp(half2x2);
half2x3 rcp(half2x3);
half2x4 rcp(half2x4);
half3x2 rcp(half3x2);
half3x3 rcp(half3x3);
half3x4 rcp(half3x4);
half4x2 rcp(half4x2);
half4x3 rcp(half4x3);
half4x4 rcp(half4x4);
float rcp(float);
float2 rcp(float2);
float3 rcp(float3);
float4 rcp(float4);
float2x2 rcp(float2x2);
float2x3 rcp(float2x3);
float2x4 rcp(float2x4);
float3x2 rcp(float3x2);
float3x3 rcp(float3x3);
float3x4 rcp(float3x4);
float4x2 rcp(float4x2);
float4x3 rcp(float4x3);
float4x4 rcp(float4x4);
half round(half);
half2 round(half2);
half3 round(half3);
half4 round(half4);
half2x2 round(half2x2);
half2x3 round(half2x3);
half2x4 round(half2x4);
half3x2 round(half3x2);
half3x3 round(half3x3);
half3x4 round(half3x4);
half4x2 round(half4x2);
half4x3 round(half4x3);
half4x4 round(half4x4);
float round(float);
float2 round(float2);
float3 round(float3);
float4 round(float4);
float2x2 round(float2x2);
float2x3 round(float2x3);
float2x4 round(float2x4);
float3x2 round(float3x2);
float3x3 round(float3x3);
float3x4 round(float3x4);
float4x2 round(float4x2);
float4x3 round(float4x3);
float4x4 round(float4x4);
half rsqrt(half);
half2 rsqrt(half2);
half3 rsqrt(half3);
half4 rsqrt(half4);
half2x2 rsqrt(half2x2);
half2x3 rsqrt(half2x3);
half2x4 rsqrt(half2x4);
half3x2 rsqrt(half3x2);
half3x3 rsqrt(half3x3);
half3x4 rsqrt(half3x4);
half4x2 rsqrt(half4x2);
half4x3 rsqrt(half4x3);
half4x4 rsqrt(half4x4);
float rsqrt(float);
float2 rsqrt(float2);
float3 rsqrt(float3);
float4 rsqrt(float4);
float2x2 rsqrt(float2x2);
float2x3 rsqrt(float2x3);
float2x4 rsqrt(float2x4);
float3x2 rsqrt(float3x2);
float3x3 rsqrt(float3x3);
float3x4 rsqrt(float3x4);
float4x2 rsqrt(float4x2);
float4x3 rsqrt(float4x3);
float4x4 rsqrt(float4x4);
half saturate(half);
half2 saturate(half2);
half3 saturate(half3);
half4 saturate(half4);
half2x2 saturate(half2x2);
half2x3 saturate(half2x3);
half2x4 saturate(half2x4);
half3x2 saturate(half3x2);
half3x3 saturate(half3x3);
half3x4 saturate(half3x4);
half4x2 saturate(half4x2);
half4x3 saturate(half4x3);
half4x4 saturate(half4x4);
float saturate(float);
float2 saturate(float2);
float3 saturate(float3);
float4 saturate(float4);
float2x2 saturate(float2x2);
float2x3 saturate(float2x3);
float2x4 saturate(float2x4);
float3x2 saturate(float3x2);
float3x3 saturate(float3x3);
float3x4 saturate(float3x4);
float4x2 saturate(float4x2);
float4x3 saturate(float4x3);
float4x4 saturate(float4x4);
half sqrt(half);
half2 sqrt(half2);
half3 sqrt(half3);
half4 sqrt(half4);
half2x2 sqrt(half2x2);
half2x3 sqrt(half2x3);
half2x4 sqrt(half2x4);
half3x2 sqrt(half3x2);
half3x3 sqrt(half3x3);
half3x4 sqrt(half3x4);
half4x2 sqrt(half4x2);
half4x3 sqrt(half4x3);
half4x4 sqrt(half4x4);
float sqrt(float);
float2 sqrt(float2);
float3 sqrt(float3);
float4 sqrt(float4);
float2x2 sqrt(float2x2);
float2x3 sqrt(float2x3);
float2x4 sqrt(float2x4);
float3x2 sqrt(float3x2);
float3x3 sqrt(float3x3);
float3x4 sqrt(float3x4);
float4x2 sqrt(float4x2);
float4x3 sqrt(float4x3);
float4x4 sqrt(float4x4);
half trunc(half);
half2 trunc(half2);
half3 trunc(half3);
half4 trunc(half4);
half2x2 trunc(half2x2);
half2x3 trunc(half2x3);
half2x4 trunc(half2x4);
half3x2 trunc(half3x2);
half3x3 trunc(half3x3);
half3x4 trunc(half3x4);
half4x2 trunc(half4x2);
half4x3 trunc(half4x3);
half4x4 trunc(half4x4);
float trunc(float);
float2 trunc(float2);
float3 trunc(float3);
float4 trunc(float4);
float2x2 trunc(float2x2);
float2x3 trunc(float2x3);
float2x4 trunc(float2x4);
float3x2 trunc(float3x2);
float3x3 trunc(float3x3);
float3x4 trunc(float3x4);
float4x2 trunc(float4x2);
float4x3 trunc(float4x3);
float4x4 trunc(float4x4);
half ddx(half);
half2 ddx(half2);
half3 ddx(half3);
half4 ddx(half4);
half2x2 ddx(half2x2);
half2x3 ddx(half2x3);
half2x4 ddx(half2x4);
half3x2 ddx(half3x2);
half3x3 ddx(half3x3);
half3x4 ddx(half3x4);
half4x2 ddx(half4x2);
half4x3 ddx(half4x3);
half4x4 ddx(half4x4);
float ddx(float);
float2 ddx(float2);
float3 ddx(float3);
float4 ddx(float4);
float2x2 ddx(float2x2);
float2x3 ddx(float2x3);
float2x4 ddx(float2x4);
float3x2 ddx(float3x2);
float3x3 ddx(float3x3);
float3x4 ddx(float3x4);
float4x2 ddx(float4x2);
float4x3 ddx(float4x3);
float4x4 ddx(float4x4);
half ddx_coarse(half);
half2 ddx_coarse(half2);
half3 ddx_coarse(half3);
half4 ddx_coarse(half4);
half2x2 ddx_coarse(half2x2);
half2x3 ddx_coarse(half2x3);
half2x4 ddx_coarse(half2x4);
half3x2 ddx_coarse(half3x2);
half3x3 ddx_coarse(half3x3);
half3x4 ddx_coarse(half3x4);
half4x2 ddx_coarse(half4x2);
half4x3 ddx_coarse(half4x3);
half4x4 ddx_coarse(half4x4);
float ddx_coarse(float);
float2 ddx_coarse(float2);
float3 ddx_coarse(float3);
float4 ddx_coarse(float4);
float2x2 ddx_coarse(float2x2);
float2x3 ddx_coarse(float2x3);
float2x4 ddx_coarse(float2x4);
float3x2 ddx_coarse(float3x2);
float3x3 ddx_coarse(float3x3);
float3x4 ddx_coarse(float3x4);
float4x2 ddx_coarse(float4x2);
float4x3 ddx_coarse(float4x3);
float4x4 ddx_coarse(float4x4);
half ddx_fine(half);
half2 ddx_fine(half2);
half3 ddx_fine(half3);
half4 ddx_fine(half4);
half2x2 ddx_fine(half2x2);
half2x3 ddx_fine(half2x3);
half2x4 ddx_fine(half2x4);
half3x2 ddx_fine(half3x2);
half3x3 ddx_fine(half3x3);
half3x4 ddx_fine(half3x4);
half4x2 ddx_fine(half4x2);
half4x3 ddx_fine(half4x3);
half4x4 ddx_fine(half4x4);
float ddx_fine(float);
float2 ddx_fine(float2);
float3 ddx_fine(float3);
float4 ddx_fine(float4);
float2x2 ddx_fine(float2x2);
float2x3 ddx_fine(float2x3);
float2x4 ddx_fine(float2x4);
float3x2 ddx_fine(float3x2);
float3x3 ddx_fine(float3x3);
float3x4 ddx_fine(float3x4);
float4x2 ddx_fine(float4x2);
float4x3 ddx_fine(float4x3);
float4x4 ddx_fine(float4x4);
half ddy(half);
half2 ddy(half2);
half3 ddy(half3);
half4 ddy(half4);
half2x2 ddy(half2x2);
half2x3 ddy(half2x3);
half2x4 ddy(half2x4);
half3x2 ddy(half3x2);
half3x3 ddy(half3x3);
half3x4 ddy(half3x4);
half4x2 ddy(half4x2);
half4x3 ddy(half4x3);
half4x4 ddy(half4x4);
float ddy(float);
float2 ddy(float2);
float3 ddy(float3);
float4 ddy(float4);
float2x2 ddy(float2x2);
float2x3 ddy(float2x3);
float2x4 ddy(float2x4);
float3x2 ddy(float3x2);
float3x3 ddy(float3x3);
float3x4 ddy(float3x4);
float4x2 ddy(float4x2);
float4x3 ddy(float4x3);
float4x4 ddy(float4x4);
half ddy_coarse(half);
half2 ddy_coarse(half2);
half3 ddy_coarse(half3);
half4 ddy_coarse(half4);
half2x2 ddy_coarse(half2x2);
half2x3 ddy_coarse(half2x3);
half2x4 ddy_coarse(half2x4);
half3x2 ddy_coarse(half3x2);
half3x3 ddy_coarse(half3x3);
half3x4 ddy_coarse(half3x4);
half4x2 ddy_coarse(half4x2);
half4x3 ddy_coarse(half4x3);
half4x4 ddy_coarse(half4x4);
float ddy_coarse(float);
float2 ddy_coarse(float2);
float3 ddy_coarse(float3);
float4 ddy_coarse(float4);
float2x2 ddy_coarse(float2x2);
float2x3 ddy_coarse(float2x3);
float2x4 ddy_coarse(float2x4);
float3x2 ddy_coarse(float3x2);
float3x3 ddy_coarse(float3x3);
float3x4 ddy_coarse(float3x4);
float4x2 ddy_coarse(float4x2);
float4x3 ddy_coarse(float4x3);
float4x4 ddy_coarse(float4x4);
half ddy_fine(half);
half2 ddy_fine(half2);
half3 ddy_fine(half3);
half4 ddy_fine(half4);
half2x2 ddy_fine(half2x2);
half2x3 ddy_fine(half2x3);
half2x4 ddy_fine(half2x4);
half3x2 ddy_fine(half3x2);
half3x3 ddy_fine(half3x3);
half3x4 ddy_fine(half3x4);
half4x2 ddy_fine(half4x2);
half4x3 ddy_fine(half4x3);
half4x4 ddy_fine(half4x4);
float ddy_fine(float);
float2 ddy_fine(float2);
float3 ddy_fine(float3);
float4 ddy_fine(float4);
float2x2 ddy_fine(float2x2);
float2x3 ddy_fine(float2x3);
float2x4 ddy_fine(float2x4);
float3x2 ddy_fine(float3x2);
float3x3 ddy_fine(float3x3);
float3x4 ddy_fine(float3x4);
float4x2 ddy_fine(float4x2);
float4x3 ddy_fine(float4x3);
float4x4 ddy_fine(float4x4);
half fwidth(half);
half2 fwidth(half2);
half3 fwidth(half3);
half4 fwidth(half4);
half2x2 fwidth(half2x2);
half2x3 fwidth(half2x3);
half2x4 fwidth(half2x4);
half3x2 fwidth(half3x2);
half3x3 fwidth(half3x3);
half3x4 fwidth(half3x4);
half4x2 fwidth(half4x2);
half4x3 fwidth(half4x3);
half4x4 fwidth(half4x4);
float fwidth(float);
float2 fwidth(float2);
float3 fwidth(float3);
float4 fwidth(float4);
float2x2 fwidth(float2x2);
float2x3 fwidth(float2x3);
float2x4 fwidth(float2x4);
float3x2 fwidth(float3x2);
float3x3 fwidth(float3x3);
float3x4 fwidth(float3x4);
float4x2 fwidth(float4x2);
float4x3 fwidth(float4x3);
float4x4 fwidth(float4x4);
half step(half, half);
half2 step(half2, half2);
half3 step(half3, half3);
half4 step(half4, half4);
half2x2 step(half2x2, half2x2);
half2x3 step(half2x3, half2x3);
half2x4 step(half2x4, half2x4);
half3x2 step(half3x2, half3x2);
half3x3 step(half3x3, half3x3);
half3x4 step(half3x4, half3x4);
half4x2 step(half4x2, half4x2);
half4x3 step(half4x3, half4x3);
half4x4 step(half4x4, half4x4);
float step(float, float);
float2 step(float2, float2);
float3 step(float3, float3);
float4 step(float4, float4);
float2x2 step(float2x2, float2x2);
float2x3 step(float2x3, float2x3);
float2x4 step(float2x4, float2x4);
float3x2 step(float3x2, float3x2);
float3x3 step(float3x3, float3x3);
float3x4 step(float3x4, float3x4);
float4x2 step(float4x2, float4x2);
float4x3 step(float4x3, float4x3);
float4x4 step(float4x4, float4x4);
half pow(half, half);
half2 pow(half2, half2);
half3 pow(half3, half3);
half4 pow(half4, half4);
half2x2 pow(half2x2, half2x2);
half2x3 pow(half2x3, half2x3);
half2x4 pow(half2x4, half2x4);
half3x2 pow(half3x2, half3x2);
half3x3 pow(half3x3, half3x3);
half3x4 pow(half3x4, half3x4);
half4x2 pow(half4x2, half4x2);
half4x3 pow(half4x3, half4x3);
half4x4 pow(half4x4, half4x4);
float pow(float, float);
float2 pow(float2, float2);
float3 pow(float3, float3);
float4 pow(float4, float4);
float2x2 pow(float2x2, float2x2);
float2x3 pow(float2x3, float2x3);
float2x4 pow(float2x4, float2x4);
float3x2 pow(float3x2, float3x2);
float3x3 pow(float3x3, float3x3);
float3x4 pow(float3x4, float3x4);
float4x2 pow(float4x2, float4x2);
float4x3 pow(float4x3, float4x3);
float4x4 pow(float4x4, float4x4);
half ldexp(half, half);
half2 ldexp(half2, half2);
half3 ldexp(half3, half3);
half4 ldexp(half4, half4);
half2x2 ldexp(half2x2, half2x2);
half2x3 ldexp(half2x3, half2x3);
half2x4 ldexp(half2x4, half2x4);
half3x2 ldexp(half3x2, half3x2);
half3x3 ldexp(half3x3, half3x3);
half3x4 ldexp(half3x4, half3x4);
half4x2 ldexp(half4x2, half4x2);
half4x3 ldexp(half4x3, half4x3);
half4x4 ldexp(half4x4, half4x4);
float ldexp(float, float);
float2 ldexp(float2, float2);
float3 ldexp(float3, float3);
float4 ldexp(float4, float4);
float2x2 ldexp(float2x2, float2x2);
float2x3 ldexp(float2x3, float2x3);
float2x4 ldexp(float2x4, float2x4);
float3x2 ldexp(float3x2, float3x2);
float3x3 ldexp(float3x3, float3x3);
float3x4 ldexp(float3x4, float3x4);
float4x2 ldexp(float4x2, float4x2);
float4x3 ldexp(float4x3, float4x3);
float4x4 ldexp(float4x4, float4x4);
half fmod(half, half);
half2 fmod(half2, half2);
half3 fmod(half3, half3);
half4 fmod(half4, half4);
half2x2 fmod(half2x2, half2x2);
half2x3 fmod(half2x3, half2x3);
half2x4 fmod(half2x4, half2x4);
half3x2 fmod(half3x2, half3x2);
half3x3 fmod(half3x3, half3x3);
half3x4 fmod(half3x4, half3x4);
half4x2 fmod(half4x2, half4x2);
half4x3 fmod(half4x3, half4x3);
half4x4 fmod(half4x4, half4x4);
float fmod(float, float);
float2 fmod(float2, float2);
float3 fmod(float3, float3);
float4 fmod(float4, float4);
float2x2 fmod(float2x2, float2x2);
float2x3 fmod(float2x3, float2x3);
float2x4 fmod(float2x4, float2x4);
float3x2 fmod(float3x2, float3x2);
float3x3 fmod(float3x3, float3x3);
float3x4 fmod(float3x4, float3x4);
float4x2 fmod(float4x2, float4x2);
float4x3 fmod(float4x3, float4x3);
float4x4 fmod(float4x4, float4x4);
half frexp(half, half);
half2 frexp(half2, half2);
half3 frexp(half3, half3);
half4 frexp(half4, half4);
half2x2 frexp(half2x2, half2x2);
half2x3 frexp(half2x3, half2x3);
half2x4 frexp(half2x4, half2x4);
half3x2 frexp(half3x2, half3x2);
half3x3 frexp(half3x3, half3x3);
half3x4 frexp(half3x4, half3x4);
half4x2 frexp(half4x2, half4x2);
half4x3 frexp(half4x3, half4x3);
half4x4 frexp(half4x4, half4x4);
float frexp(float, float);
float2 frexp(float2, float2);
float3 frexp(float3, float3);
float4 frexp(float4, float4);
float2x2 frexp(float2x2, float2x2);
float2x3 frexp(float2x3, float2x3);
float2x4 frexp(float2x4, float2x4);
float3x2 frexp(float3x2, float3x2);
float3x3 frexp(float3x3, float3x3);
float3x4 frexp(float3x4, float3x4);
float4x2 frexp(float4x2, float4x2);
float4x3 frexp(float4x3, float4x3);
float4x4 frexp(float4x4, float4x4);
half smoothstep(half, half, half);
half2 smoothstep(half2, half2, half2);
half3 smoothstep(half3, half3, half3);
half4 smoothstep(half4, half4, half4);
half2x2 smoothstep(half2x2, half2x2, half2x2);
half2x3 smoothstep(half2x3, half2x3, half2x3);
half2x4 smoothstep(half2x4, half2x4, half2x4);
half3x2 smoothstep(half3x2, half3x2, half3x2);
half3x3 smoothstep(half3x3, half3x3, half3x3);
half3x4 smoothstep(half3x4, half3x4, half3x4);
half4x2 smoothstep(half4x2, half4x2, half4x2);
half4x3 smoothstep(half4x3, half4x3, half4x3);
half4x4 smoothstep(half4x4, half4x4, half4x4);
float smoothstep(float, float, float);
float2 smoothstep(float2, float2, float2);
float3 smoothstep(float3, float3, float3);
float4 smoothstep(float4, float4, float4);
float2x2 smoothstep(float2x2, float2x2, float2x2);
float2x3 smoothstep(float2x3, float2x3, float2x3);
float2x4 smoothstep(float2x4, float2x4, float2x4);
float3x2 smoothstep(float3x2, float3x2, float3x2);
float3x3 smoothstep(float3x3, float3x3, float3x3);
float3x4 smoothstep(float3x4, float3x4, float3x4);
float4x2 smoothstep(float4x2, float4x2, float4x2);
float4x3 smoothstep(float4x3, float4x3, float4x3);
float4x4 smoothstep(float4x4, float4x4, float4x4);
half lerp(half, half, half);
half2 lerp(half2, half2, half2);
half3 lerp(half3, half3, half3);
half4 lerp(half4, half4, half4);
half2x2 lerp(half2x2, half2x2, half2x2);
half2x3 lerp(half2x3, half2x3, half2x3);
half2x4 lerp(half2x4, half2x4, half2x4);
half3x2 lerp(half3x2, half3x2, half3x2);
half3x3 lerp(half3x3, half3x3, half3x3);
half3x4 lerp(half3x4, half3x4, half3x4);
half4x2 lerp(half4x2, half4x2, half4x2);
half4x3 lerp(half4x3, half4x3, half4x3);
half4x4 lerp(half4x4, half4x4, half4x4);
float lerp(float, float, float);
float2 lerp(float2, float2, float2);
float3 lerp(float3, float3, float3);
float4 lerp(float4, float4, float4);
float2x2 lerp(float2x2, float2x2, float2x2);
float2x3 lerp(float2x3, float2x3, float2x3);
float2x4 lerp(float2x4, float2x4, float2x4);
float3x2 lerp(float3x2, float3x2, float3x2);
float3x3 lerp(float3x3, float3x3, float3x3);
float3x4 lerp(float3x4, float3x4, float3x4);
float4x2 lerp(float4x2, float4x2, float4x2);
float4x3 lerp(float4x3, float4x3, float4x3);
float4x4 lerp(float4x4, float4x4, float4x4);
half fma(half, half, half);
half2 fma(half2, half2, half2);
half3 fma(half3, half3, half3);
half4 fma(half4, half4, half4);
half2x2 fma(half2x2, half2x2, half2x2);
half2x3 fma(half2x3, half2x3, half2x3);
half2x4 fma(half2x4, half2x4, half2x4);
half3x2 fma(half3x2, half3x2, half3x2);
half3x3 fma(half3x3, half3x3, half3x3);
half3x4 fma(half3x4, half3x4, half3x4);
half4x2 fma(half4x2, half4x2, half4x2);
half4x3 fma(half4x3, half4x3, half4x3);
half4x4 fma(half4x4, half4x4, half4x4);
float fma(float, float, float);
float2 fma(float2, float2, float2);
float3 fma(float3, float3, float3);
float4 fma(float4, float4, float4);
float2x2 fma(float2x2, float2x2, float2x2);
float2x3 fma(float2x3, float2x3, float2x3);
float2x4 fma(float2x4, float2x4, float2x4);
float3x2 fma(float3x2, float3x2, float3x2);
float3x3 fma(float3x3, float3x3, float3x3);
float3x4 fma(float3x4, float3x4, float3x4);
float4x2 fma(float4x2, float4x2, float4x2);
float4x3 fma(float4x3, float4x3, float4x3);
float4x4 fma(float4x4, float4x4, float4x4);
half mad(half, half, half);
half2 mad(half2, half2, half2);
half3 mad(half3, half3, half3);
half4 mad(half4, half4, half4);
half2x2 mad(half2x2, half2x2, half2x2);
half2x3 mad(half2x3, half2x3, half2x3);
half2x4 mad(half2x4, half2x4, half2x4);
half3x2 mad(half3x2, half3x2, half3x2);
half3x3 mad(half3x3, half3x3, half3x3);
half3x4 mad(half3x4, half3x4, half3x4);
half4x2 mad(half4x2, half4x2, half4x2);
half4x3 mad(half4x3, half4x3, half4x3);
half4x4 mad(half4x4, half4x4, half4x4);
float mad(float, float, float);
float2 mad(float2, float2, float2);
float3 mad(float3, float3, float3);
float4 mad(float4, float4, float4);
float2x2 mad(float2x2, float2x2, float2x2);
float2x3 mad(float2x3, float2x3, float2x3);
float2x4 mad(float2x4, float2x4, float2x4);
float3x2 mad(float3x2, float3x2, float3x2);
float3x3 mad(float3x3, float3x3, float3x3);
float3x4 mad(float3x4, float3x4, float3x4);
float4x2 mad(float4x2, float4x2, float4x2);
float4x3 mad(float4x3, float4x3, float4x3);
float4x4 mad(float4x4, float4x4, float4x4);
bool isfinite(half);
bool2 isfinite(half2);
bool3 isfinite(half3);
bool4 isfinite(half4);
bool isfinite(float);
bool2 isfinite(float2);
bool3 isfinite(float3);
bool4 isfinite(float4);
bool isinf(half);
bool2 isinf(half2);
bool3 isinf(half3);
bool4 isinf(half4);
bool isinf(float);
bool2 isinf(float2);
bool3 isinf(float3);
bool4 isinf(float4);
bool isnan(half);
bool2 isnan(half2);
bool3 isnan(half3);
bool4 isnan(half4);
bool isnan(float);
bool2 isnan(float2);
bool3 isnan(float3);
bool4 isnan(float4);
bool isnormal(half);
bool2 isnormal(half2);
bool3 isnormal(half3);
bool4 isnormal(half4);
bool isnormal(float);
bool2 isnormal(float2);
bool3 isnormal(float3);
bool4 isnormal(float4);
bool isordered(half, half);
bool2 isordered(half2, half2);
bool3 isordered(half3, half3);
bool4 isordered(half4, half4);
bool isordered(float, float);
bool2 isordered(float2, float2);
bool3 isordered(float3, float3);
bool4 isordered(float4, float4);
bool isunordered(half, half);
bool2 isunordered(half2, half2);
bool3 isunordered(half3, half3);
bool4 isunordered(half4, half4);
bool isunordered(float, float);
bool2 isunordered(float2, float2);
bool3 isunordered(float3, float3);
bool4 isunordered(float4, float4);
uchar abs(uchar);
uchar2 abs(uchar2);
uchar3 abs(uchar3);
uchar4 abs(uchar4);
ushort abs(ushort);
ushort2 abs(ushort2);
ushort3 abs(ushort3);
ushort4 abs(ushort4);
uint abs(uint);
uint2 abs(uint2);
uint3 abs(uint3);
uint4 abs(uint4);
char abs(char);
char2 abs(char2);
char3 abs(char3);
char4 abs(char4);
short abs(short);
short2 abs(short2);
short3 abs(short3);
short4 abs(short4);
int abs(int);
int2 abs(int2);
int3 abs(int3);
int4 abs(int4);
half abs(half);
half2 abs(half2);
half3 abs(half3);
half4 abs(half4);
half2x2 abs(half2x2);
half2x3 abs(half2x3);
half2x4 abs(half2x4);
half3x2 abs(half3x2);
half3x3 abs(half3x3);
half3x4 abs(half3x4);
half4x2 abs(half4x2);
half4x3 abs(half4x3);
half4x4 abs(half4x4);
float abs(float);
float2 abs(float2);
float3 abs(float3);
float4 abs(float4);
float2x2 abs(float2x2);
float2x3 abs(float2x3);
float2x4 abs(float2x4);
float3x2 abs(float3x2);
float3x3 abs(float3x3);
float3x4 abs(float3x4);
float4x2 abs(float4x2);
float4x3 abs(float4x3);
float4x4 abs(float4x4);
uchar min(uchar, uchar);
uchar2 min(uchar2, uchar2);
uchar3 min(uchar3, uchar3);
uchar4 min(uchar4, uchar4);
ushort min(ushort, ushort);
ushort2 min(ushort2, ushort2);
ushort3 min(ushort3, ushort3);
ushort4 min(ushort4, ushort4);
uint min(uint, uint);
uint2 min(uint2, uint2);
uint3 min(uint3, uint3);
uint4 min(uint4, uint4);
char min(char, char);
char2 min(char2, char2);
char3 min(char3, char3);
char4 min(char4, char4);
short min(short, short);
short2 min(short2, short2);
short3 min(short3, short3);
short4 min(short4, short4);
int min(int, int);
int2 min(int2, int2);
int3 min(int3, int3);
int4 min(int4, int4);
half min(half, half);
half2 min(half2, half2);
half3 min(half3, half3);
half4 min(half4, half4);
half2x2 min(half2x2, half2x2);
half2x3 min(half2x3, half2x3);
half2x4 min(half2x4, half2x4);
half3x2 min(half3x2, half3x2);
half3x3 min(half3x3, half3x3);
half3x4 min(half3x4, half3x4);
half4x2 min(half4x2, half4x2);
half4x3 min(half4x3, half4x3);
half4x4 min(half4x4, half4x4);
float min(float, float);
float2 min(float2, float2);
float3 min(float3, float3);
float4 min(float4, float4);
float2x2 min(float2x2, float2x2);
float2x3 min(float2x3, float2x3);
float2x4 min(float2x4, float2x4);
float3x2 min(float3x2, float3x2);
float3x3 min(float3x3, float3x3);
float3x4 min(float3x4, float3x4);
float4x2 min(float4x2, float4x2);
float4x3 min(float4x3, float4x3);
float4x4 min(float4x4, float4x4);
uchar max(uchar, uchar);
uchar2 max(uchar2, uchar2);
uchar3 max(uchar3, uchar3);
uchar4 max(uchar4, uchar4);
ushort max(ushort, ushort);
ushort2 max(ushort2, ushort2);
ushort3 max(ushort3, ushort3);
ushort4 max(ushort4, ushort4);
uint max(uint, uint);
uint2 max(uint2, uint2);
uint3 max(uint3, uint3);
uint4 max(uint4, uint4);
char max(char, char);
char2 max(char2, char2);
char3 max(char3, char3);
char4 max(char4, char4);
short max(short, short);
short2 max(short2, short2);
short3 max(short3, short3);
short4 max(short4, short4);
int max(int, int);
int2 max(int2, int2);
int3 max(int3, int3);
int4 max(int4, int4);
half max(half, half);
half2 max(half2, half2);
half3 max(half3, half3);
half4 max(half4, half4);
half2x2 max(half2x2, half2x2);
half2x3 max(half2x3, half2x3);
half2x4 max(half2x4, half2x4);
half3x2 max(half3x2, half3x2);
half3x3 max(half3x3, half3x3);
half3x4 max(half3x4, half3x4);
half4x2 max(half4x2, half4x2);
half4x3 max(half4x3, half4x3);
half4x4 max(half4x4, half4x4);
float max(float, float);
float2 max(float2, float2);
float3 max(float3, float3);
float4 max(float4, float4);
float2x2 max(float2x2, float2x2);
float2x3 max(float2x3, float2x3);
float2x4 max(float2x4, float2x4);
float3x2 max(float3x2, float3x2);
float3x3 max(float3x3, float3x3);
float3x4 max(float3x4, float3x4);
float4x2 max(float4x2, float4x2);
float4x3 max(float4x3, float4x3);
float4x4 max(float4x4, float4x4);
uchar clamp(uchar, uchar, uchar);
uchar2 clamp(uchar2, uchar2, uchar2);
uchar3 clamp(uchar3, uchar3, uchar3);
uchar4 clamp(uchar4, uchar4, uchar4);
ushort clamp(ushort, ushort, ushort);
ushort2 clamp(ushort2, ushort2, ushort2);
ushort3 clamp(ushort3, ushort3, ushort3);
ushort4 clamp(ushort4, ushort4, ushort4);
uint clamp(uint, uint, uint);
uint2 clamp(uint2, uint2, uint2);
uint3 clamp(uint3, uint3, uint3);
uint4 clamp(uint4, uint4, uint4);
char clamp(char, char, char);
char2 clamp(char2, char2, char2);
char3 clamp(char3, char3, char3);
char4 clamp(char4, char4, char4);
short clamp(short, short, short);
short2 clamp(short2, short2, short2);
short3 clamp(short3, short3, short3);
short4 clamp(short4, short4, short4);
int clamp(int, int, int);
int2 clamp(int2, int2, int2);
int3 clamp(int3, int3, int3);
int4 clamp(int4, int4, int4);
half clamp(half, half, half);
half2 clamp(half2, half2, half2);
half3 clamp(half3, half3, half3);
half4 clamp(half4, half4, half4);
half2x2 clamp(half2x2, half2x2, half2x2);
half2x3 clamp(half2x3, half2x3, half2x3);
half2x4 clamp(half2x4, half2x4, half2x4);
half3x2 clamp(half3x2, half3x2, half3x2);
half3x3 clamp(half3x3, half3x3, half3x3);
half3x4 clamp(half3x4, half3x4, half3x4);
half4x2 clamp(half4x2, half4x2, half4x2);
half4x3 clamp(half4x3, half4x3, half4x3);
half4x4 clamp(half4x4, half4x4, half4x4);
float clamp(float, float, float);
float2 clamp(float2, float2, float2);
float3 clamp(float3, float3, float3);
float4 clamp(float4, float4, float4);
float2x2 clamp(float2x2, float2x2, float2x2);
float2x3 clamp(float2x3, float2x3, float2x3);
float2x4 clamp(float2x4, float2x4, float2x4);
float3x2 clamp(float3x2, float3x2, float3x2);
float3x3 clamp(float3x3, float3x3, float3x3);
float3x4 clamp(float3x4, float3x4, float3x4);
float4x2 clamp(float4x2, float4x2, float4x2);
float4x3 clamp(float4x3, float4x3, float4x3);
float4x4 clamp(float4x4, float4x4, float4x4);
uchar modf(uchar, thread uchar*);
uchar2 modf(uchar2, thread uchar2*);
uchar3 modf(uchar3, thread uchar3*);
uchar4 modf(uchar4, thread uchar4*);
ushort modf(ushort, thread ushort*);
ushort2 modf(ushort2, thread ushort2*);
ushort3 modf(ushort3, thread ushort3*);
ushort4 modf(ushort4, thread ushort4*);
uint modf(uint, thread uint*);
uint2 modf(uint2, thread uint2*);
uint3 modf(uint3, thread uint3*);
uint4 modf(uint4, thread uint4*);
char modf(char, thread char*);
char2 modf(char2, thread char2*);
char3 modf(char3, thread char3*);
char4 modf(char4, thread char4*);
short modf(short, thread short*);
short2 modf(short2, thread short2*);
short3 modf(short3, thread short3*);
short4 modf(short4, thread short4*);
int modf(int, thread int*);
int2 modf(int2, thread int2*);
int3 modf(int3, thread int3*);
int4 modf(int4, thread int4*);
half modf(half, thread half*);
half2 modf(half2, thread half2*);
half3 modf(half3, thread half3*);
half4 modf(half4, thread half4*);
half2x2 modf(half2x2, thread half2x2*);
half2x3 modf(half2x3, thread half2x3*);
half2x4 modf(half2x4, thread half2x4*);
half3x2 modf(half3x2, thread half3x2*);
half3x3 modf(half3x3, thread half3x3*);
half3x4 modf(half3x4, thread half3x4*);
half4x2 modf(half4x2, thread half4x2*);
half4x3 modf(half4x3, thread half4x3*);
half4x4 modf(half4x4, thread half4x4*);
float modf(float, thread float*);
float2 modf(float2, thread float2*);
float3 modf(float3, thread float3*);
float4 modf(float4, thread float4*);
float2x2 modf(float2x2, thread float2x2*);
float2x3 modf(float2x3, thread float2x3*);
float2x4 modf(float2x4, thread float2x4*);
float3x2 modf(float3x2, thread float3x2*);
float3x3 modf(float3x3, thread float3x3*);
float3x4 modf(float3x4, thread float3x4*);
float4x2 modf(float4x2, thread float4x2*);
float4x3 modf(float4x3, thread float4x3*);
float4x4 modf(float4x4, thread float4x4*);
uchar count_bits(uchar);
uchar2 count_bits(uchar2);
uchar3 count_bits(uchar3);
uchar4 count_bits(uchar4);
ushort count_bits(ushort);
ushort2 count_bits(ushort2);
ushort3 count_bits(ushort3);
ushort4 count_bits(ushort4);
uint count_bits(uint);
uint2 count_bits(uint2);
uint3 count_bits(uint3);
uint4 count_bits(uint4);
uchar firstbithigh(uchar);
uchar2 firstbithigh(uchar2);
uchar3 firstbithigh(uchar3);
uchar4 firstbithigh(uchar4);
ushort firstbithigh(ushort);
ushort2 firstbithigh(ushort2);
ushort3 firstbithigh(ushort3);
ushort4 firstbithigh(ushort4);
uint firstbithigh(uint);
uint2 firstbithigh(uint2);
uint3 firstbithigh(uint3);
uint4 firstbithigh(uint4);
char firstbithigh(char);
char2 firstbithigh(char2);
char3 firstbithigh(char3);
char4 firstbithigh(char4);
short firstbithigh(short);
short2 firstbithigh(short2);
short3 firstbithigh(short3);
short4 firstbithigh(short4);
int firstbithigh(int);
int2 firstbithigh(int2);
int3 firstbithigh(int3);
int4 firstbithigh(int4);
uchar firstbitlow(uchar);
uchar2 firstbitlow(uchar2);
uchar3 firstbitlow(uchar3);
uchar4 firstbitlow(uchar4);
ushort firstbitlow(ushort);
ushort2 firstbitlow(ushort2);
ushort3 firstbitlow(ushort3);
ushort4 firstbitlow(ushort4);
uint firstbitlow(uint);
uint2 firstbitlow(uint2);
uint3 firstbitlow(uint3);
uint4 firstbitlow(uint4);
char firstbitlow(char);
char2 firstbitlow(char2);
char3 firstbitlow(char3);
char4 firstbitlow(char4);
short firstbitlow(short);
short2 firstbitlow(short2);
short3 firstbitlow(short3);
short4 firstbitlow(short4);
int firstbitlow(int);
int2 firstbitlow(int2);
int3 firstbitlow(int3);
int4 firstbitlow(int4);
uchar reversebits(uchar);
uchar2 reversebits(uchar2);
uchar3 reversebits(uchar3);
uchar4 reversebits(uchar4);
ushort reversebits(ushort);
ushort2 reversebits(ushort2);
ushort3 reversebits(ushort3);
ushort4 reversebits(ushort4);
uint reversebits(uint);
uint2 reversebits(uint2);
uint3 reversebits(uint3);
uint4 reversebits(uint4);
int sign(char);
int2 sign(char2);
int3 sign(char3);
int4 sign(char4);
int sign(short);
int2 sign(short2);
int3 sign(short3);
int4 sign(short4);
int sign(int);
int2 sign(int2);
int3 sign(int3);
int4 sign(int4);
int sign(half);
int2 sign(half2);
int3 sign(half3);
int4 sign(half4);
int sign(float);
int2 sign(float2);
int3 sign(float3);
int4 sign(float4);
float f16tof32(uint value);
float1 f16tof32(uint1 value);
float2 f16tof32(uint2 value);
float3 f16tof32(uint3 value);
float4 f16tof32(uint4 value);
uint f32tof16(float value);
uint1 f32tof16(float1 value);
uint2 f32tof16(float2 value);
uint3 f32tof16(float3 value);
uint4 f32tof16(float4 value);
uint4 msad4(uint, uint2, uint4);
void InterlockedAdd(thread atomic_uint*, uint, thread uint*);
void InterlockedAdd(thread atomic_int*, int, thread int*);
void InterlockedAnd(thread atomic_uint*, uint, thread uint*);
void InterlockedAnd(thread atomic_int*, int, thread int*);
void InterlockedCompareExchange(thread atomic_uint*, uint, uint, thread uint*);
void InterlockedCompareExchange(thread atomic_int*, int, int, thread int*);
void InterlockedExchange(thread atomic_uint*, uint, thread uint*);
void InterlockedExchange(thread atomic_int*, int, thread int*);
void InterlockedExchange(thread atomic_uint*, uint, thread uint*);
void InterlockedMax(thread atomic_int*, int, thread int*);
void InterlockedMax(thread atomic_uint*, uint, thread uint*);
void InterlockedMin(thread atomic_int*, int, thread int*);
void InterlockedOr(thread atomic_uint*, uint, thread uint*);
void InterlockedOr(thread atomic_int*, int, thread int*);
void InterlockedXor(thread atomic_uint*, uint, thread uint*);
void InterlockedXor(thread atomic_int*, int, thread int*);
uchar Sample(Texture1D<uchar>, sampler, float location);
uchar Sample(Texture1D<uchar>, sampler, float location, int offset);
uchar Load(Texture1D<uchar>, int2 location);
uchar Load(Texture1D<uchar>, int2 location, int offset);
void GetDimensions(Texture1D<uchar>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uchar Sample(Texture1DArray<uchar>, sampler, float2 location);
uchar Sample(Texture1DArray<uchar>, sampler, float2 location, int offset);
uchar Load(Texture1DArray<uchar>, int3 location);
uchar Load(Texture1DArray<uchar>, int3 location, int offset);
void GetDimensions(Texture1DArray<uchar>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uchar Sample(Texture2D<uchar>, sampler, float2 location);
uchar Sample(Texture2D<uchar>, sampler, float2 location, int2 offset);
uchar SampleBias(Texture2D<uchar>, sampler, float2 location, float Bias);
uchar SampleBias(Texture2D<uchar>, sampler, float2 location, float Bias, int2 offset);
uchar SampleGrad(Texture2D<uchar>, sampler, float2 location, float2 DDX, float2 DDY);
uchar SampleGrad(Texture2D<uchar>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uchar SampleLevel(Texture2D<uchar>, sampler, float2 location, float LOD);
uchar SampleLevel(Texture2D<uchar>, sampler, float2 location, float LOD, int2 offset);
uchar4 Gather(Texture2D<uchar>, sampler, float2 location);
uchar4 Gather(Texture2D<uchar>, sampler, float2 location, int2 offset);
uchar4 GatherRed(Texture2D<uchar>, sampler, float2 location);
uchar4 GatherRed(Texture2D<uchar>, sampler, float2 location, int2 offset);
uchar4 GatherGreen(Texture2D<uchar>, sampler, float2 location);
uchar4 GatherGreen(Texture2D<uchar>, sampler, float2 location, int2 offset);
uchar4 GatherBlue(Texture2D<uchar>, sampler, float2 location);
uchar4 GatherBlue(Texture2D<uchar>, sampler, float2 location, int2 offset);
uchar4 GatherAlpha(Texture2D<uchar>, sampler, float2 location);
uchar4 GatherAlpha(Texture2D<uchar>, sampler, float2 location, int2 offset);
uchar Load(Texture2D<uchar>, int3 location);
uchar Load(Texture2D<uchar>, int3 location, int2 offset);
void GetDimensions(Texture2D<uchar>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uchar Sample(Texture2DArray<uchar>, sampler, float3 location);
uchar Sample(Texture2DArray<uchar>, sampler, float3 location, int2 offset);
uchar SampleBias(Texture2DArray<uchar>, sampler, float3 location, float Bias);
uchar SampleBias(Texture2DArray<uchar>, sampler, float3 location, float Bias, int2 offset);
uchar SampleGrad(Texture2DArray<uchar>, sampler, float3 location, float2 DDX, float2 DDY);
uchar SampleGrad(Texture2DArray<uchar>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uchar SampleLevel(Texture2DArray<uchar>, sampler, float3 location, float LOD);
uchar SampleLevel(Texture2DArray<uchar>, sampler, float3 location, float LOD, int2 offset);
uchar4 Gather(Texture2DArray<uchar>, sampler, float3 location);
uchar4 Gather(Texture2DArray<uchar>, sampler, float3 location, int2 offset);
uchar4 GatherRed(Texture2DArray<uchar>, sampler, float3 location);
uchar4 GatherRed(Texture2DArray<uchar>, sampler, float3 location, int2 offset);
uchar4 GatherGreen(Texture2DArray<uchar>, sampler, float3 location);
uchar4 GatherGreen(Texture2DArray<uchar>, sampler, float3 location, int2 offset);
uchar4 GatherBlue(Texture2DArray<uchar>, sampler, float3 location);
uchar4 GatherBlue(Texture2DArray<uchar>, sampler, float3 location, int2 offset);
uchar4 GatherAlpha(Texture2DArray<uchar>, sampler, float3 location);
uchar4 GatherAlpha(Texture2DArray<uchar>, sampler, float3 location, int2 offset);
uchar Load(Texture2DArray<uchar>, int4 location);
uchar Load(Texture2DArray<uchar>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uchar>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uchar Sample(Texture3D<uchar>, sampler, float3 location);
uchar Sample(Texture3D<uchar>, sampler, float3 location, int3 offset);
uchar4 Gather(Texture3D<uchar>, sampler, float3 location);
uchar4 Gather(Texture3D<uchar>, sampler, float3 location, int3 offset);
uchar4 GatherRed(Texture3D<uchar>, sampler, float3 location);
uchar4 GatherRed(Texture3D<uchar>, sampler, float3 location, int3 offset);
uchar4 GatherGreen(Texture3D<uchar>, sampler, float3 location);
uchar4 GatherGreen(Texture3D<uchar>, sampler, float3 location, int3 offset);
uchar4 GatherBlue(Texture3D<uchar>, sampler, float3 location);
uchar4 GatherBlue(Texture3D<uchar>, sampler, float3 location, int3 offset);
uchar4 GatherAlpha(Texture3D<uchar>, sampler, float3 location);
uchar4 GatherAlpha(Texture3D<uchar>, sampler, float3 location, int3 offset);
uchar Load(Texture3D<uchar>, int4 location);
uchar Load(Texture3D<uchar>, int4 location, int3 offset);
void GetDimensions(Texture3D<uchar>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uchar Sample(TextureCube<uchar>, sampler, float3 location);
uchar SampleBias(TextureCube<uchar>, sampler, float3 location, float Bias);
uchar SampleGrad(TextureCube<uchar>, sampler, float3 location, float3 DDX, float3 DDY);
uchar SampleLevel(TextureCube<uchar>, sampler, float3 location, float LOD);
uchar4 Gather(TextureCube<uchar>, sampler, float3 location);
uchar4 GatherRed(TextureCube<uchar>, sampler, float3 location);
uchar4 GatherGreen(TextureCube<uchar>, sampler, float3 location);
uchar4 GatherBlue(TextureCube<uchar>, sampler, float3 location);
uchar4 GatherAlpha(TextureCube<uchar>, sampler, float3 location);
void GetDimensions(TextureCube<uchar>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uchar>, thread uint* Width);
void GetDimensions(RWTexture1D<uchar>, thread float* Width);
uchar Load(RWTexture1D<uchar>, int location);
void Store(RWTexture1D<uchar>, uchar, uint location);
void GetDimensions(RWTexture1DArray<uchar>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uchar>, thread float* Width, thread uint* Elements);
uchar Load(RWTexture1DArray<uchar>, int2 location);
void Store(RWTexture1DArray<uchar>, uchar, uint2 location);
void GetDimensions(RWTexture2D<uchar>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uchar>, thread float* Width, thread float* Height);
uchar Load(RWTexture2D<uchar>, int2 location);
void Store(RWTexture2D<uchar>, uchar, uint2 location);
void GetDimensions(RWTexture2DArray<uchar>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uchar>, thread float* Width, thread float* Height, thread float* Elements);
uchar Load(RWTexture2DArray<uchar>, int3 location);
void Store(RWTexture2DArray<uchar>, uchar, uint3 location);
void GetDimensions(RWTexture3D<uchar>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uchar>, thread float* Width, thread float* Height, thread float* Depth);
uchar Load(RWTexture3D<uchar>, int3 location);
void Store(RWTexture3D<uchar>, uchar, uint3 location);
uchar2 Sample(Texture1D<uchar2>, sampler, float location);
uchar2 Sample(Texture1D<uchar2>, sampler, float location, int offset);
uchar2 Load(Texture1D<uchar2>, int2 location);
uchar2 Load(Texture1D<uchar2>, int2 location, int offset);
void GetDimensions(Texture1D<uchar2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uchar2 Sample(Texture1DArray<uchar2>, sampler, float2 location);
uchar2 Sample(Texture1DArray<uchar2>, sampler, float2 location, int offset);
uchar2 Load(Texture1DArray<uchar2>, int3 location);
uchar2 Load(Texture1DArray<uchar2>, int3 location, int offset);
void GetDimensions(Texture1DArray<uchar2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uchar2 Sample(Texture2D<uchar2>, sampler, float2 location);
uchar2 Sample(Texture2D<uchar2>, sampler, float2 location, int2 offset);
uchar2 SampleBias(Texture2D<uchar2>, sampler, float2 location, float Bias);
uchar2 SampleBias(Texture2D<uchar2>, sampler, float2 location, float Bias, int2 offset);
uchar2 SampleGrad(Texture2D<uchar2>, sampler, float2 location, float2 DDX, float2 DDY);
uchar2 SampleGrad(Texture2D<uchar2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uchar2 SampleLevel(Texture2D<uchar2>, sampler, float2 location, float LOD);
uchar2 SampleLevel(Texture2D<uchar2>, sampler, float2 location, float LOD, int2 offset);
uchar4 Gather(Texture2D<uchar2>, sampler, float2 location);
uchar4 Gather(Texture2D<uchar2>, sampler, float2 location, int2 offset);
uchar4 GatherRed(Texture2D<uchar2>, sampler, float2 location);
uchar4 GatherRed(Texture2D<uchar2>, sampler, float2 location, int2 offset);
uchar4 GatherGreen(Texture2D<uchar2>, sampler, float2 location);
uchar4 GatherGreen(Texture2D<uchar2>, sampler, float2 location, int2 offset);
uchar4 GatherBlue(Texture2D<uchar2>, sampler, float2 location);
uchar4 GatherBlue(Texture2D<uchar2>, sampler, float2 location, int2 offset);
uchar4 GatherAlpha(Texture2D<uchar2>, sampler, float2 location);
uchar4 GatherAlpha(Texture2D<uchar2>, sampler, float2 location, int2 offset);
uchar2 Load(Texture2D<uchar2>, int3 location);
uchar2 Load(Texture2D<uchar2>, int3 location, int2 offset);
void GetDimensions(Texture2D<uchar2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uchar2 Sample(Texture2DArray<uchar2>, sampler, float3 location);
uchar2 Sample(Texture2DArray<uchar2>, sampler, float3 location, int2 offset);
uchar2 SampleBias(Texture2DArray<uchar2>, sampler, float3 location, float Bias);
uchar2 SampleBias(Texture2DArray<uchar2>, sampler, float3 location, float Bias, int2 offset);
uchar2 SampleGrad(Texture2DArray<uchar2>, sampler, float3 location, float2 DDX, float2 DDY);
uchar2 SampleGrad(Texture2DArray<uchar2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uchar2 SampleLevel(Texture2DArray<uchar2>, sampler, float3 location, float LOD);
uchar2 SampleLevel(Texture2DArray<uchar2>, sampler, float3 location, float LOD, int2 offset);
uchar4 Gather(Texture2DArray<uchar2>, sampler, float3 location);
uchar4 Gather(Texture2DArray<uchar2>, sampler, float3 location, int2 offset);
uchar4 GatherRed(Texture2DArray<uchar2>, sampler, float3 location);
uchar4 GatherRed(Texture2DArray<uchar2>, sampler, float3 location, int2 offset);
uchar4 GatherGreen(Texture2DArray<uchar2>, sampler, float3 location);
uchar4 GatherGreen(Texture2DArray<uchar2>, sampler, float3 location, int2 offset);
uchar4 GatherBlue(Texture2DArray<uchar2>, sampler, float3 location);
uchar4 GatherBlue(Texture2DArray<uchar2>, sampler, float3 location, int2 offset);
uchar4 GatherAlpha(Texture2DArray<uchar2>, sampler, float3 location);
uchar4 GatherAlpha(Texture2DArray<uchar2>, sampler, float3 location, int2 offset);
uchar2 Load(Texture2DArray<uchar2>, int4 location);
uchar2 Load(Texture2DArray<uchar2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uchar2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uchar2 Sample(Texture3D<uchar2>, sampler, float3 location);
uchar2 Sample(Texture3D<uchar2>, sampler, float3 location, int3 offset);
uchar4 Gather(Texture3D<uchar2>, sampler, float3 location);
uchar4 Gather(Texture3D<uchar2>, sampler, float3 location, int3 offset);
uchar4 GatherRed(Texture3D<uchar2>, sampler, float3 location);
uchar4 GatherRed(Texture3D<uchar2>, sampler, float3 location, int3 offset);
uchar4 GatherGreen(Texture3D<uchar2>, sampler, float3 location);
uchar4 GatherGreen(Texture3D<uchar2>, sampler, float3 location, int3 offset);
uchar4 GatherBlue(Texture3D<uchar2>, sampler, float3 location);
uchar4 GatherBlue(Texture3D<uchar2>, sampler, float3 location, int3 offset);
uchar4 GatherAlpha(Texture3D<uchar2>, sampler, float3 location);
uchar4 GatherAlpha(Texture3D<uchar2>, sampler, float3 location, int3 offset);
uchar2 Load(Texture3D<uchar2>, int4 location);
uchar2 Load(Texture3D<uchar2>, int4 location, int3 offset);
void GetDimensions(Texture3D<uchar2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uchar2 Sample(TextureCube<uchar2>, sampler, float3 location);
uchar2 SampleBias(TextureCube<uchar2>, sampler, float3 location, float Bias);
uchar2 SampleGrad(TextureCube<uchar2>, sampler, float3 location, float3 DDX, float3 DDY);
uchar2 SampleLevel(TextureCube<uchar2>, sampler, float3 location, float LOD);
uchar4 Gather(TextureCube<uchar2>, sampler, float3 location);
uchar4 GatherRed(TextureCube<uchar2>, sampler, float3 location);
uchar4 GatherGreen(TextureCube<uchar2>, sampler, float3 location);
uchar4 GatherBlue(TextureCube<uchar2>, sampler, float3 location);
uchar4 GatherAlpha(TextureCube<uchar2>, sampler, float3 location);
void GetDimensions(TextureCube<uchar2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uchar2>, thread uint* Width);
void GetDimensions(RWTexture1D<uchar2>, thread float* Width);
uchar2 Load(RWTexture1D<uchar2>, int location);
void Store(RWTexture1D<uchar2>, uchar2, uint location);
void GetDimensions(RWTexture1DArray<uchar2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uchar2>, thread float* Width, thread uint* Elements);
uchar2 Load(RWTexture1DArray<uchar2>, int2 location);
void Store(RWTexture1DArray<uchar2>, uchar2, uint2 location);
void GetDimensions(RWTexture2D<uchar2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uchar2>, thread float* Width, thread float* Height);
uchar2 Load(RWTexture2D<uchar2>, int2 location);
void Store(RWTexture2D<uchar2>, uchar2, uint2 location);
void GetDimensions(RWTexture2DArray<uchar2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uchar2>, thread float* Width, thread float* Height, thread float* Elements);
uchar2 Load(RWTexture2DArray<uchar2>, int3 location);
void Store(RWTexture2DArray<uchar2>, uchar2, uint3 location);
void GetDimensions(RWTexture3D<uchar2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uchar2>, thread float* Width, thread float* Height, thread float* Depth);
uchar2 Load(RWTexture3D<uchar2>, int3 location);
void Store(RWTexture3D<uchar2>, uchar2, uint3 location);
uchar3 Sample(Texture1D<uchar3>, sampler, float location);
uchar3 Sample(Texture1D<uchar3>, sampler, float location, int offset);
uchar3 Load(Texture1D<uchar3>, int2 location);
uchar3 Load(Texture1D<uchar3>, int2 location, int offset);
void GetDimensions(Texture1D<uchar3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uchar3 Sample(Texture1DArray<uchar3>, sampler, float2 location);
uchar3 Sample(Texture1DArray<uchar3>, sampler, float2 location, int offset);
uchar3 Load(Texture1DArray<uchar3>, int3 location);
uchar3 Load(Texture1DArray<uchar3>, int3 location, int offset);
void GetDimensions(Texture1DArray<uchar3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uchar3 Sample(Texture2D<uchar3>, sampler, float2 location);
uchar3 Sample(Texture2D<uchar3>, sampler, float2 location, int2 offset);
uchar3 SampleBias(Texture2D<uchar3>, sampler, float2 location, float Bias);
uchar3 SampleBias(Texture2D<uchar3>, sampler, float2 location, float Bias, int2 offset);
uchar3 SampleGrad(Texture2D<uchar3>, sampler, float2 location, float2 DDX, float2 DDY);
uchar3 SampleGrad(Texture2D<uchar3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uchar3 SampleLevel(Texture2D<uchar3>, sampler, float2 location, float LOD);
uchar3 SampleLevel(Texture2D<uchar3>, sampler, float2 location, float LOD, int2 offset);
uchar4 Gather(Texture2D<uchar3>, sampler, float2 location);
uchar4 Gather(Texture2D<uchar3>, sampler, float2 location, int2 offset);
uchar4 GatherRed(Texture2D<uchar3>, sampler, float2 location);
uchar4 GatherRed(Texture2D<uchar3>, sampler, float2 location, int2 offset);
uchar4 GatherGreen(Texture2D<uchar3>, sampler, float2 location);
uchar4 GatherGreen(Texture2D<uchar3>, sampler, float2 location, int2 offset);
uchar4 GatherBlue(Texture2D<uchar3>, sampler, float2 location);
uchar4 GatherBlue(Texture2D<uchar3>, sampler, float2 location, int2 offset);
uchar4 GatherAlpha(Texture2D<uchar3>, sampler, float2 location);
uchar4 GatherAlpha(Texture2D<uchar3>, sampler, float2 location, int2 offset);
uchar3 Load(Texture2D<uchar3>, int3 location);
uchar3 Load(Texture2D<uchar3>, int3 location, int2 offset);
void GetDimensions(Texture2D<uchar3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uchar3 Sample(Texture2DArray<uchar3>, sampler, float3 location);
uchar3 Sample(Texture2DArray<uchar3>, sampler, float3 location, int2 offset);
uchar3 SampleBias(Texture2DArray<uchar3>, sampler, float3 location, float Bias);
uchar3 SampleBias(Texture2DArray<uchar3>, sampler, float3 location, float Bias, int2 offset);
uchar3 SampleGrad(Texture2DArray<uchar3>, sampler, float3 location, float2 DDX, float2 DDY);
uchar3 SampleGrad(Texture2DArray<uchar3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uchar3 SampleLevel(Texture2DArray<uchar3>, sampler, float3 location, float LOD);
uchar3 SampleLevel(Texture2DArray<uchar3>, sampler, float3 location, float LOD, int2 offset);
uchar4 Gather(Texture2DArray<uchar3>, sampler, float3 location);
uchar4 Gather(Texture2DArray<uchar3>, sampler, float3 location, int2 offset);
uchar4 GatherRed(Texture2DArray<uchar3>, sampler, float3 location);
uchar4 GatherRed(Texture2DArray<uchar3>, sampler, float3 location, int2 offset);
uchar4 GatherGreen(Texture2DArray<uchar3>, sampler, float3 location);
uchar4 GatherGreen(Texture2DArray<uchar3>, sampler, float3 location, int2 offset);
uchar4 GatherBlue(Texture2DArray<uchar3>, sampler, float3 location);
uchar4 GatherBlue(Texture2DArray<uchar3>, sampler, float3 location, int2 offset);
uchar4 GatherAlpha(Texture2DArray<uchar3>, sampler, float3 location);
uchar4 GatherAlpha(Texture2DArray<uchar3>, sampler, float3 location, int2 offset);
uchar3 Load(Texture2DArray<uchar3>, int4 location);
uchar3 Load(Texture2DArray<uchar3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uchar3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uchar3 Sample(Texture3D<uchar3>, sampler, float3 location);
uchar3 Sample(Texture3D<uchar3>, sampler, float3 location, int3 offset);
uchar4 Gather(Texture3D<uchar3>, sampler, float3 location);
uchar4 Gather(Texture3D<uchar3>, sampler, float3 location, int3 offset);
uchar4 GatherRed(Texture3D<uchar3>, sampler, float3 location);
uchar4 GatherRed(Texture3D<uchar3>, sampler, float3 location, int3 offset);
uchar4 GatherGreen(Texture3D<uchar3>, sampler, float3 location);
uchar4 GatherGreen(Texture3D<uchar3>, sampler, float3 location, int3 offset);
uchar4 GatherBlue(Texture3D<uchar3>, sampler, float3 location);
uchar4 GatherBlue(Texture3D<uchar3>, sampler, float3 location, int3 offset);
uchar4 GatherAlpha(Texture3D<uchar3>, sampler, float3 location);
uchar4 GatherAlpha(Texture3D<uchar3>, sampler, float3 location, int3 offset);
uchar3 Load(Texture3D<uchar3>, int4 location);
uchar3 Load(Texture3D<uchar3>, int4 location, int3 offset);
void GetDimensions(Texture3D<uchar3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uchar3 Sample(TextureCube<uchar3>, sampler, float3 location);
uchar3 SampleBias(TextureCube<uchar3>, sampler, float3 location, float Bias);
uchar3 SampleGrad(TextureCube<uchar3>, sampler, float3 location, float3 DDX, float3 DDY);
uchar3 SampleLevel(TextureCube<uchar3>, sampler, float3 location, float LOD);
uchar4 Gather(TextureCube<uchar3>, sampler, float3 location);
uchar4 GatherRed(TextureCube<uchar3>, sampler, float3 location);
uchar4 GatherGreen(TextureCube<uchar3>, sampler, float3 location);
uchar4 GatherBlue(TextureCube<uchar3>, sampler, float3 location);
uchar4 GatherAlpha(TextureCube<uchar3>, sampler, float3 location);
void GetDimensions(TextureCube<uchar3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uchar3>, thread uint* Width);
void GetDimensions(RWTexture1D<uchar3>, thread float* Width);
uchar3 Load(RWTexture1D<uchar3>, int location);
void Store(RWTexture1D<uchar3>, uchar3, uint location);
void GetDimensions(RWTexture1DArray<uchar3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uchar3>, thread float* Width, thread uint* Elements);
uchar3 Load(RWTexture1DArray<uchar3>, int2 location);
void Store(RWTexture1DArray<uchar3>, uchar3, uint2 location);
void GetDimensions(RWTexture2D<uchar3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uchar3>, thread float* Width, thread float* Height);
uchar3 Load(RWTexture2D<uchar3>, int2 location);
void Store(RWTexture2D<uchar3>, uchar3, uint2 location);
void GetDimensions(RWTexture2DArray<uchar3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uchar3>, thread float* Width, thread float* Height, thread float* Elements);
uchar3 Load(RWTexture2DArray<uchar3>, int3 location);
void Store(RWTexture2DArray<uchar3>, uchar3, uint3 location);
void GetDimensions(RWTexture3D<uchar3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uchar3>, thread float* Width, thread float* Height, thread float* Depth);
uchar3 Load(RWTexture3D<uchar3>, int3 location);
void Store(RWTexture3D<uchar3>, uchar3, uint3 location);
uchar4 Sample(Texture1D<uchar4>, sampler, float location);
uchar4 Sample(Texture1D<uchar4>, sampler, float location, int offset);
uchar4 Load(Texture1D<uchar4>, int2 location);
uchar4 Load(Texture1D<uchar4>, int2 location, int offset);
void GetDimensions(Texture1D<uchar4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uchar4 Sample(Texture1DArray<uchar4>, sampler, float2 location);
uchar4 Sample(Texture1DArray<uchar4>, sampler, float2 location, int offset);
uchar4 Load(Texture1DArray<uchar4>, int3 location);
uchar4 Load(Texture1DArray<uchar4>, int3 location, int offset);
void GetDimensions(Texture1DArray<uchar4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uchar4 Sample(Texture2D<uchar4>, sampler, float2 location);
uchar4 Sample(Texture2D<uchar4>, sampler, float2 location, int2 offset);
uchar4 SampleBias(Texture2D<uchar4>, sampler, float2 location, float Bias);
uchar4 SampleBias(Texture2D<uchar4>, sampler, float2 location, float Bias, int2 offset);
uchar4 SampleGrad(Texture2D<uchar4>, sampler, float2 location, float2 DDX, float2 DDY);
uchar4 SampleGrad(Texture2D<uchar4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uchar4 SampleLevel(Texture2D<uchar4>, sampler, float2 location, float LOD);
uchar4 SampleLevel(Texture2D<uchar4>, sampler, float2 location, float LOD, int2 offset);
uchar4 Gather(Texture2D<uchar4>, sampler, float2 location);
uchar4 Gather(Texture2D<uchar4>, sampler, float2 location, int2 offset);
uchar4 GatherRed(Texture2D<uchar4>, sampler, float2 location);
uchar4 GatherRed(Texture2D<uchar4>, sampler, float2 location, int2 offset);
uchar4 GatherGreen(Texture2D<uchar4>, sampler, float2 location);
uchar4 GatherGreen(Texture2D<uchar4>, sampler, float2 location, int2 offset);
uchar4 GatherBlue(Texture2D<uchar4>, sampler, float2 location);
uchar4 GatherBlue(Texture2D<uchar4>, sampler, float2 location, int2 offset);
uchar4 GatherAlpha(Texture2D<uchar4>, sampler, float2 location);
uchar4 GatherAlpha(Texture2D<uchar4>, sampler, float2 location, int2 offset);
uchar4 Load(Texture2D<uchar4>, int3 location);
uchar4 Load(Texture2D<uchar4>, int3 location, int2 offset);
void GetDimensions(Texture2D<uchar4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uchar4 Sample(Texture2DArray<uchar4>, sampler, float3 location);
uchar4 Sample(Texture2DArray<uchar4>, sampler, float3 location, int2 offset);
uchar4 SampleBias(Texture2DArray<uchar4>, sampler, float3 location, float Bias);
uchar4 SampleBias(Texture2DArray<uchar4>, sampler, float3 location, float Bias, int2 offset);
uchar4 SampleGrad(Texture2DArray<uchar4>, sampler, float3 location, float2 DDX, float2 DDY);
uchar4 SampleGrad(Texture2DArray<uchar4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uchar4 SampleLevel(Texture2DArray<uchar4>, sampler, float3 location, float LOD);
uchar4 SampleLevel(Texture2DArray<uchar4>, sampler, float3 location, float LOD, int2 offset);
uchar4 Gather(Texture2DArray<uchar4>, sampler, float3 location);
uchar4 Gather(Texture2DArray<uchar4>, sampler, float3 location, int2 offset);
uchar4 GatherRed(Texture2DArray<uchar4>, sampler, float3 location);
uchar4 GatherRed(Texture2DArray<uchar4>, sampler, float3 location, int2 offset);
uchar4 GatherGreen(Texture2DArray<uchar4>, sampler, float3 location);
uchar4 GatherGreen(Texture2DArray<uchar4>, sampler, float3 location, int2 offset);
uchar4 GatherBlue(Texture2DArray<uchar4>, sampler, float3 location);
uchar4 GatherBlue(Texture2DArray<uchar4>, sampler, float3 location, int2 offset);
uchar4 GatherAlpha(Texture2DArray<uchar4>, sampler, float3 location);
uchar4 GatherAlpha(Texture2DArray<uchar4>, sampler, float3 location, int2 offset);
uchar4 Load(Texture2DArray<uchar4>, int4 location);
uchar4 Load(Texture2DArray<uchar4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uchar4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uchar4 Sample(Texture3D<uchar4>, sampler, float3 location);
uchar4 Sample(Texture3D<uchar4>, sampler, float3 location, int3 offset);
uchar4 Gather(Texture3D<uchar4>, sampler, float3 location);
uchar4 Gather(Texture3D<uchar4>, sampler, float3 location, int3 offset);
uchar4 GatherRed(Texture3D<uchar4>, sampler, float3 location);
uchar4 GatherRed(Texture3D<uchar4>, sampler, float3 location, int3 offset);
uchar4 GatherGreen(Texture3D<uchar4>, sampler, float3 location);
uchar4 GatherGreen(Texture3D<uchar4>, sampler, float3 location, int3 offset);
uchar4 GatherBlue(Texture3D<uchar4>, sampler, float3 location);
uchar4 GatherBlue(Texture3D<uchar4>, sampler, float3 location, int3 offset);
uchar4 GatherAlpha(Texture3D<uchar4>, sampler, float3 location);
uchar4 GatherAlpha(Texture3D<uchar4>, sampler, float3 location, int3 offset);
uchar4 Load(Texture3D<uchar4>, int4 location);
uchar4 Load(Texture3D<uchar4>, int4 location, int3 offset);
void GetDimensions(Texture3D<uchar4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uchar4 Sample(TextureCube<uchar4>, sampler, float3 location);
uchar4 SampleBias(TextureCube<uchar4>, sampler, float3 location, float Bias);
uchar4 SampleGrad(TextureCube<uchar4>, sampler, float3 location, float3 DDX, float3 DDY);
uchar4 SampleLevel(TextureCube<uchar4>, sampler, float3 location, float LOD);
uchar4 Gather(TextureCube<uchar4>, sampler, float3 location);
uchar4 GatherRed(TextureCube<uchar4>, sampler, float3 location);
uchar4 GatherGreen(TextureCube<uchar4>, sampler, float3 location);
uchar4 GatherBlue(TextureCube<uchar4>, sampler, float3 location);
uchar4 GatherAlpha(TextureCube<uchar4>, sampler, float3 location);
void GetDimensions(TextureCube<uchar4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uchar4>, thread uint* Width);
void GetDimensions(RWTexture1D<uchar4>, thread float* Width);
uchar4 Load(RWTexture1D<uchar4>, int location);
void Store(RWTexture1D<uchar4>, uchar4, uint location);
void GetDimensions(RWTexture1DArray<uchar4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uchar4>, thread float* Width, thread uint* Elements);
uchar4 Load(RWTexture1DArray<uchar4>, int2 location);
void Store(RWTexture1DArray<uchar4>, uchar4, uint2 location);
void GetDimensions(RWTexture2D<uchar4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uchar4>, thread float* Width, thread float* Height);
uchar4 Load(RWTexture2D<uchar4>, int2 location);
void Store(RWTexture2D<uchar4>, uchar4, uint2 location);
void GetDimensions(RWTexture2DArray<uchar4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uchar4>, thread float* Width, thread float* Height, thread float* Elements);
uchar4 Load(RWTexture2DArray<uchar4>, int3 location);
void Store(RWTexture2DArray<uchar4>, uchar4, uint3 location);
void GetDimensions(RWTexture3D<uchar4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uchar4>, thread float* Width, thread float* Height, thread float* Depth);
uchar4 Load(RWTexture3D<uchar4>, int3 location);
void Store(RWTexture3D<uchar4>, uchar4, uint3 location);
ushort Sample(Texture1D<ushort>, sampler, float location);
ushort Sample(Texture1D<ushort>, sampler, float location, int offset);
ushort Load(Texture1D<ushort>, int2 location);
ushort Load(Texture1D<ushort>, int2 location, int offset);
void GetDimensions(Texture1D<ushort>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
ushort Sample(Texture1DArray<ushort>, sampler, float2 location);
ushort Sample(Texture1DArray<ushort>, sampler, float2 location, int offset);
ushort Load(Texture1DArray<ushort>, int3 location);
ushort Load(Texture1DArray<ushort>, int3 location, int offset);
void GetDimensions(Texture1DArray<ushort>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
ushort Sample(Texture2D<ushort>, sampler, float2 location);
ushort Sample(Texture2D<ushort>, sampler, float2 location, int2 offset);
ushort SampleBias(Texture2D<ushort>, sampler, float2 location, float Bias);
ushort SampleBias(Texture2D<ushort>, sampler, float2 location, float Bias, int2 offset);
ushort SampleGrad(Texture2D<ushort>, sampler, float2 location, float2 DDX, float2 DDY);
ushort SampleGrad(Texture2D<ushort>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
ushort SampleLevel(Texture2D<ushort>, sampler, float2 location, float LOD);
ushort SampleLevel(Texture2D<ushort>, sampler, float2 location, float LOD, int2 offset);
ushort4 Gather(Texture2D<ushort>, sampler, float2 location);
ushort4 Gather(Texture2D<ushort>, sampler, float2 location, int2 offset);
ushort4 GatherRed(Texture2D<ushort>, sampler, float2 location);
ushort4 GatherRed(Texture2D<ushort>, sampler, float2 location, int2 offset);
ushort4 GatherGreen(Texture2D<ushort>, sampler, float2 location);
ushort4 GatherGreen(Texture2D<ushort>, sampler, float2 location, int2 offset);
ushort4 GatherBlue(Texture2D<ushort>, sampler, float2 location);
ushort4 GatherBlue(Texture2D<ushort>, sampler, float2 location, int2 offset);
ushort4 GatherAlpha(Texture2D<ushort>, sampler, float2 location);
ushort4 GatherAlpha(Texture2D<ushort>, sampler, float2 location, int2 offset);
ushort Load(Texture2D<ushort>, int3 location);
ushort Load(Texture2D<ushort>, int3 location, int2 offset);
void GetDimensions(Texture2D<ushort>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
ushort Sample(Texture2DArray<ushort>, sampler, float3 location);
ushort Sample(Texture2DArray<ushort>, sampler, float3 location, int2 offset);
ushort SampleBias(Texture2DArray<ushort>, sampler, float3 location, float Bias);
ushort SampleBias(Texture2DArray<ushort>, sampler, float3 location, float Bias, int2 offset);
ushort SampleGrad(Texture2DArray<ushort>, sampler, float3 location, float2 DDX, float2 DDY);
ushort SampleGrad(Texture2DArray<ushort>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
ushort SampleLevel(Texture2DArray<ushort>, sampler, float3 location, float LOD);
ushort SampleLevel(Texture2DArray<ushort>, sampler, float3 location, float LOD, int2 offset);
ushort4 Gather(Texture2DArray<ushort>, sampler, float3 location);
ushort4 Gather(Texture2DArray<ushort>, sampler, float3 location, int2 offset);
ushort4 GatherRed(Texture2DArray<ushort>, sampler, float3 location);
ushort4 GatherRed(Texture2DArray<ushort>, sampler, float3 location, int2 offset);
ushort4 GatherGreen(Texture2DArray<ushort>, sampler, float3 location);
ushort4 GatherGreen(Texture2DArray<ushort>, sampler, float3 location, int2 offset);
ushort4 GatherBlue(Texture2DArray<ushort>, sampler, float3 location);
ushort4 GatherBlue(Texture2DArray<ushort>, sampler, float3 location, int2 offset);
ushort4 GatherAlpha(Texture2DArray<ushort>, sampler, float3 location);
ushort4 GatherAlpha(Texture2DArray<ushort>, sampler, float3 location, int2 offset);
ushort Load(Texture2DArray<ushort>, int4 location);
ushort Load(Texture2DArray<ushort>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<ushort>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
ushort Sample(Texture3D<ushort>, sampler, float3 location);
ushort Sample(Texture3D<ushort>, sampler, float3 location, int3 offset);
ushort4 Gather(Texture3D<ushort>, sampler, float3 location);
ushort4 Gather(Texture3D<ushort>, sampler, float3 location, int3 offset);
ushort4 GatherRed(Texture3D<ushort>, sampler, float3 location);
ushort4 GatherRed(Texture3D<ushort>, sampler, float3 location, int3 offset);
ushort4 GatherGreen(Texture3D<ushort>, sampler, float3 location);
ushort4 GatherGreen(Texture3D<ushort>, sampler, float3 location, int3 offset);
ushort4 GatherBlue(Texture3D<ushort>, sampler, float3 location);
ushort4 GatherBlue(Texture3D<ushort>, sampler, float3 location, int3 offset);
ushort4 GatherAlpha(Texture3D<ushort>, sampler, float3 location);
ushort4 GatherAlpha(Texture3D<ushort>, sampler, float3 location, int3 offset);
ushort Load(Texture3D<ushort>, int4 location);
ushort Load(Texture3D<ushort>, int4 location, int3 offset);
void GetDimensions(Texture3D<ushort>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
ushort Sample(TextureCube<ushort>, sampler, float3 location);
ushort SampleBias(TextureCube<ushort>, sampler, float3 location, float Bias);
ushort SampleGrad(TextureCube<ushort>, sampler, float3 location, float3 DDX, float3 DDY);
ushort SampleLevel(TextureCube<ushort>, sampler, float3 location, float LOD);
ushort4 Gather(TextureCube<ushort>, sampler, float3 location);
ushort4 GatherRed(TextureCube<ushort>, sampler, float3 location);
ushort4 GatherGreen(TextureCube<ushort>, sampler, float3 location);
ushort4 GatherBlue(TextureCube<ushort>, sampler, float3 location);
ushort4 GatherAlpha(TextureCube<ushort>, sampler, float3 location);
void GetDimensions(TextureCube<ushort>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<ushort>, thread uint* Width);
void GetDimensions(RWTexture1D<ushort>, thread float* Width);
ushort Load(RWTexture1D<ushort>, int location);
void Store(RWTexture1D<ushort>, ushort, uint location);
void GetDimensions(RWTexture1DArray<ushort>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<ushort>, thread float* Width, thread uint* Elements);
ushort Load(RWTexture1DArray<ushort>, int2 location);
void Store(RWTexture1DArray<ushort>, ushort, uint2 location);
void GetDimensions(RWTexture2D<ushort>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<ushort>, thread float* Width, thread float* Height);
ushort Load(RWTexture2D<ushort>, int2 location);
void Store(RWTexture2D<ushort>, ushort, uint2 location);
void GetDimensions(RWTexture2DArray<ushort>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<ushort>, thread float* Width, thread float* Height, thread float* Elements);
ushort Load(RWTexture2DArray<ushort>, int3 location);
void Store(RWTexture2DArray<ushort>, ushort, uint3 location);
void GetDimensions(RWTexture3D<ushort>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<ushort>, thread float* Width, thread float* Height, thread float* Depth);
ushort Load(RWTexture3D<ushort>, int3 location);
void Store(RWTexture3D<ushort>, ushort, uint3 location);
ushort2 Sample(Texture1D<ushort2>, sampler, float location);
ushort2 Sample(Texture1D<ushort2>, sampler, float location, int offset);
ushort2 Load(Texture1D<ushort2>, int2 location);
ushort2 Load(Texture1D<ushort2>, int2 location, int offset);
void GetDimensions(Texture1D<ushort2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
ushort2 Sample(Texture1DArray<ushort2>, sampler, float2 location);
ushort2 Sample(Texture1DArray<ushort2>, sampler, float2 location, int offset);
ushort2 Load(Texture1DArray<ushort2>, int3 location);
ushort2 Load(Texture1DArray<ushort2>, int3 location, int offset);
void GetDimensions(Texture1DArray<ushort2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
ushort2 Sample(Texture2D<ushort2>, sampler, float2 location);
ushort2 Sample(Texture2D<ushort2>, sampler, float2 location, int2 offset);
ushort2 SampleBias(Texture2D<ushort2>, sampler, float2 location, float Bias);
ushort2 SampleBias(Texture2D<ushort2>, sampler, float2 location, float Bias, int2 offset);
ushort2 SampleGrad(Texture2D<ushort2>, sampler, float2 location, float2 DDX, float2 DDY);
ushort2 SampleGrad(Texture2D<ushort2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
ushort2 SampleLevel(Texture2D<ushort2>, sampler, float2 location, float LOD);
ushort2 SampleLevel(Texture2D<ushort2>, sampler, float2 location, float LOD, int2 offset);
ushort4 Gather(Texture2D<ushort2>, sampler, float2 location);
ushort4 Gather(Texture2D<ushort2>, sampler, float2 location, int2 offset);
ushort4 GatherRed(Texture2D<ushort2>, sampler, float2 location);
ushort4 GatherRed(Texture2D<ushort2>, sampler, float2 location, int2 offset);
ushort4 GatherGreen(Texture2D<ushort2>, sampler, float2 location);
ushort4 GatherGreen(Texture2D<ushort2>, sampler, float2 location, int2 offset);
ushort4 GatherBlue(Texture2D<ushort2>, sampler, float2 location);
ushort4 GatherBlue(Texture2D<ushort2>, sampler, float2 location, int2 offset);
ushort4 GatherAlpha(Texture2D<ushort2>, sampler, float2 location);
ushort4 GatherAlpha(Texture2D<ushort2>, sampler, float2 location, int2 offset);
ushort2 Load(Texture2D<ushort2>, int3 location);
ushort2 Load(Texture2D<ushort2>, int3 location, int2 offset);
void GetDimensions(Texture2D<ushort2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
ushort2 Sample(Texture2DArray<ushort2>, sampler, float3 location);
ushort2 Sample(Texture2DArray<ushort2>, sampler, float3 location, int2 offset);
ushort2 SampleBias(Texture2DArray<ushort2>, sampler, float3 location, float Bias);
ushort2 SampleBias(Texture2DArray<ushort2>, sampler, float3 location, float Bias, int2 offset);
ushort2 SampleGrad(Texture2DArray<ushort2>, sampler, float3 location, float2 DDX, float2 DDY);
ushort2 SampleGrad(Texture2DArray<ushort2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
ushort2 SampleLevel(Texture2DArray<ushort2>, sampler, float3 location, float LOD);
ushort2 SampleLevel(Texture2DArray<ushort2>, sampler, float3 location, float LOD, int2 offset);
ushort4 Gather(Texture2DArray<ushort2>, sampler, float3 location);
ushort4 Gather(Texture2DArray<ushort2>, sampler, float3 location, int2 offset);
ushort4 GatherRed(Texture2DArray<ushort2>, sampler, float3 location);
ushort4 GatherRed(Texture2DArray<ushort2>, sampler, float3 location, int2 offset);
ushort4 GatherGreen(Texture2DArray<ushort2>, sampler, float3 location);
ushort4 GatherGreen(Texture2DArray<ushort2>, sampler, float3 location, int2 offset);
ushort4 GatherBlue(Texture2DArray<ushort2>, sampler, float3 location);
ushort4 GatherBlue(Texture2DArray<ushort2>, sampler, float3 location, int2 offset);
ushort4 GatherAlpha(Texture2DArray<ushort2>, sampler, float3 location);
ushort4 GatherAlpha(Texture2DArray<ushort2>, sampler, float3 location, int2 offset);
ushort2 Load(Texture2DArray<ushort2>, int4 location);
ushort2 Load(Texture2DArray<ushort2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<ushort2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
ushort2 Sample(Texture3D<ushort2>, sampler, float3 location);
ushort2 Sample(Texture3D<ushort2>, sampler, float3 location, int3 offset);
ushort4 Gather(Texture3D<ushort2>, sampler, float3 location);
ushort4 Gather(Texture3D<ushort2>, sampler, float3 location, int3 offset);
ushort4 GatherRed(Texture3D<ushort2>, sampler, float3 location);
ushort4 GatherRed(Texture3D<ushort2>, sampler, float3 location, int3 offset);
ushort4 GatherGreen(Texture3D<ushort2>, sampler, float3 location);
ushort4 GatherGreen(Texture3D<ushort2>, sampler, float3 location, int3 offset);
ushort4 GatherBlue(Texture3D<ushort2>, sampler, float3 location);
ushort4 GatherBlue(Texture3D<ushort2>, sampler, float3 location, int3 offset);
ushort4 GatherAlpha(Texture3D<ushort2>, sampler, float3 location);
ushort4 GatherAlpha(Texture3D<ushort2>, sampler, float3 location, int3 offset);
ushort2 Load(Texture3D<ushort2>, int4 location);
ushort2 Load(Texture3D<ushort2>, int4 location, int3 offset);
void GetDimensions(Texture3D<ushort2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
ushort2 Sample(TextureCube<ushort2>, sampler, float3 location);
ushort2 SampleBias(TextureCube<ushort2>, sampler, float3 location, float Bias);
ushort2 SampleGrad(TextureCube<ushort2>, sampler, float3 location, float3 DDX, float3 DDY);
ushort2 SampleLevel(TextureCube<ushort2>, sampler, float3 location, float LOD);
ushort4 Gather(TextureCube<ushort2>, sampler, float3 location);
ushort4 GatherRed(TextureCube<ushort2>, sampler, float3 location);
ushort4 GatherGreen(TextureCube<ushort2>, sampler, float3 location);
ushort4 GatherBlue(TextureCube<ushort2>, sampler, float3 location);
ushort4 GatherAlpha(TextureCube<ushort2>, sampler, float3 location);
void GetDimensions(TextureCube<ushort2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<ushort2>, thread uint* Width);
void GetDimensions(RWTexture1D<ushort2>, thread float* Width);
ushort2 Load(RWTexture1D<ushort2>, int location);
void Store(RWTexture1D<ushort2>, ushort2, uint location);
void GetDimensions(RWTexture1DArray<ushort2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<ushort2>, thread float* Width, thread uint* Elements);
ushort2 Load(RWTexture1DArray<ushort2>, int2 location);
void Store(RWTexture1DArray<ushort2>, ushort2, uint2 location);
void GetDimensions(RWTexture2D<ushort2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<ushort2>, thread float* Width, thread float* Height);
ushort2 Load(RWTexture2D<ushort2>, int2 location);
void Store(RWTexture2D<ushort2>, ushort2, uint2 location);
void GetDimensions(RWTexture2DArray<ushort2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<ushort2>, thread float* Width, thread float* Height, thread float* Elements);
ushort2 Load(RWTexture2DArray<ushort2>, int3 location);
void Store(RWTexture2DArray<ushort2>, ushort2, uint3 location);
void GetDimensions(RWTexture3D<ushort2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<ushort2>, thread float* Width, thread float* Height, thread float* Depth);
ushort2 Load(RWTexture3D<ushort2>, int3 location);
void Store(RWTexture3D<ushort2>, ushort2, uint3 location);
ushort3 Sample(Texture1D<ushort3>, sampler, float location);
ushort3 Sample(Texture1D<ushort3>, sampler, float location, int offset);
ushort3 Load(Texture1D<ushort3>, int2 location);
ushort3 Load(Texture1D<ushort3>, int2 location, int offset);
void GetDimensions(Texture1D<ushort3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
ushort3 Sample(Texture1DArray<ushort3>, sampler, float2 location);
ushort3 Sample(Texture1DArray<ushort3>, sampler, float2 location, int offset);
ushort3 Load(Texture1DArray<ushort3>, int3 location);
ushort3 Load(Texture1DArray<ushort3>, int3 location, int offset);
void GetDimensions(Texture1DArray<ushort3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
ushort3 Sample(Texture2D<ushort3>, sampler, float2 location);
ushort3 Sample(Texture2D<ushort3>, sampler, float2 location, int2 offset);
ushort3 SampleBias(Texture2D<ushort3>, sampler, float2 location, float Bias);
ushort3 SampleBias(Texture2D<ushort3>, sampler, float2 location, float Bias, int2 offset);
ushort3 SampleGrad(Texture2D<ushort3>, sampler, float2 location, float2 DDX, float2 DDY);
ushort3 SampleGrad(Texture2D<ushort3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
ushort3 SampleLevel(Texture2D<ushort3>, sampler, float2 location, float LOD);
ushort3 SampleLevel(Texture2D<ushort3>, sampler, float2 location, float LOD, int2 offset);
ushort4 Gather(Texture2D<ushort3>, sampler, float2 location);
ushort4 Gather(Texture2D<ushort3>, sampler, float2 location, int2 offset);
ushort4 GatherRed(Texture2D<ushort3>, sampler, float2 location);
ushort4 GatherRed(Texture2D<ushort3>, sampler, float2 location, int2 offset);
ushort4 GatherGreen(Texture2D<ushort3>, sampler, float2 location);
ushort4 GatherGreen(Texture2D<ushort3>, sampler, float2 location, int2 offset);
ushort4 GatherBlue(Texture2D<ushort3>, sampler, float2 location);
ushort4 GatherBlue(Texture2D<ushort3>, sampler, float2 location, int2 offset);
ushort4 GatherAlpha(Texture2D<ushort3>, sampler, float2 location);
ushort4 GatherAlpha(Texture2D<ushort3>, sampler, float2 location, int2 offset);
ushort3 Load(Texture2D<ushort3>, int3 location);
ushort3 Load(Texture2D<ushort3>, int3 location, int2 offset);
void GetDimensions(Texture2D<ushort3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
ushort3 Sample(Texture2DArray<ushort3>, sampler, float3 location);
ushort3 Sample(Texture2DArray<ushort3>, sampler, float3 location, int2 offset);
ushort3 SampleBias(Texture2DArray<ushort3>, sampler, float3 location, float Bias);
ushort3 SampleBias(Texture2DArray<ushort3>, sampler, float3 location, float Bias, int2 offset);
ushort3 SampleGrad(Texture2DArray<ushort3>, sampler, float3 location, float2 DDX, float2 DDY);
ushort3 SampleGrad(Texture2DArray<ushort3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
ushort3 SampleLevel(Texture2DArray<ushort3>, sampler, float3 location, float LOD);
ushort3 SampleLevel(Texture2DArray<ushort3>, sampler, float3 location, float LOD, int2 offset);
ushort4 Gather(Texture2DArray<ushort3>, sampler, float3 location);
ushort4 Gather(Texture2DArray<ushort3>, sampler, float3 location, int2 offset);
ushort4 GatherRed(Texture2DArray<ushort3>, sampler, float3 location);
ushort4 GatherRed(Texture2DArray<ushort3>, sampler, float3 location, int2 offset);
ushort4 GatherGreen(Texture2DArray<ushort3>, sampler, float3 location);
ushort4 GatherGreen(Texture2DArray<ushort3>, sampler, float3 location, int2 offset);
ushort4 GatherBlue(Texture2DArray<ushort3>, sampler, float3 location);
ushort4 GatherBlue(Texture2DArray<ushort3>, sampler, float3 location, int2 offset);
ushort4 GatherAlpha(Texture2DArray<ushort3>, sampler, float3 location);
ushort4 GatherAlpha(Texture2DArray<ushort3>, sampler, float3 location, int2 offset);
ushort3 Load(Texture2DArray<ushort3>, int4 location);
ushort3 Load(Texture2DArray<ushort3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<ushort3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
ushort3 Sample(Texture3D<ushort3>, sampler, float3 location);
ushort3 Sample(Texture3D<ushort3>, sampler, float3 location, int3 offset);
ushort4 Gather(Texture3D<ushort3>, sampler, float3 location);
ushort4 Gather(Texture3D<ushort3>, sampler, float3 location, int3 offset);
ushort4 GatherRed(Texture3D<ushort3>, sampler, float3 location);
ushort4 GatherRed(Texture3D<ushort3>, sampler, float3 location, int3 offset);
ushort4 GatherGreen(Texture3D<ushort3>, sampler, float3 location);
ushort4 GatherGreen(Texture3D<ushort3>, sampler, float3 location, int3 offset);
ushort4 GatherBlue(Texture3D<ushort3>, sampler, float3 location);
ushort4 GatherBlue(Texture3D<ushort3>, sampler, float3 location, int3 offset);
ushort4 GatherAlpha(Texture3D<ushort3>, sampler, float3 location);
ushort4 GatherAlpha(Texture3D<ushort3>, sampler, float3 location, int3 offset);
ushort3 Load(Texture3D<ushort3>, int4 location);
ushort3 Load(Texture3D<ushort3>, int4 location, int3 offset);
void GetDimensions(Texture3D<ushort3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
ushort3 Sample(TextureCube<ushort3>, sampler, float3 location);
ushort3 SampleBias(TextureCube<ushort3>, sampler, float3 location, float Bias);
ushort3 SampleGrad(TextureCube<ushort3>, sampler, float3 location, float3 DDX, float3 DDY);
ushort3 SampleLevel(TextureCube<ushort3>, sampler, float3 location, float LOD);
ushort4 Gather(TextureCube<ushort3>, sampler, float3 location);
ushort4 GatherRed(TextureCube<ushort3>, sampler, float3 location);
ushort4 GatherGreen(TextureCube<ushort3>, sampler, float3 location);
ushort4 GatherBlue(TextureCube<ushort3>, sampler, float3 location);
ushort4 GatherAlpha(TextureCube<ushort3>, sampler, float3 location);
void GetDimensions(TextureCube<ushort3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<ushort3>, thread uint* Width);
void GetDimensions(RWTexture1D<ushort3>, thread float* Width);
ushort3 Load(RWTexture1D<ushort3>, int location);
void Store(RWTexture1D<ushort3>, ushort3, uint location);
void GetDimensions(RWTexture1DArray<ushort3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<ushort3>, thread float* Width, thread uint* Elements);
ushort3 Load(RWTexture1DArray<ushort3>, int2 location);
void Store(RWTexture1DArray<ushort3>, ushort3, uint2 location);
void GetDimensions(RWTexture2D<ushort3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<ushort3>, thread float* Width, thread float* Height);
ushort3 Load(RWTexture2D<ushort3>, int2 location);
void Store(RWTexture2D<ushort3>, ushort3, uint2 location);
void GetDimensions(RWTexture2DArray<ushort3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<ushort3>, thread float* Width, thread float* Height, thread float* Elements);
ushort3 Load(RWTexture2DArray<ushort3>, int3 location);
void Store(RWTexture2DArray<ushort3>, ushort3, uint3 location);
void GetDimensions(RWTexture3D<ushort3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<ushort3>, thread float* Width, thread float* Height, thread float* Depth);
ushort3 Load(RWTexture3D<ushort3>, int3 location);
void Store(RWTexture3D<ushort3>, ushort3, uint3 location);
ushort4 Sample(Texture1D<ushort4>, sampler, float location);
ushort4 Sample(Texture1D<ushort4>, sampler, float location, int offset);
ushort4 Load(Texture1D<ushort4>, int2 location);
ushort4 Load(Texture1D<ushort4>, int2 location, int offset);
void GetDimensions(Texture1D<ushort4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
ushort4 Sample(Texture1DArray<ushort4>, sampler, float2 location);
ushort4 Sample(Texture1DArray<ushort4>, sampler, float2 location, int offset);
ushort4 Load(Texture1DArray<ushort4>, int3 location);
ushort4 Load(Texture1DArray<ushort4>, int3 location, int offset);
void GetDimensions(Texture1DArray<ushort4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
ushort4 Sample(Texture2D<ushort4>, sampler, float2 location);
ushort4 Sample(Texture2D<ushort4>, sampler, float2 location, int2 offset);
ushort4 SampleBias(Texture2D<ushort4>, sampler, float2 location, float Bias);
ushort4 SampleBias(Texture2D<ushort4>, sampler, float2 location, float Bias, int2 offset);
ushort4 SampleGrad(Texture2D<ushort4>, sampler, float2 location, float2 DDX, float2 DDY);
ushort4 SampleGrad(Texture2D<ushort4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
ushort4 SampleLevel(Texture2D<ushort4>, sampler, float2 location, float LOD);
ushort4 SampleLevel(Texture2D<ushort4>, sampler, float2 location, float LOD, int2 offset);
ushort4 Gather(Texture2D<ushort4>, sampler, float2 location);
ushort4 Gather(Texture2D<ushort4>, sampler, float2 location, int2 offset);
ushort4 GatherRed(Texture2D<ushort4>, sampler, float2 location);
ushort4 GatherRed(Texture2D<ushort4>, sampler, float2 location, int2 offset);
ushort4 GatherGreen(Texture2D<ushort4>, sampler, float2 location);
ushort4 GatherGreen(Texture2D<ushort4>, sampler, float2 location, int2 offset);
ushort4 GatherBlue(Texture2D<ushort4>, sampler, float2 location);
ushort4 GatherBlue(Texture2D<ushort4>, sampler, float2 location, int2 offset);
ushort4 GatherAlpha(Texture2D<ushort4>, sampler, float2 location);
ushort4 GatherAlpha(Texture2D<ushort4>, sampler, float2 location, int2 offset);
ushort4 Load(Texture2D<ushort4>, int3 location);
ushort4 Load(Texture2D<ushort4>, int3 location, int2 offset);
void GetDimensions(Texture2D<ushort4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
ushort4 Sample(Texture2DArray<ushort4>, sampler, float3 location);
ushort4 Sample(Texture2DArray<ushort4>, sampler, float3 location, int2 offset);
ushort4 SampleBias(Texture2DArray<ushort4>, sampler, float3 location, float Bias);
ushort4 SampleBias(Texture2DArray<ushort4>, sampler, float3 location, float Bias, int2 offset);
ushort4 SampleGrad(Texture2DArray<ushort4>, sampler, float3 location, float2 DDX, float2 DDY);
ushort4 SampleGrad(Texture2DArray<ushort4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
ushort4 SampleLevel(Texture2DArray<ushort4>, sampler, float3 location, float LOD);
ushort4 SampleLevel(Texture2DArray<ushort4>, sampler, float3 location, float LOD, int2 offset);
ushort4 Gather(Texture2DArray<ushort4>, sampler, float3 location);
ushort4 Gather(Texture2DArray<ushort4>, sampler, float3 location, int2 offset);
ushort4 GatherRed(Texture2DArray<ushort4>, sampler, float3 location);
ushort4 GatherRed(Texture2DArray<ushort4>, sampler, float3 location, int2 offset);
ushort4 GatherGreen(Texture2DArray<ushort4>, sampler, float3 location);
ushort4 GatherGreen(Texture2DArray<ushort4>, sampler, float3 location, int2 offset);
ushort4 GatherBlue(Texture2DArray<ushort4>, sampler, float3 location);
ushort4 GatherBlue(Texture2DArray<ushort4>, sampler, float3 location, int2 offset);
ushort4 GatherAlpha(Texture2DArray<ushort4>, sampler, float3 location);
ushort4 GatherAlpha(Texture2DArray<ushort4>, sampler, float3 location, int2 offset);
ushort4 Load(Texture2DArray<ushort4>, int4 location);
ushort4 Load(Texture2DArray<ushort4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<ushort4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
ushort4 Sample(Texture3D<ushort4>, sampler, float3 location);
ushort4 Sample(Texture3D<ushort4>, sampler, float3 location, int3 offset);
ushort4 Gather(Texture3D<ushort4>, sampler, float3 location);
ushort4 Gather(Texture3D<ushort4>, sampler, float3 location, int3 offset);
ushort4 GatherRed(Texture3D<ushort4>, sampler, float3 location);
ushort4 GatherRed(Texture3D<ushort4>, sampler, float3 location, int3 offset);
ushort4 GatherGreen(Texture3D<ushort4>, sampler, float3 location);
ushort4 GatherGreen(Texture3D<ushort4>, sampler, float3 location, int3 offset);
ushort4 GatherBlue(Texture3D<ushort4>, sampler, float3 location);
ushort4 GatherBlue(Texture3D<ushort4>, sampler, float3 location, int3 offset);
ushort4 GatherAlpha(Texture3D<ushort4>, sampler, float3 location);
ushort4 GatherAlpha(Texture3D<ushort4>, sampler, float3 location, int3 offset);
ushort4 Load(Texture3D<ushort4>, int4 location);
ushort4 Load(Texture3D<ushort4>, int4 location, int3 offset);
void GetDimensions(Texture3D<ushort4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
ushort4 Sample(TextureCube<ushort4>, sampler, float3 location);
ushort4 SampleBias(TextureCube<ushort4>, sampler, float3 location, float Bias);
ushort4 SampleGrad(TextureCube<ushort4>, sampler, float3 location, float3 DDX, float3 DDY);
ushort4 SampleLevel(TextureCube<ushort4>, sampler, float3 location, float LOD);
ushort4 Gather(TextureCube<ushort4>, sampler, float3 location);
ushort4 GatherRed(TextureCube<ushort4>, sampler, float3 location);
ushort4 GatherGreen(TextureCube<ushort4>, sampler, float3 location);
ushort4 GatherBlue(TextureCube<ushort4>, sampler, float3 location);
ushort4 GatherAlpha(TextureCube<ushort4>, sampler, float3 location);
void GetDimensions(TextureCube<ushort4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<ushort4>, thread uint* Width);
void GetDimensions(RWTexture1D<ushort4>, thread float* Width);
ushort4 Load(RWTexture1D<ushort4>, int location);
void Store(RWTexture1D<ushort4>, ushort4, uint location);
void GetDimensions(RWTexture1DArray<ushort4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<ushort4>, thread float* Width, thread uint* Elements);
ushort4 Load(RWTexture1DArray<ushort4>, int2 location);
void Store(RWTexture1DArray<ushort4>, ushort4, uint2 location);
void GetDimensions(RWTexture2D<ushort4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<ushort4>, thread float* Width, thread float* Height);
ushort4 Load(RWTexture2D<ushort4>, int2 location);
void Store(RWTexture2D<ushort4>, ushort4, uint2 location);
void GetDimensions(RWTexture2DArray<ushort4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<ushort4>, thread float* Width, thread float* Height, thread float* Elements);
ushort4 Load(RWTexture2DArray<ushort4>, int3 location);
void Store(RWTexture2DArray<ushort4>, ushort4, uint3 location);
void GetDimensions(RWTexture3D<ushort4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<ushort4>, thread float* Width, thread float* Height, thread float* Depth);
ushort4 Load(RWTexture3D<ushort4>, int3 location);
void Store(RWTexture3D<ushort4>, ushort4, uint3 location);
uint Sample(Texture1D<uint>, sampler, float location);
uint Sample(Texture1D<uint>, sampler, float location, int offset);
uint Load(Texture1D<uint>, int2 location);
uint Load(Texture1D<uint>, int2 location, int offset);
void GetDimensions(Texture1D<uint>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uint Sample(Texture1DArray<uint>, sampler, float2 location);
uint Sample(Texture1DArray<uint>, sampler, float2 location, int offset);
uint Load(Texture1DArray<uint>, int3 location);
uint Load(Texture1DArray<uint>, int3 location, int offset);
void GetDimensions(Texture1DArray<uint>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uint Sample(Texture2D<uint>, sampler, float2 location);
uint Sample(Texture2D<uint>, sampler, float2 location, int2 offset);
uint SampleBias(Texture2D<uint>, sampler, float2 location, float Bias);
uint SampleBias(Texture2D<uint>, sampler, float2 location, float Bias, int2 offset);
uint SampleGrad(Texture2D<uint>, sampler, float2 location, float2 DDX, float2 DDY);
uint SampleGrad(Texture2D<uint>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uint SampleLevel(Texture2D<uint>, sampler, float2 location, float LOD);
uint SampleLevel(Texture2D<uint>, sampler, float2 location, float LOD, int2 offset);
uint4 Gather(Texture2D<uint>, sampler, float2 location);
uint4 Gather(Texture2D<uint>, sampler, float2 location, int2 offset);
uint4 GatherRed(Texture2D<uint>, sampler, float2 location);
uint4 GatherRed(Texture2D<uint>, sampler, float2 location, int2 offset);
uint4 GatherGreen(Texture2D<uint>, sampler, float2 location);
uint4 GatherGreen(Texture2D<uint>, sampler, float2 location, int2 offset);
uint4 GatherBlue(Texture2D<uint>, sampler, float2 location);
uint4 GatherBlue(Texture2D<uint>, sampler, float2 location, int2 offset);
uint4 GatherAlpha(Texture2D<uint>, sampler, float2 location);
uint4 GatherAlpha(Texture2D<uint>, sampler, float2 location, int2 offset);
uint Load(Texture2D<uint>, int3 location);
uint Load(Texture2D<uint>, int3 location, int2 offset);
void GetDimensions(Texture2D<uint>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uint Sample(Texture2DArray<uint>, sampler, float3 location);
uint Sample(Texture2DArray<uint>, sampler, float3 location, int2 offset);
uint SampleBias(Texture2DArray<uint>, sampler, float3 location, float Bias);
uint SampleBias(Texture2DArray<uint>, sampler, float3 location, float Bias, int2 offset);
uint SampleGrad(Texture2DArray<uint>, sampler, float3 location, float2 DDX, float2 DDY);
uint SampleGrad(Texture2DArray<uint>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uint SampleLevel(Texture2DArray<uint>, sampler, float3 location, float LOD);
uint SampleLevel(Texture2DArray<uint>, sampler, float3 location, float LOD, int2 offset);
uint4 Gather(Texture2DArray<uint>, sampler, float3 location);
uint4 Gather(Texture2DArray<uint>, sampler, float3 location, int2 offset);
uint4 GatherRed(Texture2DArray<uint>, sampler, float3 location);
uint4 GatherRed(Texture2DArray<uint>, sampler, float3 location, int2 offset);
uint4 GatherGreen(Texture2DArray<uint>, sampler, float3 location);
uint4 GatherGreen(Texture2DArray<uint>, sampler, float3 location, int2 offset);
uint4 GatherBlue(Texture2DArray<uint>, sampler, float3 location);
uint4 GatherBlue(Texture2DArray<uint>, sampler, float3 location, int2 offset);
uint4 GatherAlpha(Texture2DArray<uint>, sampler, float3 location);
uint4 GatherAlpha(Texture2DArray<uint>, sampler, float3 location, int2 offset);
uint Load(Texture2DArray<uint>, int4 location);
uint Load(Texture2DArray<uint>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uint>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uint Sample(Texture3D<uint>, sampler, float3 location);
uint Sample(Texture3D<uint>, sampler, float3 location, int3 offset);
uint4 Gather(Texture3D<uint>, sampler, float3 location);
uint4 Gather(Texture3D<uint>, sampler, float3 location, int3 offset);
uint4 GatherRed(Texture3D<uint>, sampler, float3 location);
uint4 GatherRed(Texture3D<uint>, sampler, float3 location, int3 offset);
uint4 GatherGreen(Texture3D<uint>, sampler, float3 location);
uint4 GatherGreen(Texture3D<uint>, sampler, float3 location, int3 offset);
uint4 GatherBlue(Texture3D<uint>, sampler, float3 location);
uint4 GatherBlue(Texture3D<uint>, sampler, float3 location, int3 offset);
uint4 GatherAlpha(Texture3D<uint>, sampler, float3 location);
uint4 GatherAlpha(Texture3D<uint>, sampler, float3 location, int3 offset);
uint Load(Texture3D<uint>, int4 location);
uint Load(Texture3D<uint>, int4 location, int3 offset);
void GetDimensions(Texture3D<uint>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uint Sample(TextureCube<uint>, sampler, float3 location);
uint SampleBias(TextureCube<uint>, sampler, float3 location, float Bias);
uint SampleGrad(TextureCube<uint>, sampler, float3 location, float3 DDX, float3 DDY);
uint SampleLevel(TextureCube<uint>, sampler, float3 location, float LOD);
uint4 Gather(TextureCube<uint>, sampler, float3 location);
uint4 GatherRed(TextureCube<uint>, sampler, float3 location);
uint4 GatherGreen(TextureCube<uint>, sampler, float3 location);
uint4 GatherBlue(TextureCube<uint>, sampler, float3 location);
uint4 GatherAlpha(TextureCube<uint>, sampler, float3 location);
void GetDimensions(TextureCube<uint>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uint>, thread uint* Width);
void GetDimensions(RWTexture1D<uint>, thread float* Width);
uint Load(RWTexture1D<uint>, int location);
void Store(RWTexture1D<uint>, uint, uint location);
void GetDimensions(RWTexture1DArray<uint>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uint>, thread float* Width, thread uint* Elements);
uint Load(RWTexture1DArray<uint>, int2 location);
void Store(RWTexture1DArray<uint>, uint, uint2 location);
void GetDimensions(RWTexture2D<uint>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uint>, thread float* Width, thread float* Height);
uint Load(RWTexture2D<uint>, int2 location);
void Store(RWTexture2D<uint>, uint, uint2 location);
void GetDimensions(RWTexture2DArray<uint>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uint>, thread float* Width, thread float* Height, thread float* Elements);
uint Load(RWTexture2DArray<uint>, int3 location);
void Store(RWTexture2DArray<uint>, uint, uint3 location);
void GetDimensions(RWTexture3D<uint>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uint>, thread float* Width, thread float* Height, thread float* Depth);
uint Load(RWTexture3D<uint>, int3 location);
void Store(RWTexture3D<uint>, uint, uint3 location);
uint2 Sample(Texture1D<uint2>, sampler, float location);
uint2 Sample(Texture1D<uint2>, sampler, float location, int offset);
uint2 Load(Texture1D<uint2>, int2 location);
uint2 Load(Texture1D<uint2>, int2 location, int offset);
void GetDimensions(Texture1D<uint2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uint2 Sample(Texture1DArray<uint2>, sampler, float2 location);
uint2 Sample(Texture1DArray<uint2>, sampler, float2 location, int offset);
uint2 Load(Texture1DArray<uint2>, int3 location);
uint2 Load(Texture1DArray<uint2>, int3 location, int offset);
void GetDimensions(Texture1DArray<uint2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uint2 Sample(Texture2D<uint2>, sampler, float2 location);
uint2 Sample(Texture2D<uint2>, sampler, float2 location, int2 offset);
uint2 SampleBias(Texture2D<uint2>, sampler, float2 location, float Bias);
uint2 SampleBias(Texture2D<uint2>, sampler, float2 location, float Bias, int2 offset);
uint2 SampleGrad(Texture2D<uint2>, sampler, float2 location, float2 DDX, float2 DDY);
uint2 SampleGrad(Texture2D<uint2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uint2 SampleLevel(Texture2D<uint2>, sampler, float2 location, float LOD);
uint2 SampleLevel(Texture2D<uint2>, sampler, float2 location, float LOD, int2 offset);
uint4 Gather(Texture2D<uint2>, sampler, float2 location);
uint4 Gather(Texture2D<uint2>, sampler, float2 location, int2 offset);
uint4 GatherRed(Texture2D<uint2>, sampler, float2 location);
uint4 GatherRed(Texture2D<uint2>, sampler, float2 location, int2 offset);
uint4 GatherGreen(Texture2D<uint2>, sampler, float2 location);
uint4 GatherGreen(Texture2D<uint2>, sampler, float2 location, int2 offset);
uint4 GatherBlue(Texture2D<uint2>, sampler, float2 location);
uint4 GatherBlue(Texture2D<uint2>, sampler, float2 location, int2 offset);
uint4 GatherAlpha(Texture2D<uint2>, sampler, float2 location);
uint4 GatherAlpha(Texture2D<uint2>, sampler, float2 location, int2 offset);
uint2 Load(Texture2D<uint2>, int3 location);
uint2 Load(Texture2D<uint2>, int3 location, int2 offset);
void GetDimensions(Texture2D<uint2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uint2 Sample(Texture2DArray<uint2>, sampler, float3 location);
uint2 Sample(Texture2DArray<uint2>, sampler, float3 location, int2 offset);
uint2 SampleBias(Texture2DArray<uint2>, sampler, float3 location, float Bias);
uint2 SampleBias(Texture2DArray<uint2>, sampler, float3 location, float Bias, int2 offset);
uint2 SampleGrad(Texture2DArray<uint2>, sampler, float3 location, float2 DDX, float2 DDY);
uint2 SampleGrad(Texture2DArray<uint2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uint2 SampleLevel(Texture2DArray<uint2>, sampler, float3 location, float LOD);
uint2 SampleLevel(Texture2DArray<uint2>, sampler, float3 location, float LOD, int2 offset);
uint4 Gather(Texture2DArray<uint2>, sampler, float3 location);
uint4 Gather(Texture2DArray<uint2>, sampler, float3 location, int2 offset);
uint4 GatherRed(Texture2DArray<uint2>, sampler, float3 location);
uint4 GatherRed(Texture2DArray<uint2>, sampler, float3 location, int2 offset);
uint4 GatherGreen(Texture2DArray<uint2>, sampler, float3 location);
uint4 GatherGreen(Texture2DArray<uint2>, sampler, float3 location, int2 offset);
uint4 GatherBlue(Texture2DArray<uint2>, sampler, float3 location);
uint4 GatherBlue(Texture2DArray<uint2>, sampler, float3 location, int2 offset);
uint4 GatherAlpha(Texture2DArray<uint2>, sampler, float3 location);
uint4 GatherAlpha(Texture2DArray<uint2>, sampler, float3 location, int2 offset);
uint2 Load(Texture2DArray<uint2>, int4 location);
uint2 Load(Texture2DArray<uint2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uint2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uint2 Sample(Texture3D<uint2>, sampler, float3 location);
uint2 Sample(Texture3D<uint2>, sampler, float3 location, int3 offset);
uint4 Gather(Texture3D<uint2>, sampler, float3 location);
uint4 Gather(Texture3D<uint2>, sampler, float3 location, int3 offset);
uint4 GatherRed(Texture3D<uint2>, sampler, float3 location);
uint4 GatherRed(Texture3D<uint2>, sampler, float3 location, int3 offset);
uint4 GatherGreen(Texture3D<uint2>, sampler, float3 location);
uint4 GatherGreen(Texture3D<uint2>, sampler, float3 location, int3 offset);
uint4 GatherBlue(Texture3D<uint2>, sampler, float3 location);
uint4 GatherBlue(Texture3D<uint2>, sampler, float3 location, int3 offset);
uint4 GatherAlpha(Texture3D<uint2>, sampler, float3 location);
uint4 GatherAlpha(Texture3D<uint2>, sampler, float3 location, int3 offset);
uint2 Load(Texture3D<uint2>, int4 location);
uint2 Load(Texture3D<uint2>, int4 location, int3 offset);
void GetDimensions(Texture3D<uint2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uint2 Sample(TextureCube<uint2>, sampler, float3 location);
uint2 SampleBias(TextureCube<uint2>, sampler, float3 location, float Bias);
uint2 SampleGrad(TextureCube<uint2>, sampler, float3 location, float3 DDX, float3 DDY);
uint2 SampleLevel(TextureCube<uint2>, sampler, float3 location, float LOD);
uint4 Gather(TextureCube<uint2>, sampler, float3 location);
uint4 GatherRed(TextureCube<uint2>, sampler, float3 location);
uint4 GatherGreen(TextureCube<uint2>, sampler, float3 location);
uint4 GatherBlue(TextureCube<uint2>, sampler, float3 location);
uint4 GatherAlpha(TextureCube<uint2>, sampler, float3 location);
void GetDimensions(TextureCube<uint2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uint2>, thread uint* Width);
void GetDimensions(RWTexture1D<uint2>, thread float* Width);
uint2 Load(RWTexture1D<uint2>, int location);
void Store(RWTexture1D<uint2>, uint2, uint location);
void GetDimensions(RWTexture1DArray<uint2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uint2>, thread float* Width, thread uint* Elements);
uint2 Load(RWTexture1DArray<uint2>, int2 location);
void Store(RWTexture1DArray<uint2>, uint2, uint2 location);
void GetDimensions(RWTexture2D<uint2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uint2>, thread float* Width, thread float* Height);
uint2 Load(RWTexture2D<uint2>, int2 location);
void Store(RWTexture2D<uint2>, uint2, uint2 location);
void GetDimensions(RWTexture2DArray<uint2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uint2>, thread float* Width, thread float* Height, thread float* Elements);
uint2 Load(RWTexture2DArray<uint2>, int3 location);
void Store(RWTexture2DArray<uint2>, uint2, uint3 location);
void GetDimensions(RWTexture3D<uint2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uint2>, thread float* Width, thread float* Height, thread float* Depth);
uint2 Load(RWTexture3D<uint2>, int3 location);
void Store(RWTexture3D<uint2>, uint2, uint3 location);
uint3 Sample(Texture1D<uint3>, sampler, float location);
uint3 Sample(Texture1D<uint3>, sampler, float location, int offset);
uint3 Load(Texture1D<uint3>, int2 location);
uint3 Load(Texture1D<uint3>, int2 location, int offset);
void GetDimensions(Texture1D<uint3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uint3 Sample(Texture1DArray<uint3>, sampler, float2 location);
uint3 Sample(Texture1DArray<uint3>, sampler, float2 location, int offset);
uint3 Load(Texture1DArray<uint3>, int3 location);
uint3 Load(Texture1DArray<uint3>, int3 location, int offset);
void GetDimensions(Texture1DArray<uint3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uint3 Sample(Texture2D<uint3>, sampler, float2 location);
uint3 Sample(Texture2D<uint3>, sampler, float2 location, int2 offset);
uint3 SampleBias(Texture2D<uint3>, sampler, float2 location, float Bias);
uint3 SampleBias(Texture2D<uint3>, sampler, float2 location, float Bias, int2 offset);
uint3 SampleGrad(Texture2D<uint3>, sampler, float2 location, float2 DDX, float2 DDY);
uint3 SampleGrad(Texture2D<uint3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uint3 SampleLevel(Texture2D<uint3>, sampler, float2 location, float LOD);
uint3 SampleLevel(Texture2D<uint3>, sampler, float2 location, float LOD, int2 offset);
uint4 Gather(Texture2D<uint3>, sampler, float2 location);
uint4 Gather(Texture2D<uint3>, sampler, float2 location, int2 offset);
uint4 GatherRed(Texture2D<uint3>, sampler, float2 location);
uint4 GatherRed(Texture2D<uint3>, sampler, float2 location, int2 offset);
uint4 GatherGreen(Texture2D<uint3>, sampler, float2 location);
uint4 GatherGreen(Texture2D<uint3>, sampler, float2 location, int2 offset);
uint4 GatherBlue(Texture2D<uint3>, sampler, float2 location);
uint4 GatherBlue(Texture2D<uint3>, sampler, float2 location, int2 offset);
uint4 GatherAlpha(Texture2D<uint3>, sampler, float2 location);
uint4 GatherAlpha(Texture2D<uint3>, sampler, float2 location, int2 offset);
uint3 Load(Texture2D<uint3>, int3 location);
uint3 Load(Texture2D<uint3>, int3 location, int2 offset);
void GetDimensions(Texture2D<uint3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uint3 Sample(Texture2DArray<uint3>, sampler, float3 location);
uint3 Sample(Texture2DArray<uint3>, sampler, float3 location, int2 offset);
uint3 SampleBias(Texture2DArray<uint3>, sampler, float3 location, float Bias);
uint3 SampleBias(Texture2DArray<uint3>, sampler, float3 location, float Bias, int2 offset);
uint3 SampleGrad(Texture2DArray<uint3>, sampler, float3 location, float2 DDX, float2 DDY);
uint3 SampleGrad(Texture2DArray<uint3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uint3 SampleLevel(Texture2DArray<uint3>, sampler, float3 location, float LOD);
uint3 SampleLevel(Texture2DArray<uint3>, sampler, float3 location, float LOD, int2 offset);
uint4 Gather(Texture2DArray<uint3>, sampler, float3 location);
uint4 Gather(Texture2DArray<uint3>, sampler, float3 location, int2 offset);
uint4 GatherRed(Texture2DArray<uint3>, sampler, float3 location);
uint4 GatherRed(Texture2DArray<uint3>, sampler, float3 location, int2 offset);
uint4 GatherGreen(Texture2DArray<uint3>, sampler, float3 location);
uint4 GatherGreen(Texture2DArray<uint3>, sampler, float3 location, int2 offset);
uint4 GatherBlue(Texture2DArray<uint3>, sampler, float3 location);
uint4 GatherBlue(Texture2DArray<uint3>, sampler, float3 location, int2 offset);
uint4 GatherAlpha(Texture2DArray<uint3>, sampler, float3 location);
uint4 GatherAlpha(Texture2DArray<uint3>, sampler, float3 location, int2 offset);
uint3 Load(Texture2DArray<uint3>, int4 location);
uint3 Load(Texture2DArray<uint3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uint3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uint3 Sample(Texture3D<uint3>, sampler, float3 location);
uint3 Sample(Texture3D<uint3>, sampler, float3 location, int3 offset);
uint4 Gather(Texture3D<uint3>, sampler, float3 location);
uint4 Gather(Texture3D<uint3>, sampler, float3 location, int3 offset);
uint4 GatherRed(Texture3D<uint3>, sampler, float3 location);
uint4 GatherRed(Texture3D<uint3>, sampler, float3 location, int3 offset);
uint4 GatherGreen(Texture3D<uint3>, sampler, float3 location);
uint4 GatherGreen(Texture3D<uint3>, sampler, float3 location, int3 offset);
uint4 GatherBlue(Texture3D<uint3>, sampler, float3 location);
uint4 GatherBlue(Texture3D<uint3>, sampler, float3 location, int3 offset);
uint4 GatherAlpha(Texture3D<uint3>, sampler, float3 location);
uint4 GatherAlpha(Texture3D<uint3>, sampler, float3 location, int3 offset);
uint3 Load(Texture3D<uint3>, int4 location);
uint3 Load(Texture3D<uint3>, int4 location, int3 offset);
void GetDimensions(Texture3D<uint3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uint3 Sample(TextureCube<uint3>, sampler, float3 location);
uint3 SampleBias(TextureCube<uint3>, sampler, float3 location, float Bias);
uint3 SampleGrad(TextureCube<uint3>, sampler, float3 location, float3 DDX, float3 DDY);
uint3 SampleLevel(TextureCube<uint3>, sampler, float3 location, float LOD);
uint4 Gather(TextureCube<uint3>, sampler, float3 location);
uint4 GatherRed(TextureCube<uint3>, sampler, float3 location);
uint4 GatherGreen(TextureCube<uint3>, sampler, float3 location);
uint4 GatherBlue(TextureCube<uint3>, sampler, float3 location);
uint4 GatherAlpha(TextureCube<uint3>, sampler, float3 location);
void GetDimensions(TextureCube<uint3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uint3>, thread uint* Width);
void GetDimensions(RWTexture1D<uint3>, thread float* Width);
uint3 Load(RWTexture1D<uint3>, int location);
void Store(RWTexture1D<uint3>, uint3, uint location);
void GetDimensions(RWTexture1DArray<uint3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uint3>, thread float* Width, thread uint* Elements);
uint3 Load(RWTexture1DArray<uint3>, int2 location);
void Store(RWTexture1DArray<uint3>, uint3, uint2 location);
void GetDimensions(RWTexture2D<uint3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uint3>, thread float* Width, thread float* Height);
uint3 Load(RWTexture2D<uint3>, int2 location);
void Store(RWTexture2D<uint3>, uint3, uint2 location);
void GetDimensions(RWTexture2DArray<uint3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uint3>, thread float* Width, thread float* Height, thread float* Elements);
uint3 Load(RWTexture2DArray<uint3>, int3 location);
void Store(RWTexture2DArray<uint3>, uint3, uint3 location);
void GetDimensions(RWTexture3D<uint3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uint3>, thread float* Width, thread float* Height, thread float* Depth);
uint3 Load(RWTexture3D<uint3>, int3 location);
void Store(RWTexture3D<uint3>, uint3, uint3 location);
uint4 Sample(Texture1D<uint4>, sampler, float location);
uint4 Sample(Texture1D<uint4>, sampler, float location, int offset);
uint4 Load(Texture1D<uint4>, int2 location);
uint4 Load(Texture1D<uint4>, int2 location, int offset);
void GetDimensions(Texture1D<uint4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
uint4 Sample(Texture1DArray<uint4>, sampler, float2 location);
uint4 Sample(Texture1DArray<uint4>, sampler, float2 location, int offset);
uint4 Load(Texture1DArray<uint4>, int3 location);
uint4 Load(Texture1DArray<uint4>, int3 location, int offset);
void GetDimensions(Texture1DArray<uint4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
uint4 Sample(Texture2D<uint4>, sampler, float2 location);
uint4 Sample(Texture2D<uint4>, sampler, float2 location, int2 offset);
uint4 SampleBias(Texture2D<uint4>, sampler, float2 location, float Bias);
uint4 SampleBias(Texture2D<uint4>, sampler, float2 location, float Bias, int2 offset);
uint4 SampleGrad(Texture2D<uint4>, sampler, float2 location, float2 DDX, float2 DDY);
uint4 SampleGrad(Texture2D<uint4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
uint4 SampleLevel(Texture2D<uint4>, sampler, float2 location, float LOD);
uint4 SampleLevel(Texture2D<uint4>, sampler, float2 location, float LOD, int2 offset);
uint4 Gather(Texture2D<uint4>, sampler, float2 location);
uint4 Gather(Texture2D<uint4>, sampler, float2 location, int2 offset);
uint4 GatherRed(Texture2D<uint4>, sampler, float2 location);
uint4 GatherRed(Texture2D<uint4>, sampler, float2 location, int2 offset);
uint4 GatherGreen(Texture2D<uint4>, sampler, float2 location);
uint4 GatherGreen(Texture2D<uint4>, sampler, float2 location, int2 offset);
uint4 GatherBlue(Texture2D<uint4>, sampler, float2 location);
uint4 GatherBlue(Texture2D<uint4>, sampler, float2 location, int2 offset);
uint4 GatherAlpha(Texture2D<uint4>, sampler, float2 location);
uint4 GatherAlpha(Texture2D<uint4>, sampler, float2 location, int2 offset);
uint4 Load(Texture2D<uint4>, int3 location);
uint4 Load(Texture2D<uint4>, int3 location, int2 offset);
void GetDimensions(Texture2D<uint4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
uint4 Sample(Texture2DArray<uint4>, sampler, float3 location);
uint4 Sample(Texture2DArray<uint4>, sampler, float3 location, int2 offset);
uint4 SampleBias(Texture2DArray<uint4>, sampler, float3 location, float Bias);
uint4 SampleBias(Texture2DArray<uint4>, sampler, float3 location, float Bias, int2 offset);
uint4 SampleGrad(Texture2DArray<uint4>, sampler, float3 location, float2 DDX, float2 DDY);
uint4 SampleGrad(Texture2DArray<uint4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
uint4 SampleLevel(Texture2DArray<uint4>, sampler, float3 location, float LOD);
uint4 SampleLevel(Texture2DArray<uint4>, sampler, float3 location, float LOD, int2 offset);
uint4 Gather(Texture2DArray<uint4>, sampler, float3 location);
uint4 Gather(Texture2DArray<uint4>, sampler, float3 location, int2 offset);
uint4 GatherRed(Texture2DArray<uint4>, sampler, float3 location);
uint4 GatherRed(Texture2DArray<uint4>, sampler, float3 location, int2 offset);
uint4 GatherGreen(Texture2DArray<uint4>, sampler, float3 location);
uint4 GatherGreen(Texture2DArray<uint4>, sampler, float3 location, int2 offset);
uint4 GatherBlue(Texture2DArray<uint4>, sampler, float3 location);
uint4 GatherBlue(Texture2DArray<uint4>, sampler, float3 location, int2 offset);
uint4 GatherAlpha(Texture2DArray<uint4>, sampler, float3 location);
uint4 GatherAlpha(Texture2DArray<uint4>, sampler, float3 location, int2 offset);
uint4 Load(Texture2DArray<uint4>, int4 location);
uint4 Load(Texture2DArray<uint4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<uint4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
uint4 Sample(Texture3D<uint4>, sampler, float3 location);
uint4 Sample(Texture3D<uint4>, sampler, float3 location, int3 offset);
uint4 Gather(Texture3D<uint4>, sampler, float3 location);
uint4 Gather(Texture3D<uint4>, sampler, float3 location, int3 offset);
uint4 GatherRed(Texture3D<uint4>, sampler, float3 location);
uint4 GatherRed(Texture3D<uint4>, sampler, float3 location, int3 offset);
uint4 GatherGreen(Texture3D<uint4>, sampler, float3 location);
uint4 GatherGreen(Texture3D<uint4>, sampler, float3 location, int3 offset);
uint4 GatherBlue(Texture3D<uint4>, sampler, float3 location);
uint4 GatherBlue(Texture3D<uint4>, sampler, float3 location, int3 offset);
uint4 GatherAlpha(Texture3D<uint4>, sampler, float3 location);
uint4 GatherAlpha(Texture3D<uint4>, sampler, float3 location, int3 offset);
uint4 Load(Texture3D<uint4>, int4 location);
uint4 Load(Texture3D<uint4>, int4 location, int3 offset);
void GetDimensions(Texture3D<uint4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
uint4 Sample(TextureCube<uint4>, sampler, float3 location);
uint4 SampleBias(TextureCube<uint4>, sampler, float3 location, float Bias);
uint4 SampleGrad(TextureCube<uint4>, sampler, float3 location, float3 DDX, float3 DDY);
uint4 SampleLevel(TextureCube<uint4>, sampler, float3 location, float LOD);
uint4 Gather(TextureCube<uint4>, sampler, float3 location);
uint4 GatherRed(TextureCube<uint4>, sampler, float3 location);
uint4 GatherGreen(TextureCube<uint4>, sampler, float3 location);
uint4 GatherBlue(TextureCube<uint4>, sampler, float3 location);
uint4 GatherAlpha(TextureCube<uint4>, sampler, float3 location);
void GetDimensions(TextureCube<uint4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<uint4>, thread uint* Width);
void GetDimensions(RWTexture1D<uint4>, thread float* Width);
uint4 Load(RWTexture1D<uint4>, int location);
void Store(RWTexture1D<uint4>, uint4, uint location);
void GetDimensions(RWTexture1DArray<uint4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<uint4>, thread float* Width, thread uint* Elements);
uint4 Load(RWTexture1DArray<uint4>, int2 location);
void Store(RWTexture1DArray<uint4>, uint4, uint2 location);
void GetDimensions(RWTexture2D<uint4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<uint4>, thread float* Width, thread float* Height);
uint4 Load(RWTexture2D<uint4>, int2 location);
void Store(RWTexture2D<uint4>, uint4, uint2 location);
void GetDimensions(RWTexture2DArray<uint4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<uint4>, thread float* Width, thread float* Height, thread float* Elements);
uint4 Load(RWTexture2DArray<uint4>, int3 location);
void Store(RWTexture2DArray<uint4>, uint4, uint3 location);
void GetDimensions(RWTexture3D<uint4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<uint4>, thread float* Width, thread float* Height, thread float* Depth);
uint4 Load(RWTexture3D<uint4>, int3 location);
void Store(RWTexture3D<uint4>, uint4, uint3 location);
char Sample(Texture1D<char>, sampler, float location);
char Sample(Texture1D<char>, sampler, float location, int offset);
char Load(Texture1D<char>, int2 location);
char Load(Texture1D<char>, int2 location, int offset);
void GetDimensions(Texture1D<char>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
char Sample(Texture1DArray<char>, sampler, float2 location);
char Sample(Texture1DArray<char>, sampler, float2 location, int offset);
char Load(Texture1DArray<char>, int3 location);
char Load(Texture1DArray<char>, int3 location, int offset);
void GetDimensions(Texture1DArray<char>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
char Sample(Texture2D<char>, sampler, float2 location);
char Sample(Texture2D<char>, sampler, float2 location, int2 offset);
char SampleBias(Texture2D<char>, sampler, float2 location, float Bias);
char SampleBias(Texture2D<char>, sampler, float2 location, float Bias, int2 offset);
char SampleGrad(Texture2D<char>, sampler, float2 location, float2 DDX, float2 DDY);
char SampleGrad(Texture2D<char>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
char SampleLevel(Texture2D<char>, sampler, float2 location, float LOD);
char SampleLevel(Texture2D<char>, sampler, float2 location, float LOD, int2 offset);
char4 Gather(Texture2D<char>, sampler, float2 location);
char4 Gather(Texture2D<char>, sampler, float2 location, int2 offset);
char4 GatherRed(Texture2D<char>, sampler, float2 location);
char4 GatherRed(Texture2D<char>, sampler, float2 location, int2 offset);
char4 GatherGreen(Texture2D<char>, sampler, float2 location);
char4 GatherGreen(Texture2D<char>, sampler, float2 location, int2 offset);
char4 GatherBlue(Texture2D<char>, sampler, float2 location);
char4 GatherBlue(Texture2D<char>, sampler, float2 location, int2 offset);
char4 GatherAlpha(Texture2D<char>, sampler, float2 location);
char4 GatherAlpha(Texture2D<char>, sampler, float2 location, int2 offset);
char Load(Texture2D<char>, int3 location);
char Load(Texture2D<char>, int3 location, int2 offset);
void GetDimensions(Texture2D<char>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
char Sample(Texture2DArray<char>, sampler, float3 location);
char Sample(Texture2DArray<char>, sampler, float3 location, int2 offset);
char SampleBias(Texture2DArray<char>, sampler, float3 location, float Bias);
char SampleBias(Texture2DArray<char>, sampler, float3 location, float Bias, int2 offset);
char SampleGrad(Texture2DArray<char>, sampler, float3 location, float2 DDX, float2 DDY);
char SampleGrad(Texture2DArray<char>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
char SampleLevel(Texture2DArray<char>, sampler, float3 location, float LOD);
char SampleLevel(Texture2DArray<char>, sampler, float3 location, float LOD, int2 offset);
char4 Gather(Texture2DArray<char>, sampler, float3 location);
char4 Gather(Texture2DArray<char>, sampler, float3 location, int2 offset);
char4 GatherRed(Texture2DArray<char>, sampler, float3 location);
char4 GatherRed(Texture2DArray<char>, sampler, float3 location, int2 offset);
char4 GatherGreen(Texture2DArray<char>, sampler, float3 location);
char4 GatherGreen(Texture2DArray<char>, sampler, float3 location, int2 offset);
char4 GatherBlue(Texture2DArray<char>, sampler, float3 location);
char4 GatherBlue(Texture2DArray<char>, sampler, float3 location, int2 offset);
char4 GatherAlpha(Texture2DArray<char>, sampler, float3 location);
char4 GatherAlpha(Texture2DArray<char>, sampler, float3 location, int2 offset);
char Load(Texture2DArray<char>, int4 location);
char Load(Texture2DArray<char>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<char>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
char Sample(Texture3D<char>, sampler, float3 location);
char Sample(Texture3D<char>, sampler, float3 location, int3 offset);
char4 Gather(Texture3D<char>, sampler, float3 location);
char4 Gather(Texture3D<char>, sampler, float3 location, int3 offset);
char4 GatherRed(Texture3D<char>, sampler, float3 location);
char4 GatherRed(Texture3D<char>, sampler, float3 location, int3 offset);
char4 GatherGreen(Texture3D<char>, sampler, float3 location);
char4 GatherGreen(Texture3D<char>, sampler, float3 location, int3 offset);
char4 GatherBlue(Texture3D<char>, sampler, float3 location);
char4 GatherBlue(Texture3D<char>, sampler, float3 location, int3 offset);
char4 GatherAlpha(Texture3D<char>, sampler, float3 location);
char4 GatherAlpha(Texture3D<char>, sampler, float3 location, int3 offset);
char Load(Texture3D<char>, int4 location);
char Load(Texture3D<char>, int4 location, int3 offset);
void GetDimensions(Texture3D<char>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
char Sample(TextureCube<char>, sampler, float3 location);
char SampleBias(TextureCube<char>, sampler, float3 location, float Bias);
char SampleGrad(TextureCube<char>, sampler, float3 location, float3 DDX, float3 DDY);
char SampleLevel(TextureCube<char>, sampler, float3 location, float LOD);
char4 Gather(TextureCube<char>, sampler, float3 location);
char4 GatherRed(TextureCube<char>, sampler, float3 location);
char4 GatherGreen(TextureCube<char>, sampler, float3 location);
char4 GatherBlue(TextureCube<char>, sampler, float3 location);
char4 GatherAlpha(TextureCube<char>, sampler, float3 location);
void GetDimensions(TextureCube<char>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<char>, thread uint* Width);
void GetDimensions(RWTexture1D<char>, thread float* Width);
char Load(RWTexture1D<char>, int location);
void Store(RWTexture1D<char>, char, uint location);
void GetDimensions(RWTexture1DArray<char>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<char>, thread float* Width, thread uint* Elements);
char Load(RWTexture1DArray<char>, int2 location);
void Store(RWTexture1DArray<char>, char, uint2 location);
void GetDimensions(RWTexture2D<char>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<char>, thread float* Width, thread float* Height);
char Load(RWTexture2D<char>, int2 location);
void Store(RWTexture2D<char>, char, uint2 location);
void GetDimensions(RWTexture2DArray<char>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<char>, thread float* Width, thread float* Height, thread float* Elements);
char Load(RWTexture2DArray<char>, int3 location);
void Store(RWTexture2DArray<char>, char, uint3 location);
void GetDimensions(RWTexture3D<char>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<char>, thread float* Width, thread float* Height, thread float* Depth);
char Load(RWTexture3D<char>, int3 location);
void Store(RWTexture3D<char>, char, uint3 location);
char2 Sample(Texture1D<char2>, sampler, float location);
char2 Sample(Texture1D<char2>, sampler, float location, int offset);
char2 Load(Texture1D<char2>, int2 location);
char2 Load(Texture1D<char2>, int2 location, int offset);
void GetDimensions(Texture1D<char2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
char2 Sample(Texture1DArray<char2>, sampler, float2 location);
char2 Sample(Texture1DArray<char2>, sampler, float2 location, int offset);
char2 Load(Texture1DArray<char2>, int3 location);
char2 Load(Texture1DArray<char2>, int3 location, int offset);
void GetDimensions(Texture1DArray<char2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
char2 Sample(Texture2D<char2>, sampler, float2 location);
char2 Sample(Texture2D<char2>, sampler, float2 location, int2 offset);
char2 SampleBias(Texture2D<char2>, sampler, float2 location, float Bias);
char2 SampleBias(Texture2D<char2>, sampler, float2 location, float Bias, int2 offset);
char2 SampleGrad(Texture2D<char2>, sampler, float2 location, float2 DDX, float2 DDY);
char2 SampleGrad(Texture2D<char2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
char2 SampleLevel(Texture2D<char2>, sampler, float2 location, float LOD);
char2 SampleLevel(Texture2D<char2>, sampler, float2 location, float LOD, int2 offset);
char4 Gather(Texture2D<char2>, sampler, float2 location);
char4 Gather(Texture2D<char2>, sampler, float2 location, int2 offset);
char4 GatherRed(Texture2D<char2>, sampler, float2 location);
char4 GatherRed(Texture2D<char2>, sampler, float2 location, int2 offset);
char4 GatherGreen(Texture2D<char2>, sampler, float2 location);
char4 GatherGreen(Texture2D<char2>, sampler, float2 location, int2 offset);
char4 GatherBlue(Texture2D<char2>, sampler, float2 location);
char4 GatherBlue(Texture2D<char2>, sampler, float2 location, int2 offset);
char4 GatherAlpha(Texture2D<char2>, sampler, float2 location);
char4 GatherAlpha(Texture2D<char2>, sampler, float2 location, int2 offset);
char2 Load(Texture2D<char2>, int3 location);
char2 Load(Texture2D<char2>, int3 location, int2 offset);
void GetDimensions(Texture2D<char2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
char2 Sample(Texture2DArray<char2>, sampler, float3 location);
char2 Sample(Texture2DArray<char2>, sampler, float3 location, int2 offset);
char2 SampleBias(Texture2DArray<char2>, sampler, float3 location, float Bias);
char2 SampleBias(Texture2DArray<char2>, sampler, float3 location, float Bias, int2 offset);
char2 SampleGrad(Texture2DArray<char2>, sampler, float3 location, float2 DDX, float2 DDY);
char2 SampleGrad(Texture2DArray<char2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
char2 SampleLevel(Texture2DArray<char2>, sampler, float3 location, float LOD);
char2 SampleLevel(Texture2DArray<char2>, sampler, float3 location, float LOD, int2 offset);
char4 Gather(Texture2DArray<char2>, sampler, float3 location);
char4 Gather(Texture2DArray<char2>, sampler, float3 location, int2 offset);
char4 GatherRed(Texture2DArray<char2>, sampler, float3 location);
char4 GatherRed(Texture2DArray<char2>, sampler, float3 location, int2 offset);
char4 GatherGreen(Texture2DArray<char2>, sampler, float3 location);
char4 GatherGreen(Texture2DArray<char2>, sampler, float3 location, int2 offset);
char4 GatherBlue(Texture2DArray<char2>, sampler, float3 location);
char4 GatherBlue(Texture2DArray<char2>, sampler, float3 location, int2 offset);
char4 GatherAlpha(Texture2DArray<char2>, sampler, float3 location);
char4 GatherAlpha(Texture2DArray<char2>, sampler, float3 location, int2 offset);
char2 Load(Texture2DArray<char2>, int4 location);
char2 Load(Texture2DArray<char2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<char2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
char2 Sample(Texture3D<char2>, sampler, float3 location);
char2 Sample(Texture3D<char2>, sampler, float3 location, int3 offset);
char4 Gather(Texture3D<char2>, sampler, float3 location);
char4 Gather(Texture3D<char2>, sampler, float3 location, int3 offset);
char4 GatherRed(Texture3D<char2>, sampler, float3 location);
char4 GatherRed(Texture3D<char2>, sampler, float3 location, int3 offset);
char4 GatherGreen(Texture3D<char2>, sampler, float3 location);
char4 GatherGreen(Texture3D<char2>, sampler, float3 location, int3 offset);
char4 GatherBlue(Texture3D<char2>, sampler, float3 location);
char4 GatherBlue(Texture3D<char2>, sampler, float3 location, int3 offset);
char4 GatherAlpha(Texture3D<char2>, sampler, float3 location);
char4 GatherAlpha(Texture3D<char2>, sampler, float3 location, int3 offset);
char2 Load(Texture3D<char2>, int4 location);
char2 Load(Texture3D<char2>, int4 location, int3 offset);
void GetDimensions(Texture3D<char2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
char2 Sample(TextureCube<char2>, sampler, float3 location);
char2 SampleBias(TextureCube<char2>, sampler, float3 location, float Bias);
char2 SampleGrad(TextureCube<char2>, sampler, float3 location, float3 DDX, float3 DDY);
char2 SampleLevel(TextureCube<char2>, sampler, float3 location, float LOD);
char4 Gather(TextureCube<char2>, sampler, float3 location);
char4 GatherRed(TextureCube<char2>, sampler, float3 location);
char4 GatherGreen(TextureCube<char2>, sampler, float3 location);
char4 GatherBlue(TextureCube<char2>, sampler, float3 location);
char4 GatherAlpha(TextureCube<char2>, sampler, float3 location);
void GetDimensions(TextureCube<char2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<char2>, thread uint* Width);
void GetDimensions(RWTexture1D<char2>, thread float* Width);
char2 Load(RWTexture1D<char2>, int location);
void Store(RWTexture1D<char2>, char2, uint location);
void GetDimensions(RWTexture1DArray<char2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<char2>, thread float* Width, thread uint* Elements);
char2 Load(RWTexture1DArray<char2>, int2 location);
void Store(RWTexture1DArray<char2>, char2, uint2 location);
void GetDimensions(RWTexture2D<char2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<char2>, thread float* Width, thread float* Height);
char2 Load(RWTexture2D<char2>, int2 location);
void Store(RWTexture2D<char2>, char2, uint2 location);
void GetDimensions(RWTexture2DArray<char2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<char2>, thread float* Width, thread float* Height, thread float* Elements);
char2 Load(RWTexture2DArray<char2>, int3 location);
void Store(RWTexture2DArray<char2>, char2, uint3 location);
void GetDimensions(RWTexture3D<char2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<char2>, thread float* Width, thread float* Height, thread float* Depth);
char2 Load(RWTexture3D<char2>, int3 location);
void Store(RWTexture3D<char2>, char2, uint3 location);
char3 Sample(Texture1D<char3>, sampler, float location);
char3 Sample(Texture1D<char3>, sampler, float location, int offset);
char3 Load(Texture1D<char3>, int2 location);
char3 Load(Texture1D<char3>, int2 location, int offset);
void GetDimensions(Texture1D<char3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
char3 Sample(Texture1DArray<char3>, sampler, float2 location);
char3 Sample(Texture1DArray<char3>, sampler, float2 location, int offset);
char3 Load(Texture1DArray<char3>, int3 location);
char3 Load(Texture1DArray<char3>, int3 location, int offset);
void GetDimensions(Texture1DArray<char3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
char3 Sample(Texture2D<char3>, sampler, float2 location);
char3 Sample(Texture2D<char3>, sampler, float2 location, int2 offset);
char3 SampleBias(Texture2D<char3>, sampler, float2 location, float Bias);
char3 SampleBias(Texture2D<char3>, sampler, float2 location, float Bias, int2 offset);
char3 SampleGrad(Texture2D<char3>, sampler, float2 location, float2 DDX, float2 DDY);
char3 SampleGrad(Texture2D<char3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
char3 SampleLevel(Texture2D<char3>, sampler, float2 location, float LOD);
char3 SampleLevel(Texture2D<char3>, sampler, float2 location, float LOD, int2 offset);
char4 Gather(Texture2D<char3>, sampler, float2 location);
char4 Gather(Texture2D<char3>, sampler, float2 location, int2 offset);
char4 GatherRed(Texture2D<char3>, sampler, float2 location);
char4 GatherRed(Texture2D<char3>, sampler, float2 location, int2 offset);
char4 GatherGreen(Texture2D<char3>, sampler, float2 location);
char4 GatherGreen(Texture2D<char3>, sampler, float2 location, int2 offset);
char4 GatherBlue(Texture2D<char3>, sampler, float2 location);
char4 GatherBlue(Texture2D<char3>, sampler, float2 location, int2 offset);
char4 GatherAlpha(Texture2D<char3>, sampler, float2 location);
char4 GatherAlpha(Texture2D<char3>, sampler, float2 location, int2 offset);
char3 Load(Texture2D<char3>, int3 location);
char3 Load(Texture2D<char3>, int3 location, int2 offset);
void GetDimensions(Texture2D<char3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
char3 Sample(Texture2DArray<char3>, sampler, float3 location);
char3 Sample(Texture2DArray<char3>, sampler, float3 location, int2 offset);
char3 SampleBias(Texture2DArray<char3>, sampler, float3 location, float Bias);
char3 SampleBias(Texture2DArray<char3>, sampler, float3 location, float Bias, int2 offset);
char3 SampleGrad(Texture2DArray<char3>, sampler, float3 location, float2 DDX, float2 DDY);
char3 SampleGrad(Texture2DArray<char3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
char3 SampleLevel(Texture2DArray<char3>, sampler, float3 location, float LOD);
char3 SampleLevel(Texture2DArray<char3>, sampler, float3 location, float LOD, int2 offset);
char4 Gather(Texture2DArray<char3>, sampler, float3 location);
char4 Gather(Texture2DArray<char3>, sampler, float3 location, int2 offset);
char4 GatherRed(Texture2DArray<char3>, sampler, float3 location);
char4 GatherRed(Texture2DArray<char3>, sampler, float3 location, int2 offset);
char4 GatherGreen(Texture2DArray<char3>, sampler, float3 location);
char4 GatherGreen(Texture2DArray<char3>, sampler, float3 location, int2 offset);
char4 GatherBlue(Texture2DArray<char3>, sampler, float3 location);
char4 GatherBlue(Texture2DArray<char3>, sampler, float3 location, int2 offset);
char4 GatherAlpha(Texture2DArray<char3>, sampler, float3 location);
char4 GatherAlpha(Texture2DArray<char3>, sampler, float3 location, int2 offset);
char3 Load(Texture2DArray<char3>, int4 location);
char3 Load(Texture2DArray<char3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<char3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
char3 Sample(Texture3D<char3>, sampler, float3 location);
char3 Sample(Texture3D<char3>, sampler, float3 location, int3 offset);
char4 Gather(Texture3D<char3>, sampler, float3 location);
char4 Gather(Texture3D<char3>, sampler, float3 location, int3 offset);
char4 GatherRed(Texture3D<char3>, sampler, float3 location);
char4 GatherRed(Texture3D<char3>, sampler, float3 location, int3 offset);
char4 GatherGreen(Texture3D<char3>, sampler, float3 location);
char4 GatherGreen(Texture3D<char3>, sampler, float3 location, int3 offset);
char4 GatherBlue(Texture3D<char3>, sampler, float3 location);
char4 GatherBlue(Texture3D<char3>, sampler, float3 location, int3 offset);
char4 GatherAlpha(Texture3D<char3>, sampler, float3 location);
char4 GatherAlpha(Texture3D<char3>, sampler, float3 location, int3 offset);
char3 Load(Texture3D<char3>, int4 location);
char3 Load(Texture3D<char3>, int4 location, int3 offset);
void GetDimensions(Texture3D<char3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
char3 Sample(TextureCube<char3>, sampler, float3 location);
char3 SampleBias(TextureCube<char3>, sampler, float3 location, float Bias);
char3 SampleGrad(TextureCube<char3>, sampler, float3 location, float3 DDX, float3 DDY);
char3 SampleLevel(TextureCube<char3>, sampler, float3 location, float LOD);
char4 Gather(TextureCube<char3>, sampler, float3 location);
char4 GatherRed(TextureCube<char3>, sampler, float3 location);
char4 GatherGreen(TextureCube<char3>, sampler, float3 location);
char4 GatherBlue(TextureCube<char3>, sampler, float3 location);
char4 GatherAlpha(TextureCube<char3>, sampler, float3 location);
void GetDimensions(TextureCube<char3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<char3>, thread uint* Width);
void GetDimensions(RWTexture1D<char3>, thread float* Width);
char3 Load(RWTexture1D<char3>, int location);
void Store(RWTexture1D<char3>, char3, uint location);
void GetDimensions(RWTexture1DArray<char3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<char3>, thread float* Width, thread uint* Elements);
char3 Load(RWTexture1DArray<char3>, int2 location);
void Store(RWTexture1DArray<char3>, char3, uint2 location);
void GetDimensions(RWTexture2D<char3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<char3>, thread float* Width, thread float* Height);
char3 Load(RWTexture2D<char3>, int2 location);
void Store(RWTexture2D<char3>, char3, uint2 location);
void GetDimensions(RWTexture2DArray<char3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<char3>, thread float* Width, thread float* Height, thread float* Elements);
char3 Load(RWTexture2DArray<char3>, int3 location);
void Store(RWTexture2DArray<char3>, char3, uint3 location);
void GetDimensions(RWTexture3D<char3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<char3>, thread float* Width, thread float* Height, thread float* Depth);
char3 Load(RWTexture3D<char3>, int3 location);
void Store(RWTexture3D<char3>, char3, uint3 location);
char4 Sample(Texture1D<char4>, sampler, float location);
char4 Sample(Texture1D<char4>, sampler, float location, int offset);
char4 Load(Texture1D<char4>, int2 location);
char4 Load(Texture1D<char4>, int2 location, int offset);
void GetDimensions(Texture1D<char4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
char4 Sample(Texture1DArray<char4>, sampler, float2 location);
char4 Sample(Texture1DArray<char4>, sampler, float2 location, int offset);
char4 Load(Texture1DArray<char4>, int3 location);
char4 Load(Texture1DArray<char4>, int3 location, int offset);
void GetDimensions(Texture1DArray<char4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
char4 Sample(Texture2D<char4>, sampler, float2 location);
char4 Sample(Texture2D<char4>, sampler, float2 location, int2 offset);
char4 SampleBias(Texture2D<char4>, sampler, float2 location, float Bias);
char4 SampleBias(Texture2D<char4>, sampler, float2 location, float Bias, int2 offset);
char4 SampleGrad(Texture2D<char4>, sampler, float2 location, float2 DDX, float2 DDY);
char4 SampleGrad(Texture2D<char4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
char4 SampleLevel(Texture2D<char4>, sampler, float2 location, float LOD);
char4 SampleLevel(Texture2D<char4>, sampler, float2 location, float LOD, int2 offset);
char4 Gather(Texture2D<char4>, sampler, float2 location);
char4 Gather(Texture2D<char4>, sampler, float2 location, int2 offset);
char4 GatherRed(Texture2D<char4>, sampler, float2 location);
char4 GatherRed(Texture2D<char4>, sampler, float2 location, int2 offset);
char4 GatherGreen(Texture2D<char4>, sampler, float2 location);
char4 GatherGreen(Texture2D<char4>, sampler, float2 location, int2 offset);
char4 GatherBlue(Texture2D<char4>, sampler, float2 location);
char4 GatherBlue(Texture2D<char4>, sampler, float2 location, int2 offset);
char4 GatherAlpha(Texture2D<char4>, sampler, float2 location);
char4 GatherAlpha(Texture2D<char4>, sampler, float2 location, int2 offset);
char4 Load(Texture2D<char4>, int3 location);
char4 Load(Texture2D<char4>, int3 location, int2 offset);
void GetDimensions(Texture2D<char4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
char4 Sample(Texture2DArray<char4>, sampler, float3 location);
char4 Sample(Texture2DArray<char4>, sampler, float3 location, int2 offset);
char4 SampleBias(Texture2DArray<char4>, sampler, float3 location, float Bias);
char4 SampleBias(Texture2DArray<char4>, sampler, float3 location, float Bias, int2 offset);
char4 SampleGrad(Texture2DArray<char4>, sampler, float3 location, float2 DDX, float2 DDY);
char4 SampleGrad(Texture2DArray<char4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
char4 SampleLevel(Texture2DArray<char4>, sampler, float3 location, float LOD);
char4 SampleLevel(Texture2DArray<char4>, sampler, float3 location, float LOD, int2 offset);
char4 Gather(Texture2DArray<char4>, sampler, float3 location);
char4 Gather(Texture2DArray<char4>, sampler, float3 location, int2 offset);
char4 GatherRed(Texture2DArray<char4>, sampler, float3 location);
char4 GatherRed(Texture2DArray<char4>, sampler, float3 location, int2 offset);
char4 GatherGreen(Texture2DArray<char4>, sampler, float3 location);
char4 GatherGreen(Texture2DArray<char4>, sampler, float3 location, int2 offset);
char4 GatherBlue(Texture2DArray<char4>, sampler, float3 location);
char4 GatherBlue(Texture2DArray<char4>, sampler, float3 location, int2 offset);
char4 GatherAlpha(Texture2DArray<char4>, sampler, float3 location);
char4 GatherAlpha(Texture2DArray<char4>, sampler, float3 location, int2 offset);
char4 Load(Texture2DArray<char4>, int4 location);
char4 Load(Texture2DArray<char4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<char4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
char4 Sample(Texture3D<char4>, sampler, float3 location);
char4 Sample(Texture3D<char4>, sampler, float3 location, int3 offset);
char4 Gather(Texture3D<char4>, sampler, float3 location);
char4 Gather(Texture3D<char4>, sampler, float3 location, int3 offset);
char4 GatherRed(Texture3D<char4>, sampler, float3 location);
char4 GatherRed(Texture3D<char4>, sampler, float3 location, int3 offset);
char4 GatherGreen(Texture3D<char4>, sampler, float3 location);
char4 GatherGreen(Texture3D<char4>, sampler, float3 location, int3 offset);
char4 GatherBlue(Texture3D<char4>, sampler, float3 location);
char4 GatherBlue(Texture3D<char4>, sampler, float3 location, int3 offset);
char4 GatherAlpha(Texture3D<char4>, sampler, float3 location);
char4 GatherAlpha(Texture3D<char4>, sampler, float3 location, int3 offset);
char4 Load(Texture3D<char4>, int4 location);
char4 Load(Texture3D<char4>, int4 location, int3 offset);
void GetDimensions(Texture3D<char4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
char4 Sample(TextureCube<char4>, sampler, float3 location);
char4 SampleBias(TextureCube<char4>, sampler, float3 location, float Bias);
char4 SampleGrad(TextureCube<char4>, sampler, float3 location, float3 DDX, float3 DDY);
char4 SampleLevel(TextureCube<char4>, sampler, float3 location, float LOD);
char4 Gather(TextureCube<char4>, sampler, float3 location);
char4 GatherRed(TextureCube<char4>, sampler, float3 location);
char4 GatherGreen(TextureCube<char4>, sampler, float3 location);
char4 GatherBlue(TextureCube<char4>, sampler, float3 location);
char4 GatherAlpha(TextureCube<char4>, sampler, float3 location);
void GetDimensions(TextureCube<char4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<char4>, thread uint* Width);
void GetDimensions(RWTexture1D<char4>, thread float* Width);
char4 Load(RWTexture1D<char4>, int location);
void Store(RWTexture1D<char4>, char4, uint location);
void GetDimensions(RWTexture1DArray<char4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<char4>, thread float* Width, thread uint* Elements);
char4 Load(RWTexture1DArray<char4>, int2 location);
void Store(RWTexture1DArray<char4>, char4, uint2 location);
void GetDimensions(RWTexture2D<char4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<char4>, thread float* Width, thread float* Height);
char4 Load(RWTexture2D<char4>, int2 location);
void Store(RWTexture2D<char4>, char4, uint2 location);
void GetDimensions(RWTexture2DArray<char4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<char4>, thread float* Width, thread float* Height, thread float* Elements);
char4 Load(RWTexture2DArray<char4>, int3 location);
void Store(RWTexture2DArray<char4>, char4, uint3 location);
void GetDimensions(RWTexture3D<char4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<char4>, thread float* Width, thread float* Height, thread float* Depth);
char4 Load(RWTexture3D<char4>, int3 location);
void Store(RWTexture3D<char4>, char4, uint3 location);
short Sample(Texture1D<short>, sampler, float location);
short Sample(Texture1D<short>, sampler, float location, int offset);
short Load(Texture1D<short>, int2 location);
short Load(Texture1D<short>, int2 location, int offset);
void GetDimensions(Texture1D<short>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
short Sample(Texture1DArray<short>, sampler, float2 location);
short Sample(Texture1DArray<short>, sampler, float2 location, int offset);
short Load(Texture1DArray<short>, int3 location);
short Load(Texture1DArray<short>, int3 location, int offset);
void GetDimensions(Texture1DArray<short>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
short Sample(Texture2D<short>, sampler, float2 location);
short Sample(Texture2D<short>, sampler, float2 location, int2 offset);
short SampleBias(Texture2D<short>, sampler, float2 location, float Bias);
short SampleBias(Texture2D<short>, sampler, float2 location, float Bias, int2 offset);
short SampleGrad(Texture2D<short>, sampler, float2 location, float2 DDX, float2 DDY);
short SampleGrad(Texture2D<short>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
short SampleLevel(Texture2D<short>, sampler, float2 location, float LOD);
short SampleLevel(Texture2D<short>, sampler, float2 location, float LOD, int2 offset);
short4 Gather(Texture2D<short>, sampler, float2 location);
short4 Gather(Texture2D<short>, sampler, float2 location, int2 offset);
short4 GatherRed(Texture2D<short>, sampler, float2 location);
short4 GatherRed(Texture2D<short>, sampler, float2 location, int2 offset);
short4 GatherGreen(Texture2D<short>, sampler, float2 location);
short4 GatherGreen(Texture2D<short>, sampler, float2 location, int2 offset);
short4 GatherBlue(Texture2D<short>, sampler, float2 location);
short4 GatherBlue(Texture2D<short>, sampler, float2 location, int2 offset);
short4 GatherAlpha(Texture2D<short>, sampler, float2 location);
short4 GatherAlpha(Texture2D<short>, sampler, float2 location, int2 offset);
short Load(Texture2D<short>, int3 location);
short Load(Texture2D<short>, int3 location, int2 offset);
void GetDimensions(Texture2D<short>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
short Sample(Texture2DArray<short>, sampler, float3 location);
short Sample(Texture2DArray<short>, sampler, float3 location, int2 offset);
short SampleBias(Texture2DArray<short>, sampler, float3 location, float Bias);
short SampleBias(Texture2DArray<short>, sampler, float3 location, float Bias, int2 offset);
short SampleGrad(Texture2DArray<short>, sampler, float3 location, float2 DDX, float2 DDY);
short SampleGrad(Texture2DArray<short>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
short SampleLevel(Texture2DArray<short>, sampler, float3 location, float LOD);
short SampleLevel(Texture2DArray<short>, sampler, float3 location, float LOD, int2 offset);
short4 Gather(Texture2DArray<short>, sampler, float3 location);
short4 Gather(Texture2DArray<short>, sampler, float3 location, int2 offset);
short4 GatherRed(Texture2DArray<short>, sampler, float3 location);
short4 GatherRed(Texture2DArray<short>, sampler, float3 location, int2 offset);
short4 GatherGreen(Texture2DArray<short>, sampler, float3 location);
short4 GatherGreen(Texture2DArray<short>, sampler, float3 location, int2 offset);
short4 GatherBlue(Texture2DArray<short>, sampler, float3 location);
short4 GatherBlue(Texture2DArray<short>, sampler, float3 location, int2 offset);
short4 GatherAlpha(Texture2DArray<short>, sampler, float3 location);
short4 GatherAlpha(Texture2DArray<short>, sampler, float3 location, int2 offset);
short Load(Texture2DArray<short>, int4 location);
short Load(Texture2DArray<short>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<short>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
short Sample(Texture3D<short>, sampler, float3 location);
short Sample(Texture3D<short>, sampler, float3 location, int3 offset);
short4 Gather(Texture3D<short>, sampler, float3 location);
short4 Gather(Texture3D<short>, sampler, float3 location, int3 offset);
short4 GatherRed(Texture3D<short>, sampler, float3 location);
short4 GatherRed(Texture3D<short>, sampler, float3 location, int3 offset);
short4 GatherGreen(Texture3D<short>, sampler, float3 location);
short4 GatherGreen(Texture3D<short>, sampler, float3 location, int3 offset);
short4 GatherBlue(Texture3D<short>, sampler, float3 location);
short4 GatherBlue(Texture3D<short>, sampler, float3 location, int3 offset);
short4 GatherAlpha(Texture3D<short>, sampler, float3 location);
short4 GatherAlpha(Texture3D<short>, sampler, float3 location, int3 offset);
short Load(Texture3D<short>, int4 location);
short Load(Texture3D<short>, int4 location, int3 offset);
void GetDimensions(Texture3D<short>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
short Sample(TextureCube<short>, sampler, float3 location);
short SampleBias(TextureCube<short>, sampler, float3 location, float Bias);
short SampleGrad(TextureCube<short>, sampler, float3 location, float3 DDX, float3 DDY);
short SampleLevel(TextureCube<short>, sampler, float3 location, float LOD);
short4 Gather(TextureCube<short>, sampler, float3 location);
short4 GatherRed(TextureCube<short>, sampler, float3 location);
short4 GatherGreen(TextureCube<short>, sampler, float3 location);
short4 GatherBlue(TextureCube<short>, sampler, float3 location);
short4 GatherAlpha(TextureCube<short>, sampler, float3 location);
void GetDimensions(TextureCube<short>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<short>, thread uint* Width);
void GetDimensions(RWTexture1D<short>, thread float* Width);
short Load(RWTexture1D<short>, int location);
void Store(RWTexture1D<short>, short, uint location);
void GetDimensions(RWTexture1DArray<short>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<short>, thread float* Width, thread uint* Elements);
short Load(RWTexture1DArray<short>, int2 location);
void Store(RWTexture1DArray<short>, short, uint2 location);
void GetDimensions(RWTexture2D<short>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<short>, thread float* Width, thread float* Height);
short Load(RWTexture2D<short>, int2 location);
void Store(RWTexture2D<short>, short, uint2 location);
void GetDimensions(RWTexture2DArray<short>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<short>, thread float* Width, thread float* Height, thread float* Elements);
short Load(RWTexture2DArray<short>, int3 location);
void Store(RWTexture2DArray<short>, short, uint3 location);
void GetDimensions(RWTexture3D<short>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<short>, thread float* Width, thread float* Height, thread float* Depth);
short Load(RWTexture3D<short>, int3 location);
void Store(RWTexture3D<short>, short, uint3 location);
short2 Sample(Texture1D<short2>, sampler, float location);
short2 Sample(Texture1D<short2>, sampler, float location, int offset);
short2 Load(Texture1D<short2>, int2 location);
short2 Load(Texture1D<short2>, int2 location, int offset);
void GetDimensions(Texture1D<short2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
short2 Sample(Texture1DArray<short2>, sampler, float2 location);
short2 Sample(Texture1DArray<short2>, sampler, float2 location, int offset);
short2 Load(Texture1DArray<short2>, int3 location);
short2 Load(Texture1DArray<short2>, int3 location, int offset);
void GetDimensions(Texture1DArray<short2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
short2 Sample(Texture2D<short2>, sampler, float2 location);
short2 Sample(Texture2D<short2>, sampler, float2 location, int2 offset);
short2 SampleBias(Texture2D<short2>, sampler, float2 location, float Bias);
short2 SampleBias(Texture2D<short2>, sampler, float2 location, float Bias, int2 offset);
short2 SampleGrad(Texture2D<short2>, sampler, float2 location, float2 DDX, float2 DDY);
short2 SampleGrad(Texture2D<short2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
short2 SampleLevel(Texture2D<short2>, sampler, float2 location, float LOD);
short2 SampleLevel(Texture2D<short2>, sampler, float2 location, float LOD, int2 offset);
short4 Gather(Texture2D<short2>, sampler, float2 location);
short4 Gather(Texture2D<short2>, sampler, float2 location, int2 offset);
short4 GatherRed(Texture2D<short2>, sampler, float2 location);
short4 GatherRed(Texture2D<short2>, sampler, float2 location, int2 offset);
short4 GatherGreen(Texture2D<short2>, sampler, float2 location);
short4 GatherGreen(Texture2D<short2>, sampler, float2 location, int2 offset);
short4 GatherBlue(Texture2D<short2>, sampler, float2 location);
short4 GatherBlue(Texture2D<short2>, sampler, float2 location, int2 offset);
short4 GatherAlpha(Texture2D<short2>, sampler, float2 location);
short4 GatherAlpha(Texture2D<short2>, sampler, float2 location, int2 offset);
short2 Load(Texture2D<short2>, int3 location);
short2 Load(Texture2D<short2>, int3 location, int2 offset);
void GetDimensions(Texture2D<short2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
short2 Sample(Texture2DArray<short2>, sampler, float3 location);
short2 Sample(Texture2DArray<short2>, sampler, float3 location, int2 offset);
short2 SampleBias(Texture2DArray<short2>, sampler, float3 location, float Bias);
short2 SampleBias(Texture2DArray<short2>, sampler, float3 location, float Bias, int2 offset);
short2 SampleGrad(Texture2DArray<short2>, sampler, float3 location, float2 DDX, float2 DDY);
short2 SampleGrad(Texture2DArray<short2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
short2 SampleLevel(Texture2DArray<short2>, sampler, float3 location, float LOD);
short2 SampleLevel(Texture2DArray<short2>, sampler, float3 location, float LOD, int2 offset);
short4 Gather(Texture2DArray<short2>, sampler, float3 location);
short4 Gather(Texture2DArray<short2>, sampler, float3 location, int2 offset);
short4 GatherRed(Texture2DArray<short2>, sampler, float3 location);
short4 GatherRed(Texture2DArray<short2>, sampler, float3 location, int2 offset);
short4 GatherGreen(Texture2DArray<short2>, sampler, float3 location);
short4 GatherGreen(Texture2DArray<short2>, sampler, float3 location, int2 offset);
short4 GatherBlue(Texture2DArray<short2>, sampler, float3 location);
short4 GatherBlue(Texture2DArray<short2>, sampler, float3 location, int2 offset);
short4 GatherAlpha(Texture2DArray<short2>, sampler, float3 location);
short4 GatherAlpha(Texture2DArray<short2>, sampler, float3 location, int2 offset);
short2 Load(Texture2DArray<short2>, int4 location);
short2 Load(Texture2DArray<short2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<short2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
short2 Sample(Texture3D<short2>, sampler, float3 location);
short2 Sample(Texture3D<short2>, sampler, float3 location, int3 offset);
short4 Gather(Texture3D<short2>, sampler, float3 location);
short4 Gather(Texture3D<short2>, sampler, float3 location, int3 offset);
short4 GatherRed(Texture3D<short2>, sampler, float3 location);
short4 GatherRed(Texture3D<short2>, sampler, float3 location, int3 offset);
short4 GatherGreen(Texture3D<short2>, sampler, float3 location);
short4 GatherGreen(Texture3D<short2>, sampler, float3 location, int3 offset);
short4 GatherBlue(Texture3D<short2>, sampler, float3 location);
short4 GatherBlue(Texture3D<short2>, sampler, float3 location, int3 offset);
short4 GatherAlpha(Texture3D<short2>, sampler, float3 location);
short4 GatherAlpha(Texture3D<short2>, sampler, float3 location, int3 offset);
short2 Load(Texture3D<short2>, int4 location);
short2 Load(Texture3D<short2>, int4 location, int3 offset);
void GetDimensions(Texture3D<short2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
short2 Sample(TextureCube<short2>, sampler, float3 location);
short2 SampleBias(TextureCube<short2>, sampler, float3 location, float Bias);
short2 SampleGrad(TextureCube<short2>, sampler, float3 location, float3 DDX, float3 DDY);
short2 SampleLevel(TextureCube<short2>, sampler, float3 location, float LOD);
short4 Gather(TextureCube<short2>, sampler, float3 location);
short4 GatherRed(TextureCube<short2>, sampler, float3 location);
short4 GatherGreen(TextureCube<short2>, sampler, float3 location);
short4 GatherBlue(TextureCube<short2>, sampler, float3 location);
short4 GatherAlpha(TextureCube<short2>, sampler, float3 location);
void GetDimensions(TextureCube<short2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<short2>, thread uint* Width);
void GetDimensions(RWTexture1D<short2>, thread float* Width);
short2 Load(RWTexture1D<short2>, int location);
void Store(RWTexture1D<short2>, short2, uint location);
void GetDimensions(RWTexture1DArray<short2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<short2>, thread float* Width, thread uint* Elements);
short2 Load(RWTexture1DArray<short2>, int2 location);
void Store(RWTexture1DArray<short2>, short2, uint2 location);
void GetDimensions(RWTexture2D<short2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<short2>, thread float* Width, thread float* Height);
short2 Load(RWTexture2D<short2>, int2 location);
void Store(RWTexture2D<short2>, short2, uint2 location);
void GetDimensions(RWTexture2DArray<short2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<short2>, thread float* Width, thread float* Height, thread float* Elements);
short2 Load(RWTexture2DArray<short2>, int3 location);
void Store(RWTexture2DArray<short2>, short2, uint3 location);
void GetDimensions(RWTexture3D<short2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<short2>, thread float* Width, thread float* Height, thread float* Depth);
short2 Load(RWTexture3D<short2>, int3 location);
void Store(RWTexture3D<short2>, short2, uint3 location);
short3 Sample(Texture1D<short3>, sampler, float location);
short3 Sample(Texture1D<short3>, sampler, float location, int offset);
short3 Load(Texture1D<short3>, int2 location);
short3 Load(Texture1D<short3>, int2 location, int offset);
void GetDimensions(Texture1D<short3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
short3 Sample(Texture1DArray<short3>, sampler, float2 location);
short3 Sample(Texture1DArray<short3>, sampler, float2 location, int offset);
short3 Load(Texture1DArray<short3>, int3 location);
short3 Load(Texture1DArray<short3>, int3 location, int offset);
void GetDimensions(Texture1DArray<short3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
short3 Sample(Texture2D<short3>, sampler, float2 location);
short3 Sample(Texture2D<short3>, sampler, float2 location, int2 offset);
short3 SampleBias(Texture2D<short3>, sampler, float2 location, float Bias);
short3 SampleBias(Texture2D<short3>, sampler, float2 location, float Bias, int2 offset);
short3 SampleGrad(Texture2D<short3>, sampler, float2 location, float2 DDX, float2 DDY);
short3 SampleGrad(Texture2D<short3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
short3 SampleLevel(Texture2D<short3>, sampler, float2 location, float LOD);
short3 SampleLevel(Texture2D<short3>, sampler, float2 location, float LOD, int2 offset);
short4 Gather(Texture2D<short3>, sampler, float2 location);
short4 Gather(Texture2D<short3>, sampler, float2 location, int2 offset);
short4 GatherRed(Texture2D<short3>, sampler, float2 location);
short4 GatherRed(Texture2D<short3>, sampler, float2 location, int2 offset);
short4 GatherGreen(Texture2D<short3>, sampler, float2 location);
short4 GatherGreen(Texture2D<short3>, sampler, float2 location, int2 offset);
short4 GatherBlue(Texture2D<short3>, sampler, float2 location);
short4 GatherBlue(Texture2D<short3>, sampler, float2 location, int2 offset);
short4 GatherAlpha(Texture2D<short3>, sampler, float2 location);
short4 GatherAlpha(Texture2D<short3>, sampler, float2 location, int2 offset);
short3 Load(Texture2D<short3>, int3 location);
short3 Load(Texture2D<short3>, int3 location, int2 offset);
void GetDimensions(Texture2D<short3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
short3 Sample(Texture2DArray<short3>, sampler, float3 location);
short3 Sample(Texture2DArray<short3>, sampler, float3 location, int2 offset);
short3 SampleBias(Texture2DArray<short3>, sampler, float3 location, float Bias);
short3 SampleBias(Texture2DArray<short3>, sampler, float3 location, float Bias, int2 offset);
short3 SampleGrad(Texture2DArray<short3>, sampler, float3 location, float2 DDX, float2 DDY);
short3 SampleGrad(Texture2DArray<short3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
short3 SampleLevel(Texture2DArray<short3>, sampler, float3 location, float LOD);
short3 SampleLevel(Texture2DArray<short3>, sampler, float3 location, float LOD, int2 offset);
short4 Gather(Texture2DArray<short3>, sampler, float3 location);
short4 Gather(Texture2DArray<short3>, sampler, float3 location, int2 offset);
short4 GatherRed(Texture2DArray<short3>, sampler, float3 location);
short4 GatherRed(Texture2DArray<short3>, sampler, float3 location, int2 offset);
short4 GatherGreen(Texture2DArray<short3>, sampler, float3 location);
short4 GatherGreen(Texture2DArray<short3>, sampler, float3 location, int2 offset);
short4 GatherBlue(Texture2DArray<short3>, sampler, float3 location);
short4 GatherBlue(Texture2DArray<short3>, sampler, float3 location, int2 offset);
short4 GatherAlpha(Texture2DArray<short3>, sampler, float3 location);
short4 GatherAlpha(Texture2DArray<short3>, sampler, float3 location, int2 offset);
short3 Load(Texture2DArray<short3>, int4 location);
short3 Load(Texture2DArray<short3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<short3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
short3 Sample(Texture3D<short3>, sampler, float3 location);
short3 Sample(Texture3D<short3>, sampler, float3 location, int3 offset);
short4 Gather(Texture3D<short3>, sampler, float3 location);
short4 Gather(Texture3D<short3>, sampler, float3 location, int3 offset);
short4 GatherRed(Texture3D<short3>, sampler, float3 location);
short4 GatherRed(Texture3D<short3>, sampler, float3 location, int3 offset);
short4 GatherGreen(Texture3D<short3>, sampler, float3 location);
short4 GatherGreen(Texture3D<short3>, sampler, float3 location, int3 offset);
short4 GatherBlue(Texture3D<short3>, sampler, float3 location);
short4 GatherBlue(Texture3D<short3>, sampler, float3 location, int3 offset);
short4 GatherAlpha(Texture3D<short3>, sampler, float3 location);
short4 GatherAlpha(Texture3D<short3>, sampler, float3 location, int3 offset);
short3 Load(Texture3D<short3>, int4 location);
short3 Load(Texture3D<short3>, int4 location, int3 offset);
void GetDimensions(Texture3D<short3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
short3 Sample(TextureCube<short3>, sampler, float3 location);
short3 SampleBias(TextureCube<short3>, sampler, float3 location, float Bias);
short3 SampleGrad(TextureCube<short3>, sampler, float3 location, float3 DDX, float3 DDY);
short3 SampleLevel(TextureCube<short3>, sampler, float3 location, float LOD);
short4 Gather(TextureCube<short3>, sampler, float3 location);
short4 GatherRed(TextureCube<short3>, sampler, float3 location);
short4 GatherGreen(TextureCube<short3>, sampler, float3 location);
short4 GatherBlue(TextureCube<short3>, sampler, float3 location);
short4 GatherAlpha(TextureCube<short3>, sampler, float3 location);
void GetDimensions(TextureCube<short3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<short3>, thread uint* Width);
void GetDimensions(RWTexture1D<short3>, thread float* Width);
short3 Load(RWTexture1D<short3>, int location);
void Store(RWTexture1D<short3>, short3, uint location);
void GetDimensions(RWTexture1DArray<short3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<short3>, thread float* Width, thread uint* Elements);
short3 Load(RWTexture1DArray<short3>, int2 location);
void Store(RWTexture1DArray<short3>, short3, uint2 location);
void GetDimensions(RWTexture2D<short3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<short3>, thread float* Width, thread float* Height);
short3 Load(RWTexture2D<short3>, int2 location);
void Store(RWTexture2D<short3>, short3, uint2 location);
void GetDimensions(RWTexture2DArray<short3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<short3>, thread float* Width, thread float* Height, thread float* Elements);
short3 Load(RWTexture2DArray<short3>, int3 location);
void Store(RWTexture2DArray<short3>, short3, uint3 location);
void GetDimensions(RWTexture3D<short3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<short3>, thread float* Width, thread float* Height, thread float* Depth);
short3 Load(RWTexture3D<short3>, int3 location);
void Store(RWTexture3D<short3>, short3, uint3 location);
short4 Sample(Texture1D<short4>, sampler, float location);
short4 Sample(Texture1D<short4>, sampler, float location, int offset);
short4 Load(Texture1D<short4>, int2 location);
short4 Load(Texture1D<short4>, int2 location, int offset);
void GetDimensions(Texture1D<short4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
short4 Sample(Texture1DArray<short4>, sampler, float2 location);
short4 Sample(Texture1DArray<short4>, sampler, float2 location, int offset);
short4 Load(Texture1DArray<short4>, int3 location);
short4 Load(Texture1DArray<short4>, int3 location, int offset);
void GetDimensions(Texture1DArray<short4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
short4 Sample(Texture2D<short4>, sampler, float2 location);
short4 Sample(Texture2D<short4>, sampler, float2 location, int2 offset);
short4 SampleBias(Texture2D<short4>, sampler, float2 location, float Bias);
short4 SampleBias(Texture2D<short4>, sampler, float2 location, float Bias, int2 offset);
short4 SampleGrad(Texture2D<short4>, sampler, float2 location, float2 DDX, float2 DDY);
short4 SampleGrad(Texture2D<short4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
short4 SampleLevel(Texture2D<short4>, sampler, float2 location, float LOD);
short4 SampleLevel(Texture2D<short4>, sampler, float2 location, float LOD, int2 offset);
short4 Gather(Texture2D<short4>, sampler, float2 location);
short4 Gather(Texture2D<short4>, sampler, float2 location, int2 offset);
short4 GatherRed(Texture2D<short4>, sampler, float2 location);
short4 GatherRed(Texture2D<short4>, sampler, float2 location, int2 offset);
short4 GatherGreen(Texture2D<short4>, sampler, float2 location);
short4 GatherGreen(Texture2D<short4>, sampler, float2 location, int2 offset);
short4 GatherBlue(Texture2D<short4>, sampler, float2 location);
short4 GatherBlue(Texture2D<short4>, sampler, float2 location, int2 offset);
short4 GatherAlpha(Texture2D<short4>, sampler, float2 location);
short4 GatherAlpha(Texture2D<short4>, sampler, float2 location, int2 offset);
short4 Load(Texture2D<short4>, int3 location);
short4 Load(Texture2D<short4>, int3 location, int2 offset);
void GetDimensions(Texture2D<short4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
short4 Sample(Texture2DArray<short4>, sampler, float3 location);
short4 Sample(Texture2DArray<short4>, sampler, float3 location, int2 offset);
short4 SampleBias(Texture2DArray<short4>, sampler, float3 location, float Bias);
short4 SampleBias(Texture2DArray<short4>, sampler, float3 location, float Bias, int2 offset);
short4 SampleGrad(Texture2DArray<short4>, sampler, float3 location, float2 DDX, float2 DDY);
short4 SampleGrad(Texture2DArray<short4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
short4 SampleLevel(Texture2DArray<short4>, sampler, float3 location, float LOD);
short4 SampleLevel(Texture2DArray<short4>, sampler, float3 location, float LOD, int2 offset);
short4 Gather(Texture2DArray<short4>, sampler, float3 location);
short4 Gather(Texture2DArray<short4>, sampler, float3 location, int2 offset);
short4 GatherRed(Texture2DArray<short4>, sampler, float3 location);
short4 GatherRed(Texture2DArray<short4>, sampler, float3 location, int2 offset);
short4 GatherGreen(Texture2DArray<short4>, sampler, float3 location);
short4 GatherGreen(Texture2DArray<short4>, sampler, float3 location, int2 offset);
short4 GatherBlue(Texture2DArray<short4>, sampler, float3 location);
short4 GatherBlue(Texture2DArray<short4>, sampler, float3 location, int2 offset);
short4 GatherAlpha(Texture2DArray<short4>, sampler, float3 location);
short4 GatherAlpha(Texture2DArray<short4>, sampler, float3 location, int2 offset);
short4 Load(Texture2DArray<short4>, int4 location);
short4 Load(Texture2DArray<short4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<short4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
short4 Sample(Texture3D<short4>, sampler, float3 location);
short4 Sample(Texture3D<short4>, sampler, float3 location, int3 offset);
short4 Gather(Texture3D<short4>, sampler, float3 location);
short4 Gather(Texture3D<short4>, sampler, float3 location, int3 offset);
short4 GatherRed(Texture3D<short4>, sampler, float3 location);
short4 GatherRed(Texture3D<short4>, sampler, float3 location, int3 offset);
short4 GatherGreen(Texture3D<short4>, sampler, float3 location);
short4 GatherGreen(Texture3D<short4>, sampler, float3 location, int3 offset);
short4 GatherBlue(Texture3D<short4>, sampler, float3 location);
short4 GatherBlue(Texture3D<short4>, sampler, float3 location, int3 offset);
short4 GatherAlpha(Texture3D<short4>, sampler, float3 location);
short4 GatherAlpha(Texture3D<short4>, sampler, float3 location, int3 offset);
short4 Load(Texture3D<short4>, int4 location);
short4 Load(Texture3D<short4>, int4 location, int3 offset);
void GetDimensions(Texture3D<short4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
short4 Sample(TextureCube<short4>, sampler, float3 location);
short4 SampleBias(TextureCube<short4>, sampler, float3 location, float Bias);
short4 SampleGrad(TextureCube<short4>, sampler, float3 location, float3 DDX, float3 DDY);
short4 SampleLevel(TextureCube<short4>, sampler, float3 location, float LOD);
short4 Gather(TextureCube<short4>, sampler, float3 location);
short4 GatherRed(TextureCube<short4>, sampler, float3 location);
short4 GatherGreen(TextureCube<short4>, sampler, float3 location);
short4 GatherBlue(TextureCube<short4>, sampler, float3 location);
short4 GatherAlpha(TextureCube<short4>, sampler, float3 location);
void GetDimensions(TextureCube<short4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<short4>, thread uint* Width);
void GetDimensions(RWTexture1D<short4>, thread float* Width);
short4 Load(RWTexture1D<short4>, int location);
void Store(RWTexture1D<short4>, short4, uint location);
void GetDimensions(RWTexture1DArray<short4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<short4>, thread float* Width, thread uint* Elements);
short4 Load(RWTexture1DArray<short4>, int2 location);
void Store(RWTexture1DArray<short4>, short4, uint2 location);
void GetDimensions(RWTexture2D<short4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<short4>, thread float* Width, thread float* Height);
short4 Load(RWTexture2D<short4>, int2 location);
void Store(RWTexture2D<short4>, short4, uint2 location);
void GetDimensions(RWTexture2DArray<short4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<short4>, thread float* Width, thread float* Height, thread float* Elements);
short4 Load(RWTexture2DArray<short4>, int3 location);
void Store(RWTexture2DArray<short4>, short4, uint3 location);
void GetDimensions(RWTexture3D<short4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<short4>, thread float* Width, thread float* Height, thread float* Depth);
short4 Load(RWTexture3D<short4>, int3 location);
void Store(RWTexture3D<short4>, short4, uint3 location);
int Sample(Texture1D<int>, sampler, float location);
int Sample(Texture1D<int>, sampler, float location, int offset);
int Load(Texture1D<int>, int2 location);
int Load(Texture1D<int>, int2 location, int offset);
void GetDimensions(Texture1D<int>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
int Sample(Texture1DArray<int>, sampler, float2 location);
int Sample(Texture1DArray<int>, sampler, float2 location, int offset);
int Load(Texture1DArray<int>, int3 location);
int Load(Texture1DArray<int>, int3 location, int offset);
void GetDimensions(Texture1DArray<int>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
int Sample(Texture2D<int>, sampler, float2 location);
int Sample(Texture2D<int>, sampler, float2 location, int2 offset);
int SampleBias(Texture2D<int>, sampler, float2 location, float Bias);
int SampleBias(Texture2D<int>, sampler, float2 location, float Bias, int2 offset);
int SampleGrad(Texture2D<int>, sampler, float2 location, float2 DDX, float2 DDY);
int SampleGrad(Texture2D<int>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
int SampleLevel(Texture2D<int>, sampler, float2 location, float LOD);
int SampleLevel(Texture2D<int>, sampler, float2 location, float LOD, int2 offset);
int4 Gather(Texture2D<int>, sampler, float2 location);
int4 Gather(Texture2D<int>, sampler, float2 location, int2 offset);
int4 GatherRed(Texture2D<int>, sampler, float2 location);
int4 GatherRed(Texture2D<int>, sampler, float2 location, int2 offset);
int4 GatherGreen(Texture2D<int>, sampler, float2 location);
int4 GatherGreen(Texture2D<int>, sampler, float2 location, int2 offset);
int4 GatherBlue(Texture2D<int>, sampler, float2 location);
int4 GatherBlue(Texture2D<int>, sampler, float2 location, int2 offset);
int4 GatherAlpha(Texture2D<int>, sampler, float2 location);
int4 GatherAlpha(Texture2D<int>, sampler, float2 location, int2 offset);
int Load(Texture2D<int>, int3 location);
int Load(Texture2D<int>, int3 location, int2 offset);
void GetDimensions(Texture2D<int>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
int Sample(Texture2DArray<int>, sampler, float3 location);
int Sample(Texture2DArray<int>, sampler, float3 location, int2 offset);
int SampleBias(Texture2DArray<int>, sampler, float3 location, float Bias);
int SampleBias(Texture2DArray<int>, sampler, float3 location, float Bias, int2 offset);
int SampleGrad(Texture2DArray<int>, sampler, float3 location, float2 DDX, float2 DDY);
int SampleGrad(Texture2DArray<int>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
int SampleLevel(Texture2DArray<int>, sampler, float3 location, float LOD);
int SampleLevel(Texture2DArray<int>, sampler, float3 location, float LOD, int2 offset);
int4 Gather(Texture2DArray<int>, sampler, float3 location);
int4 Gather(Texture2DArray<int>, sampler, float3 location, int2 offset);
int4 GatherRed(Texture2DArray<int>, sampler, float3 location);
int4 GatherRed(Texture2DArray<int>, sampler, float3 location, int2 offset);
int4 GatherGreen(Texture2DArray<int>, sampler, float3 location);
int4 GatherGreen(Texture2DArray<int>, sampler, float3 location, int2 offset);
int4 GatherBlue(Texture2DArray<int>, sampler, float3 location);
int4 GatherBlue(Texture2DArray<int>, sampler, float3 location, int2 offset);
int4 GatherAlpha(Texture2DArray<int>, sampler, float3 location);
int4 GatherAlpha(Texture2DArray<int>, sampler, float3 location, int2 offset);
int Load(Texture2DArray<int>, int4 location);
int Load(Texture2DArray<int>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<int>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
int Sample(Texture3D<int>, sampler, float3 location);
int Sample(Texture3D<int>, sampler, float3 location, int3 offset);
int4 Gather(Texture3D<int>, sampler, float3 location);
int4 Gather(Texture3D<int>, sampler, float3 location, int3 offset);
int4 GatherRed(Texture3D<int>, sampler, float3 location);
int4 GatherRed(Texture3D<int>, sampler, float3 location, int3 offset);
int4 GatherGreen(Texture3D<int>, sampler, float3 location);
int4 GatherGreen(Texture3D<int>, sampler, float3 location, int3 offset);
int4 GatherBlue(Texture3D<int>, sampler, float3 location);
int4 GatherBlue(Texture3D<int>, sampler, float3 location, int3 offset);
int4 GatherAlpha(Texture3D<int>, sampler, float3 location);
int4 GatherAlpha(Texture3D<int>, sampler, float3 location, int3 offset);
int Load(Texture3D<int>, int4 location);
int Load(Texture3D<int>, int4 location, int3 offset);
void GetDimensions(Texture3D<int>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
int Sample(TextureCube<int>, sampler, float3 location);
int SampleBias(TextureCube<int>, sampler, float3 location, float Bias);
int SampleGrad(TextureCube<int>, sampler, float3 location, float3 DDX, float3 DDY);
int SampleLevel(TextureCube<int>, sampler, float3 location, float LOD);
int4 Gather(TextureCube<int>, sampler, float3 location);
int4 GatherRed(TextureCube<int>, sampler, float3 location);
int4 GatherGreen(TextureCube<int>, sampler, float3 location);
int4 GatherBlue(TextureCube<int>, sampler, float3 location);
int4 GatherAlpha(TextureCube<int>, sampler, float3 location);
void GetDimensions(TextureCube<int>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<int>, thread uint* Width);
void GetDimensions(RWTexture1D<int>, thread float* Width);
int Load(RWTexture1D<int>, int location);
void Store(RWTexture1D<int>, int, uint location);
void GetDimensions(RWTexture1DArray<int>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<int>, thread float* Width, thread uint* Elements);
int Load(RWTexture1DArray<int>, int2 location);
void Store(RWTexture1DArray<int>, int, uint2 location);
void GetDimensions(RWTexture2D<int>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<int>, thread float* Width, thread float* Height);
int Load(RWTexture2D<int>, int2 location);
void Store(RWTexture2D<int>, int, uint2 location);
void GetDimensions(RWTexture2DArray<int>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<int>, thread float* Width, thread float* Height, thread float* Elements);
int Load(RWTexture2DArray<int>, int3 location);
void Store(RWTexture2DArray<int>, int, uint3 location);
void GetDimensions(RWTexture3D<int>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<int>, thread float* Width, thread float* Height, thread float* Depth);
int Load(RWTexture3D<int>, int3 location);
void Store(RWTexture3D<int>, int, uint3 location);
int2 Sample(Texture1D<int2>, sampler, float location);
int2 Sample(Texture1D<int2>, sampler, float location, int offset);
int2 Load(Texture1D<int2>, int2 location);
int2 Load(Texture1D<int2>, int2 location, int offset);
void GetDimensions(Texture1D<int2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
int2 Sample(Texture1DArray<int2>, sampler, float2 location);
int2 Sample(Texture1DArray<int2>, sampler, float2 location, int offset);
int2 Load(Texture1DArray<int2>, int3 location);
int2 Load(Texture1DArray<int2>, int3 location, int offset);
void GetDimensions(Texture1DArray<int2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
int2 Sample(Texture2D<int2>, sampler, float2 location);
int2 Sample(Texture2D<int2>, sampler, float2 location, int2 offset);
int2 SampleBias(Texture2D<int2>, sampler, float2 location, float Bias);
int2 SampleBias(Texture2D<int2>, sampler, float2 location, float Bias, int2 offset);
int2 SampleGrad(Texture2D<int2>, sampler, float2 location, float2 DDX, float2 DDY);
int2 SampleGrad(Texture2D<int2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
int2 SampleLevel(Texture2D<int2>, sampler, float2 location, float LOD);
int2 SampleLevel(Texture2D<int2>, sampler, float2 location, float LOD, int2 offset);
int4 Gather(Texture2D<int2>, sampler, float2 location);
int4 Gather(Texture2D<int2>, sampler, float2 location, int2 offset);
int4 GatherRed(Texture2D<int2>, sampler, float2 location);
int4 GatherRed(Texture2D<int2>, sampler, float2 location, int2 offset);
int4 GatherGreen(Texture2D<int2>, sampler, float2 location);
int4 GatherGreen(Texture2D<int2>, sampler, float2 location, int2 offset);
int4 GatherBlue(Texture2D<int2>, sampler, float2 location);
int4 GatherBlue(Texture2D<int2>, sampler, float2 location, int2 offset);
int4 GatherAlpha(Texture2D<int2>, sampler, float2 location);
int4 GatherAlpha(Texture2D<int2>, sampler, float2 location, int2 offset);
int2 Load(Texture2D<int2>, int3 location);
int2 Load(Texture2D<int2>, int3 location, int2 offset);
void GetDimensions(Texture2D<int2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
int2 Sample(Texture2DArray<int2>, sampler, float3 location);
int2 Sample(Texture2DArray<int2>, sampler, float3 location, int2 offset);
int2 SampleBias(Texture2DArray<int2>, sampler, float3 location, float Bias);
int2 SampleBias(Texture2DArray<int2>, sampler, float3 location, float Bias, int2 offset);
int2 SampleGrad(Texture2DArray<int2>, sampler, float3 location, float2 DDX, float2 DDY);
int2 SampleGrad(Texture2DArray<int2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
int2 SampleLevel(Texture2DArray<int2>, sampler, float3 location, float LOD);
int2 SampleLevel(Texture2DArray<int2>, sampler, float3 location, float LOD, int2 offset);
int4 Gather(Texture2DArray<int2>, sampler, float3 location);
int4 Gather(Texture2DArray<int2>, sampler, float3 location, int2 offset);
int4 GatherRed(Texture2DArray<int2>, sampler, float3 location);
int4 GatherRed(Texture2DArray<int2>, sampler, float3 location, int2 offset);
int4 GatherGreen(Texture2DArray<int2>, sampler, float3 location);
int4 GatherGreen(Texture2DArray<int2>, sampler, float3 location, int2 offset);
int4 GatherBlue(Texture2DArray<int2>, sampler, float3 location);
int4 GatherBlue(Texture2DArray<int2>, sampler, float3 location, int2 offset);
int4 GatherAlpha(Texture2DArray<int2>, sampler, float3 location);
int4 GatherAlpha(Texture2DArray<int2>, sampler, float3 location, int2 offset);
int2 Load(Texture2DArray<int2>, int4 location);
int2 Load(Texture2DArray<int2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<int2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
int2 Sample(Texture3D<int2>, sampler, float3 location);
int2 Sample(Texture3D<int2>, sampler, float3 location, int3 offset);
int4 Gather(Texture3D<int2>, sampler, float3 location);
int4 Gather(Texture3D<int2>, sampler, float3 location, int3 offset);
int4 GatherRed(Texture3D<int2>, sampler, float3 location);
int4 GatherRed(Texture3D<int2>, sampler, float3 location, int3 offset);
int4 GatherGreen(Texture3D<int2>, sampler, float3 location);
int4 GatherGreen(Texture3D<int2>, sampler, float3 location, int3 offset);
int4 GatherBlue(Texture3D<int2>, sampler, float3 location);
int4 GatherBlue(Texture3D<int2>, sampler, float3 location, int3 offset);
int4 GatherAlpha(Texture3D<int2>, sampler, float3 location);
int4 GatherAlpha(Texture3D<int2>, sampler, float3 location, int3 offset);
int2 Load(Texture3D<int2>, int4 location);
int2 Load(Texture3D<int2>, int4 location, int3 offset);
void GetDimensions(Texture3D<int2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
int2 Sample(TextureCube<int2>, sampler, float3 location);
int2 SampleBias(TextureCube<int2>, sampler, float3 location, float Bias);
int2 SampleGrad(TextureCube<int2>, sampler, float3 location, float3 DDX, float3 DDY);
int2 SampleLevel(TextureCube<int2>, sampler, float3 location, float LOD);
int4 Gather(TextureCube<int2>, sampler, float3 location);
int4 GatherRed(TextureCube<int2>, sampler, float3 location);
int4 GatherGreen(TextureCube<int2>, sampler, float3 location);
int4 GatherBlue(TextureCube<int2>, sampler, float3 location);
int4 GatherAlpha(TextureCube<int2>, sampler, float3 location);
void GetDimensions(TextureCube<int2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<int2>, thread uint* Width);
void GetDimensions(RWTexture1D<int2>, thread float* Width);
int2 Load(RWTexture1D<int2>, int location);
void Store(RWTexture1D<int2>, int2, uint location);
void GetDimensions(RWTexture1DArray<int2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<int2>, thread float* Width, thread uint* Elements);
int2 Load(RWTexture1DArray<int2>, int2 location);
void Store(RWTexture1DArray<int2>, int2, uint2 location);
void GetDimensions(RWTexture2D<int2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<int2>, thread float* Width, thread float* Height);
int2 Load(RWTexture2D<int2>, int2 location);
void Store(RWTexture2D<int2>, int2, uint2 location);
void GetDimensions(RWTexture2DArray<int2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<int2>, thread float* Width, thread float* Height, thread float* Elements);
int2 Load(RWTexture2DArray<int2>, int3 location);
void Store(RWTexture2DArray<int2>, int2, uint3 location);
void GetDimensions(RWTexture3D<int2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<int2>, thread float* Width, thread float* Height, thread float* Depth);
int2 Load(RWTexture3D<int2>, int3 location);
void Store(RWTexture3D<int2>, int2, uint3 location);
int3 Sample(Texture1D<int3>, sampler, float location);
int3 Sample(Texture1D<int3>, sampler, float location, int offset);
int3 Load(Texture1D<int3>, int2 location);
int3 Load(Texture1D<int3>, int2 location, int offset);
void GetDimensions(Texture1D<int3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
int3 Sample(Texture1DArray<int3>, sampler, float2 location);
int3 Sample(Texture1DArray<int3>, sampler, float2 location, int offset);
int3 Load(Texture1DArray<int3>, int3 location);
int3 Load(Texture1DArray<int3>, int3 location, int offset);
void GetDimensions(Texture1DArray<int3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
int3 Sample(Texture2D<int3>, sampler, float2 location);
int3 Sample(Texture2D<int3>, sampler, float2 location, int2 offset);
int3 SampleBias(Texture2D<int3>, sampler, float2 location, float Bias);
int3 SampleBias(Texture2D<int3>, sampler, float2 location, float Bias, int2 offset);
int3 SampleGrad(Texture2D<int3>, sampler, float2 location, float2 DDX, float2 DDY);
int3 SampleGrad(Texture2D<int3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
int3 SampleLevel(Texture2D<int3>, sampler, float2 location, float LOD);
int3 SampleLevel(Texture2D<int3>, sampler, float2 location, float LOD, int2 offset);
int4 Gather(Texture2D<int3>, sampler, float2 location);
int4 Gather(Texture2D<int3>, sampler, float2 location, int2 offset);
int4 GatherRed(Texture2D<int3>, sampler, float2 location);
int4 GatherRed(Texture2D<int3>, sampler, float2 location, int2 offset);
int4 GatherGreen(Texture2D<int3>, sampler, float2 location);
int4 GatherGreen(Texture2D<int3>, sampler, float2 location, int2 offset);
int4 GatherBlue(Texture2D<int3>, sampler, float2 location);
int4 GatherBlue(Texture2D<int3>, sampler, float2 location, int2 offset);
int4 GatherAlpha(Texture2D<int3>, sampler, float2 location);
int4 GatherAlpha(Texture2D<int3>, sampler, float2 location, int2 offset);
int3 Load(Texture2D<int3>, int3 location);
int3 Load(Texture2D<int3>, int3 location, int2 offset);
void GetDimensions(Texture2D<int3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
int3 Sample(Texture2DArray<int3>, sampler, float3 location);
int3 Sample(Texture2DArray<int3>, sampler, float3 location, int2 offset);
int3 SampleBias(Texture2DArray<int3>, sampler, float3 location, float Bias);
int3 SampleBias(Texture2DArray<int3>, sampler, float3 location, float Bias, int2 offset);
int3 SampleGrad(Texture2DArray<int3>, sampler, float3 location, float2 DDX, float2 DDY);
int3 SampleGrad(Texture2DArray<int3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
int3 SampleLevel(Texture2DArray<int3>, sampler, float3 location, float LOD);
int3 SampleLevel(Texture2DArray<int3>, sampler, float3 location, float LOD, int2 offset);
int4 Gather(Texture2DArray<int3>, sampler, float3 location);
int4 Gather(Texture2DArray<int3>, sampler, float3 location, int2 offset);
int4 GatherRed(Texture2DArray<int3>, sampler, float3 location);
int4 GatherRed(Texture2DArray<int3>, sampler, float3 location, int2 offset);
int4 GatherGreen(Texture2DArray<int3>, sampler, float3 location);
int4 GatherGreen(Texture2DArray<int3>, sampler, float3 location, int2 offset);
int4 GatherBlue(Texture2DArray<int3>, sampler, float3 location);
int4 GatherBlue(Texture2DArray<int3>, sampler, float3 location, int2 offset);
int4 GatherAlpha(Texture2DArray<int3>, sampler, float3 location);
int4 GatherAlpha(Texture2DArray<int3>, sampler, float3 location, int2 offset);
int3 Load(Texture2DArray<int3>, int4 location);
int3 Load(Texture2DArray<int3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<int3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
int3 Sample(Texture3D<int3>, sampler, float3 location);
int3 Sample(Texture3D<int3>, sampler, float3 location, int3 offset);
int4 Gather(Texture3D<int3>, sampler, float3 location);
int4 Gather(Texture3D<int3>, sampler, float3 location, int3 offset);
int4 GatherRed(Texture3D<int3>, sampler, float3 location);
int4 GatherRed(Texture3D<int3>, sampler, float3 location, int3 offset);
int4 GatherGreen(Texture3D<int3>, sampler, float3 location);
int4 GatherGreen(Texture3D<int3>, sampler, float3 location, int3 offset);
int4 GatherBlue(Texture3D<int3>, sampler, float3 location);
int4 GatherBlue(Texture3D<int3>, sampler, float3 location, int3 offset);
int4 GatherAlpha(Texture3D<int3>, sampler, float3 location);
int4 GatherAlpha(Texture3D<int3>, sampler, float3 location, int3 offset);
int3 Load(Texture3D<int3>, int4 location);
int3 Load(Texture3D<int3>, int4 location, int3 offset);
void GetDimensions(Texture3D<int3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
int3 Sample(TextureCube<int3>, sampler, float3 location);
int3 SampleBias(TextureCube<int3>, sampler, float3 location, float Bias);
int3 SampleGrad(TextureCube<int3>, sampler, float3 location, float3 DDX, float3 DDY);
int3 SampleLevel(TextureCube<int3>, sampler, float3 location, float LOD);
int4 Gather(TextureCube<int3>, sampler, float3 location);
int4 GatherRed(TextureCube<int3>, sampler, float3 location);
int4 GatherGreen(TextureCube<int3>, sampler, float3 location);
int4 GatherBlue(TextureCube<int3>, sampler, float3 location);
int4 GatherAlpha(TextureCube<int3>, sampler, float3 location);
void GetDimensions(TextureCube<int3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<int3>, thread uint* Width);
void GetDimensions(RWTexture1D<int3>, thread float* Width);
int3 Load(RWTexture1D<int3>, int location);
void Store(RWTexture1D<int3>, int3, uint location);
void GetDimensions(RWTexture1DArray<int3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<int3>, thread float* Width, thread uint* Elements);
int3 Load(RWTexture1DArray<int3>, int2 location);
void Store(RWTexture1DArray<int3>, int3, uint2 location);
void GetDimensions(RWTexture2D<int3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<int3>, thread float* Width, thread float* Height);
int3 Load(RWTexture2D<int3>, int2 location);
void Store(RWTexture2D<int3>, int3, uint2 location);
void GetDimensions(RWTexture2DArray<int3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<int3>, thread float* Width, thread float* Height, thread float* Elements);
int3 Load(RWTexture2DArray<int3>, int3 location);
void Store(RWTexture2DArray<int3>, int3, uint3 location);
void GetDimensions(RWTexture3D<int3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<int3>, thread float* Width, thread float* Height, thread float* Depth);
int3 Load(RWTexture3D<int3>, int3 location);
void Store(RWTexture3D<int3>, int3, uint3 location);
int4 Sample(Texture1D<int4>, sampler, float location);
int4 Sample(Texture1D<int4>, sampler, float location, int offset);
int4 Load(Texture1D<int4>, int2 location);
int4 Load(Texture1D<int4>, int2 location, int offset);
void GetDimensions(Texture1D<int4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
int4 Sample(Texture1DArray<int4>, sampler, float2 location);
int4 Sample(Texture1DArray<int4>, sampler, float2 location, int offset);
int4 Load(Texture1DArray<int4>, int3 location);
int4 Load(Texture1DArray<int4>, int3 location, int offset);
void GetDimensions(Texture1DArray<int4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
int4 Sample(Texture2D<int4>, sampler, float2 location);
int4 Sample(Texture2D<int4>, sampler, float2 location, int2 offset);
int4 SampleBias(Texture2D<int4>, sampler, float2 location, float Bias);
int4 SampleBias(Texture2D<int4>, sampler, float2 location, float Bias, int2 offset);
int4 SampleGrad(Texture2D<int4>, sampler, float2 location, float2 DDX, float2 DDY);
int4 SampleGrad(Texture2D<int4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
int4 SampleLevel(Texture2D<int4>, sampler, float2 location, float LOD);
int4 SampleLevel(Texture2D<int4>, sampler, float2 location, float LOD, int2 offset);
int4 Gather(Texture2D<int4>, sampler, float2 location);
int4 Gather(Texture2D<int4>, sampler, float2 location, int2 offset);
int4 GatherRed(Texture2D<int4>, sampler, float2 location);
int4 GatherRed(Texture2D<int4>, sampler, float2 location, int2 offset);
int4 GatherGreen(Texture2D<int4>, sampler, float2 location);
int4 GatherGreen(Texture2D<int4>, sampler, float2 location, int2 offset);
int4 GatherBlue(Texture2D<int4>, sampler, float2 location);
int4 GatherBlue(Texture2D<int4>, sampler, float2 location, int2 offset);
int4 GatherAlpha(Texture2D<int4>, sampler, float2 location);
int4 GatherAlpha(Texture2D<int4>, sampler, float2 location, int2 offset);
int4 Load(Texture2D<int4>, int3 location);
int4 Load(Texture2D<int4>, int3 location, int2 offset);
void GetDimensions(Texture2D<int4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
int4 Sample(Texture2DArray<int4>, sampler, float3 location);
int4 Sample(Texture2DArray<int4>, sampler, float3 location, int2 offset);
int4 SampleBias(Texture2DArray<int4>, sampler, float3 location, float Bias);
int4 SampleBias(Texture2DArray<int4>, sampler, float3 location, float Bias, int2 offset);
int4 SampleGrad(Texture2DArray<int4>, sampler, float3 location, float2 DDX, float2 DDY);
int4 SampleGrad(Texture2DArray<int4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
int4 SampleLevel(Texture2DArray<int4>, sampler, float3 location, float LOD);
int4 SampleLevel(Texture2DArray<int4>, sampler, float3 location, float LOD, int2 offset);
int4 Gather(Texture2DArray<int4>, sampler, float3 location);
int4 Gather(Texture2DArray<int4>, sampler, float3 location, int2 offset);
int4 GatherRed(Texture2DArray<int4>, sampler, float3 location);
int4 GatherRed(Texture2DArray<int4>, sampler, float3 location, int2 offset);
int4 GatherGreen(Texture2DArray<int4>, sampler, float3 location);
int4 GatherGreen(Texture2DArray<int4>, sampler, float3 location, int2 offset);
int4 GatherBlue(Texture2DArray<int4>, sampler, float3 location);
int4 GatherBlue(Texture2DArray<int4>, sampler, float3 location, int2 offset);
int4 GatherAlpha(Texture2DArray<int4>, sampler, float3 location);
int4 GatherAlpha(Texture2DArray<int4>, sampler, float3 location, int2 offset);
int4 Load(Texture2DArray<int4>, int4 location);
int4 Load(Texture2DArray<int4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<int4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
int4 Sample(Texture3D<int4>, sampler, float3 location);
int4 Sample(Texture3D<int4>, sampler, float3 location, int3 offset);
int4 Gather(Texture3D<int4>, sampler, float3 location);
int4 Gather(Texture3D<int4>, sampler, float3 location, int3 offset);
int4 GatherRed(Texture3D<int4>, sampler, float3 location);
int4 GatherRed(Texture3D<int4>, sampler, float3 location, int3 offset);
int4 GatherGreen(Texture3D<int4>, sampler, float3 location);
int4 GatherGreen(Texture3D<int4>, sampler, float3 location, int3 offset);
int4 GatherBlue(Texture3D<int4>, sampler, float3 location);
int4 GatherBlue(Texture3D<int4>, sampler, float3 location, int3 offset);
int4 GatherAlpha(Texture3D<int4>, sampler, float3 location);
int4 GatherAlpha(Texture3D<int4>, sampler, float3 location, int3 offset);
int4 Load(Texture3D<int4>, int4 location);
int4 Load(Texture3D<int4>, int4 location, int3 offset);
void GetDimensions(Texture3D<int4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
int4 Sample(TextureCube<int4>, sampler, float3 location);
int4 SampleBias(TextureCube<int4>, sampler, float3 location, float Bias);
int4 SampleGrad(TextureCube<int4>, sampler, float3 location, float3 DDX, float3 DDY);
int4 SampleLevel(TextureCube<int4>, sampler, float3 location, float LOD);
int4 Gather(TextureCube<int4>, sampler, float3 location);
int4 GatherRed(TextureCube<int4>, sampler, float3 location);
int4 GatherGreen(TextureCube<int4>, sampler, float3 location);
int4 GatherBlue(TextureCube<int4>, sampler, float3 location);
int4 GatherAlpha(TextureCube<int4>, sampler, float3 location);
void GetDimensions(TextureCube<int4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<int4>, thread uint* Width);
void GetDimensions(RWTexture1D<int4>, thread float* Width);
int4 Load(RWTexture1D<int4>, int location);
void Store(RWTexture1D<int4>, int4, uint location);
void GetDimensions(RWTexture1DArray<int4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<int4>, thread float* Width, thread uint* Elements);
int4 Load(RWTexture1DArray<int4>, int2 location);
void Store(RWTexture1DArray<int4>, int4, uint2 location);
void GetDimensions(RWTexture2D<int4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<int4>, thread float* Width, thread float* Height);
int4 Load(RWTexture2D<int4>, int2 location);
void Store(RWTexture2D<int4>, int4, uint2 location);
void GetDimensions(RWTexture2DArray<int4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<int4>, thread float* Width, thread float* Height, thread float* Elements);
int4 Load(RWTexture2DArray<int4>, int3 location);
void Store(RWTexture2DArray<int4>, int4, uint3 location);
void GetDimensions(RWTexture3D<int4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<int4>, thread float* Width, thread float* Height, thread float* Depth);
int4 Load(RWTexture3D<int4>, int3 location);
void Store(RWTexture3D<int4>, int4, uint3 location);
half Sample(Texture1D<half>, sampler, float location);
half Sample(Texture1D<half>, sampler, float location, int offset);
half Load(Texture1D<half>, int2 location);
half Load(Texture1D<half>, int2 location, int offset);
void GetDimensions(Texture1D<half>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
half Sample(Texture1DArray<half>, sampler, float2 location);
half Sample(Texture1DArray<half>, sampler, float2 location, int offset);
half Load(Texture1DArray<half>, int3 location);
half Load(Texture1DArray<half>, int3 location, int offset);
void GetDimensions(Texture1DArray<half>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
half Sample(Texture2D<half>, sampler, float2 location);
half Sample(Texture2D<half>, sampler, float2 location, int2 offset);
half SampleBias(Texture2D<half>, sampler, float2 location, float Bias);
half SampleBias(Texture2D<half>, sampler, float2 location, float Bias, int2 offset);
half SampleGrad(Texture2D<half>, sampler, float2 location, float2 DDX, float2 DDY);
half SampleGrad(Texture2D<half>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
half SampleLevel(Texture2D<half>, sampler, float2 location, float LOD);
half SampleLevel(Texture2D<half>, sampler, float2 location, float LOD, int2 offset);
half4 Gather(Texture2D<half>, sampler, float2 location);
half4 Gather(Texture2D<half>, sampler, float2 location, int2 offset);
half4 GatherRed(Texture2D<half>, sampler, float2 location);
half4 GatherRed(Texture2D<half>, sampler, float2 location, int2 offset);
half4 GatherGreen(Texture2D<half>, sampler, float2 location);
half4 GatherGreen(Texture2D<half>, sampler, float2 location, int2 offset);
half4 GatherBlue(Texture2D<half>, sampler, float2 location);
half4 GatherBlue(Texture2D<half>, sampler, float2 location, int2 offset);
half4 GatherAlpha(Texture2D<half>, sampler, float2 location);
half4 GatherAlpha(Texture2D<half>, sampler, float2 location, int2 offset);
half Load(Texture2D<half>, int3 location);
half Load(Texture2D<half>, int3 location, int2 offset);
void GetDimensions(Texture2D<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
half Sample(Texture2DArray<half>, sampler, float3 location);
half Sample(Texture2DArray<half>, sampler, float3 location, int2 offset);
half SampleBias(Texture2DArray<half>, sampler, float3 location, float Bias);
half SampleBias(Texture2DArray<half>, sampler, float3 location, float Bias, int2 offset);
half SampleGrad(Texture2DArray<half>, sampler, float3 location, float2 DDX, float2 DDY);
half SampleGrad(Texture2DArray<half>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
half SampleLevel(Texture2DArray<half>, sampler, float3 location, float LOD);
half SampleLevel(Texture2DArray<half>, sampler, float3 location, float LOD, int2 offset);
half4 Gather(Texture2DArray<half>, sampler, float3 location);
half4 Gather(Texture2DArray<half>, sampler, float3 location, int2 offset);
half4 GatherRed(Texture2DArray<half>, sampler, float3 location);
half4 GatherRed(Texture2DArray<half>, sampler, float3 location, int2 offset);
half4 GatherGreen(Texture2DArray<half>, sampler, float3 location);
half4 GatherGreen(Texture2DArray<half>, sampler, float3 location, int2 offset);
half4 GatherBlue(Texture2DArray<half>, sampler, float3 location);
half4 GatherBlue(Texture2DArray<half>, sampler, float3 location, int2 offset);
half4 GatherAlpha(Texture2DArray<half>, sampler, float3 location);
half4 GatherAlpha(Texture2DArray<half>, sampler, float3 location, int2 offset);
half Load(Texture2DArray<half>, int4 location);
half Load(Texture2DArray<half>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
half Sample(Texture3D<half>, sampler, float3 location);
half Sample(Texture3D<half>, sampler, float3 location, int3 offset);
half4 Gather(Texture3D<half>, sampler, float3 location);
half4 Gather(Texture3D<half>, sampler, float3 location, int3 offset);
half4 GatherRed(Texture3D<half>, sampler, float3 location);
half4 GatherRed(Texture3D<half>, sampler, float3 location, int3 offset);
half4 GatherGreen(Texture3D<half>, sampler, float3 location);
half4 GatherGreen(Texture3D<half>, sampler, float3 location, int3 offset);
half4 GatherBlue(Texture3D<half>, sampler, float3 location);
half4 GatherBlue(Texture3D<half>, sampler, float3 location, int3 offset);
half4 GatherAlpha(Texture3D<half>, sampler, float3 location);
half4 GatherAlpha(Texture3D<half>, sampler, float3 location, int3 offset);
half Load(Texture3D<half>, int4 location);
half Load(Texture3D<half>, int4 location, int3 offset);
void GetDimensions(Texture3D<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
half Sample(TextureCube<half>, sampler, float3 location);
half SampleBias(TextureCube<half>, sampler, float3 location, float Bias);
half SampleGrad(TextureCube<half>, sampler, float3 location, float3 DDX, float3 DDY);
half SampleLevel(TextureCube<half>, sampler, float3 location, float LOD);
half4 Gather(TextureCube<half>, sampler, float3 location);
half4 GatherRed(TextureCube<half>, sampler, float3 location);
half4 GatherGreen(TextureCube<half>, sampler, float3 location);
half4 GatherBlue(TextureCube<half>, sampler, float3 location);
half4 GatherAlpha(TextureCube<half>, sampler, float3 location);
void GetDimensions(TextureCube<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<half>, thread uint* Width);
void GetDimensions(RWTexture1D<half>, thread float* Width);
half Load(RWTexture1D<half>, int location);
void Store(RWTexture1D<half>, half, uint location);
void GetDimensions(RWTexture1DArray<half>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<half>, thread float* Width, thread uint* Elements);
half Load(RWTexture1DArray<half>, int2 location);
void Store(RWTexture1DArray<half>, half, uint2 location);
void GetDimensions(RWTexture2D<half>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<half>, thread float* Width, thread float* Height);
half Load(RWTexture2D<half>, int2 location);
void Store(RWTexture2D<half>, half, uint2 location);
void GetDimensions(RWTexture2DArray<half>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<half>, thread float* Width, thread float* Height, thread float* Elements);
half Load(RWTexture2DArray<half>, int3 location);
void Store(RWTexture2DArray<half>, half, uint3 location);
void GetDimensions(RWTexture3D<half>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<half>, thread float* Width, thread float* Height, thread float* Depth);
half Load(RWTexture3D<half>, int3 location);
void Store(RWTexture3D<half>, half, uint3 location);
half2 Sample(Texture1D<half2>, sampler, float location);
half2 Sample(Texture1D<half2>, sampler, float location, int offset);
half2 Load(Texture1D<half2>, int2 location);
half2 Load(Texture1D<half2>, int2 location, int offset);
void GetDimensions(Texture1D<half2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
half2 Sample(Texture1DArray<half2>, sampler, float2 location);
half2 Sample(Texture1DArray<half2>, sampler, float2 location, int offset);
half2 Load(Texture1DArray<half2>, int3 location);
half2 Load(Texture1DArray<half2>, int3 location, int offset);
void GetDimensions(Texture1DArray<half2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
half2 Sample(Texture2D<half2>, sampler, float2 location);
half2 Sample(Texture2D<half2>, sampler, float2 location, int2 offset);
half2 SampleBias(Texture2D<half2>, sampler, float2 location, float Bias);
half2 SampleBias(Texture2D<half2>, sampler, float2 location, float Bias, int2 offset);
half2 SampleGrad(Texture2D<half2>, sampler, float2 location, float2 DDX, float2 DDY);
half2 SampleGrad(Texture2D<half2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
half2 SampleLevel(Texture2D<half2>, sampler, float2 location, float LOD);
half2 SampleLevel(Texture2D<half2>, sampler, float2 location, float LOD, int2 offset);
half4 Gather(Texture2D<half2>, sampler, float2 location);
half4 Gather(Texture2D<half2>, sampler, float2 location, int2 offset);
half4 GatherRed(Texture2D<half2>, sampler, float2 location);
half4 GatherRed(Texture2D<half2>, sampler, float2 location, int2 offset);
half4 GatherGreen(Texture2D<half2>, sampler, float2 location);
half4 GatherGreen(Texture2D<half2>, sampler, float2 location, int2 offset);
half4 GatherBlue(Texture2D<half2>, sampler, float2 location);
half4 GatherBlue(Texture2D<half2>, sampler, float2 location, int2 offset);
half4 GatherAlpha(Texture2D<half2>, sampler, float2 location);
half4 GatherAlpha(Texture2D<half2>, sampler, float2 location, int2 offset);
half2 Load(Texture2D<half2>, int3 location);
half2 Load(Texture2D<half2>, int3 location, int2 offset);
void GetDimensions(Texture2D<half2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
half2 Sample(Texture2DArray<half2>, sampler, float3 location);
half2 Sample(Texture2DArray<half2>, sampler, float3 location, int2 offset);
half2 SampleBias(Texture2DArray<half2>, sampler, float3 location, float Bias);
half2 SampleBias(Texture2DArray<half2>, sampler, float3 location, float Bias, int2 offset);
half2 SampleGrad(Texture2DArray<half2>, sampler, float3 location, float2 DDX, float2 DDY);
half2 SampleGrad(Texture2DArray<half2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
half2 SampleLevel(Texture2DArray<half2>, sampler, float3 location, float LOD);
half2 SampleLevel(Texture2DArray<half2>, sampler, float3 location, float LOD, int2 offset);
half4 Gather(Texture2DArray<half2>, sampler, float3 location);
half4 Gather(Texture2DArray<half2>, sampler, float3 location, int2 offset);
half4 GatherRed(Texture2DArray<half2>, sampler, float3 location);
half4 GatherRed(Texture2DArray<half2>, sampler, float3 location, int2 offset);
half4 GatherGreen(Texture2DArray<half2>, sampler, float3 location);
half4 GatherGreen(Texture2DArray<half2>, sampler, float3 location, int2 offset);
half4 GatherBlue(Texture2DArray<half2>, sampler, float3 location);
half4 GatherBlue(Texture2DArray<half2>, sampler, float3 location, int2 offset);
half4 GatherAlpha(Texture2DArray<half2>, sampler, float3 location);
half4 GatherAlpha(Texture2DArray<half2>, sampler, float3 location, int2 offset);
half2 Load(Texture2DArray<half2>, int4 location);
half2 Load(Texture2DArray<half2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<half2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
half2 Sample(Texture3D<half2>, sampler, float3 location);
half2 Sample(Texture3D<half2>, sampler, float3 location, int3 offset);
half4 Gather(Texture3D<half2>, sampler, float3 location);
half4 Gather(Texture3D<half2>, sampler, float3 location, int3 offset);
half4 GatherRed(Texture3D<half2>, sampler, float3 location);
half4 GatherRed(Texture3D<half2>, sampler, float3 location, int3 offset);
half4 GatherGreen(Texture3D<half2>, sampler, float3 location);
half4 GatherGreen(Texture3D<half2>, sampler, float3 location, int3 offset);
half4 GatherBlue(Texture3D<half2>, sampler, float3 location);
half4 GatherBlue(Texture3D<half2>, sampler, float3 location, int3 offset);
half4 GatherAlpha(Texture3D<half2>, sampler, float3 location);
half4 GatherAlpha(Texture3D<half2>, sampler, float3 location, int3 offset);
half2 Load(Texture3D<half2>, int4 location);
half2 Load(Texture3D<half2>, int4 location, int3 offset);
void GetDimensions(Texture3D<half2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
half2 Sample(TextureCube<half2>, sampler, float3 location);
half2 SampleBias(TextureCube<half2>, sampler, float3 location, float Bias);
half2 SampleGrad(TextureCube<half2>, sampler, float3 location, float3 DDX, float3 DDY);
half2 SampleLevel(TextureCube<half2>, sampler, float3 location, float LOD);
half4 Gather(TextureCube<half2>, sampler, float3 location);
half4 GatherRed(TextureCube<half2>, sampler, float3 location);
half4 GatherGreen(TextureCube<half2>, sampler, float3 location);
half4 GatherBlue(TextureCube<half2>, sampler, float3 location);
half4 GatherAlpha(TextureCube<half2>, sampler, float3 location);
void GetDimensions(TextureCube<half2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<half2>, thread uint* Width);
void GetDimensions(RWTexture1D<half2>, thread float* Width);
half2 Load(RWTexture1D<half2>, int location);
void Store(RWTexture1D<half2>, half2, uint location);
void GetDimensions(RWTexture1DArray<half2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<half2>, thread float* Width, thread uint* Elements);
half2 Load(RWTexture1DArray<half2>, int2 location);
void Store(RWTexture1DArray<half2>, half2, uint2 location);
void GetDimensions(RWTexture2D<half2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<half2>, thread float* Width, thread float* Height);
half2 Load(RWTexture2D<half2>, int2 location);
void Store(RWTexture2D<half2>, half2, uint2 location);
void GetDimensions(RWTexture2DArray<half2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<half2>, thread float* Width, thread float* Height, thread float* Elements);
half2 Load(RWTexture2DArray<half2>, int3 location);
void Store(RWTexture2DArray<half2>, half2, uint3 location);
void GetDimensions(RWTexture3D<half2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<half2>, thread float* Width, thread float* Height, thread float* Depth);
half2 Load(RWTexture3D<half2>, int3 location);
void Store(RWTexture3D<half2>, half2, uint3 location);
half3 Sample(Texture1D<half3>, sampler, float location);
half3 Sample(Texture1D<half3>, sampler, float location, int offset);
half3 Load(Texture1D<half3>, int2 location);
half3 Load(Texture1D<half3>, int2 location, int offset);
void GetDimensions(Texture1D<half3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
half3 Sample(Texture1DArray<half3>, sampler, float2 location);
half3 Sample(Texture1DArray<half3>, sampler, float2 location, int offset);
half3 Load(Texture1DArray<half3>, int3 location);
half3 Load(Texture1DArray<half3>, int3 location, int offset);
void GetDimensions(Texture1DArray<half3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
half3 Sample(Texture2D<half3>, sampler, float2 location);
half3 Sample(Texture2D<half3>, sampler, float2 location, int2 offset);
half3 SampleBias(Texture2D<half3>, sampler, float2 location, float Bias);
half3 SampleBias(Texture2D<half3>, sampler, float2 location, float Bias, int2 offset);
half3 SampleGrad(Texture2D<half3>, sampler, float2 location, float2 DDX, float2 DDY);
half3 SampleGrad(Texture2D<half3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
half3 SampleLevel(Texture2D<half3>, sampler, float2 location, float LOD);
half3 SampleLevel(Texture2D<half3>, sampler, float2 location, float LOD, int2 offset);
half4 Gather(Texture2D<half3>, sampler, float2 location);
half4 Gather(Texture2D<half3>, sampler, float2 location, int2 offset);
half4 GatherRed(Texture2D<half3>, sampler, float2 location);
half4 GatherRed(Texture2D<half3>, sampler, float2 location, int2 offset);
half4 GatherGreen(Texture2D<half3>, sampler, float2 location);
half4 GatherGreen(Texture2D<half3>, sampler, float2 location, int2 offset);
half4 GatherBlue(Texture2D<half3>, sampler, float2 location);
half4 GatherBlue(Texture2D<half3>, sampler, float2 location, int2 offset);
half4 GatherAlpha(Texture2D<half3>, sampler, float2 location);
half4 GatherAlpha(Texture2D<half3>, sampler, float2 location, int2 offset);
half3 Load(Texture2D<half3>, int3 location);
half3 Load(Texture2D<half3>, int3 location, int2 offset);
void GetDimensions(Texture2D<half3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
half3 Sample(Texture2DArray<half3>, sampler, float3 location);
half3 Sample(Texture2DArray<half3>, sampler, float3 location, int2 offset);
half3 SampleBias(Texture2DArray<half3>, sampler, float3 location, float Bias);
half3 SampleBias(Texture2DArray<half3>, sampler, float3 location, float Bias, int2 offset);
half3 SampleGrad(Texture2DArray<half3>, sampler, float3 location, float2 DDX, float2 DDY);
half3 SampleGrad(Texture2DArray<half3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
half3 SampleLevel(Texture2DArray<half3>, sampler, float3 location, float LOD);
half3 SampleLevel(Texture2DArray<half3>, sampler, float3 location, float LOD, int2 offset);
half4 Gather(Texture2DArray<half3>, sampler, float3 location);
half4 Gather(Texture2DArray<half3>, sampler, float3 location, int2 offset);
half4 GatherRed(Texture2DArray<half3>, sampler, float3 location);
half4 GatherRed(Texture2DArray<half3>, sampler, float3 location, int2 offset);
half4 GatherGreen(Texture2DArray<half3>, sampler, float3 location);
half4 GatherGreen(Texture2DArray<half3>, sampler, float3 location, int2 offset);
half4 GatherBlue(Texture2DArray<half3>, sampler, float3 location);
half4 GatherBlue(Texture2DArray<half3>, sampler, float3 location, int2 offset);
half4 GatherAlpha(Texture2DArray<half3>, sampler, float3 location);
half4 GatherAlpha(Texture2DArray<half3>, sampler, float3 location, int2 offset);
half3 Load(Texture2DArray<half3>, int4 location);
half3 Load(Texture2DArray<half3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<half3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
half3 Sample(Texture3D<half3>, sampler, float3 location);
half3 Sample(Texture3D<half3>, sampler, float3 location, int3 offset);
half4 Gather(Texture3D<half3>, sampler, float3 location);
half4 Gather(Texture3D<half3>, sampler, float3 location, int3 offset);
half4 GatherRed(Texture3D<half3>, sampler, float3 location);
half4 GatherRed(Texture3D<half3>, sampler, float3 location, int3 offset);
half4 GatherGreen(Texture3D<half3>, sampler, float3 location);
half4 GatherGreen(Texture3D<half3>, sampler, float3 location, int3 offset);
half4 GatherBlue(Texture3D<half3>, sampler, float3 location);
half4 GatherBlue(Texture3D<half3>, sampler, float3 location, int3 offset);
half4 GatherAlpha(Texture3D<half3>, sampler, float3 location);
half4 GatherAlpha(Texture3D<half3>, sampler, float3 location, int3 offset);
half3 Load(Texture3D<half3>, int4 location);
half3 Load(Texture3D<half3>, int4 location, int3 offset);
void GetDimensions(Texture3D<half3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
half3 Sample(TextureCube<half3>, sampler, float3 location);
half3 SampleBias(TextureCube<half3>, sampler, float3 location, float Bias);
half3 SampleGrad(TextureCube<half3>, sampler, float3 location, float3 DDX, float3 DDY);
half3 SampleLevel(TextureCube<half3>, sampler, float3 location, float LOD);
half4 Gather(TextureCube<half3>, sampler, float3 location);
half4 GatherRed(TextureCube<half3>, sampler, float3 location);
half4 GatherGreen(TextureCube<half3>, sampler, float3 location);
half4 GatherBlue(TextureCube<half3>, sampler, float3 location);
half4 GatherAlpha(TextureCube<half3>, sampler, float3 location);
void GetDimensions(TextureCube<half3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<half3>, thread uint* Width);
void GetDimensions(RWTexture1D<half3>, thread float* Width);
half3 Load(RWTexture1D<half3>, int location);
void Store(RWTexture1D<half3>, half3, uint location);
void GetDimensions(RWTexture1DArray<half3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<half3>, thread float* Width, thread uint* Elements);
half3 Load(RWTexture1DArray<half3>, int2 location);
void Store(RWTexture1DArray<half3>, half3, uint2 location);
void GetDimensions(RWTexture2D<half3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<half3>, thread float* Width, thread float* Height);
half3 Load(RWTexture2D<half3>, int2 location);
void Store(RWTexture2D<half3>, half3, uint2 location);
void GetDimensions(RWTexture2DArray<half3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<half3>, thread float* Width, thread float* Height, thread float* Elements);
half3 Load(RWTexture2DArray<half3>, int3 location);
void Store(RWTexture2DArray<half3>, half3, uint3 location);
void GetDimensions(RWTexture3D<half3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<half3>, thread float* Width, thread float* Height, thread float* Depth);
half3 Load(RWTexture3D<half3>, int3 location);
void Store(RWTexture3D<half3>, half3, uint3 location);
half4 Sample(Texture1D<half4>, sampler, float location);
half4 Sample(Texture1D<half4>, sampler, float location, int offset);
half4 Load(Texture1D<half4>, int2 location);
half4 Load(Texture1D<half4>, int2 location, int offset);
void GetDimensions(Texture1D<half4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
half4 Sample(Texture1DArray<half4>, sampler, float2 location);
half4 Sample(Texture1DArray<half4>, sampler, float2 location, int offset);
half4 Load(Texture1DArray<half4>, int3 location);
half4 Load(Texture1DArray<half4>, int3 location, int offset);
void GetDimensions(Texture1DArray<half4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
half4 Sample(Texture2D<half4>, sampler, float2 location);
half4 Sample(Texture2D<half4>, sampler, float2 location, int2 offset);
half4 SampleBias(Texture2D<half4>, sampler, float2 location, float Bias);
half4 SampleBias(Texture2D<half4>, sampler, float2 location, float Bias, int2 offset);
half4 SampleGrad(Texture2D<half4>, sampler, float2 location, float2 DDX, float2 DDY);
half4 SampleGrad(Texture2D<half4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
half4 SampleLevel(Texture2D<half4>, sampler, float2 location, float LOD);
half4 SampleLevel(Texture2D<half4>, sampler, float2 location, float LOD, int2 offset);
half4 Gather(Texture2D<half4>, sampler, float2 location);
half4 Gather(Texture2D<half4>, sampler, float2 location, int2 offset);
half4 GatherRed(Texture2D<half4>, sampler, float2 location);
half4 GatherRed(Texture2D<half4>, sampler, float2 location, int2 offset);
half4 GatherGreen(Texture2D<half4>, sampler, float2 location);
half4 GatherGreen(Texture2D<half4>, sampler, float2 location, int2 offset);
half4 GatherBlue(Texture2D<half4>, sampler, float2 location);
half4 GatherBlue(Texture2D<half4>, sampler, float2 location, int2 offset);
half4 GatherAlpha(Texture2D<half4>, sampler, float2 location);
half4 GatherAlpha(Texture2D<half4>, sampler, float2 location, int2 offset);
half4 Load(Texture2D<half4>, int3 location);
half4 Load(Texture2D<half4>, int3 location, int2 offset);
void GetDimensions(Texture2D<half4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
half4 Sample(Texture2DArray<half4>, sampler, float3 location);
half4 Sample(Texture2DArray<half4>, sampler, float3 location, int2 offset);
half4 SampleBias(Texture2DArray<half4>, sampler, float3 location, float Bias);
half4 SampleBias(Texture2DArray<half4>, sampler, float3 location, float Bias, int2 offset);
half4 SampleGrad(Texture2DArray<half4>, sampler, float3 location, float2 DDX, float2 DDY);
half4 SampleGrad(Texture2DArray<half4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
half4 SampleLevel(Texture2DArray<half4>, sampler, float3 location, float LOD);
half4 SampleLevel(Texture2DArray<half4>, sampler, float3 location, float LOD, int2 offset);
half4 Gather(Texture2DArray<half4>, sampler, float3 location);
half4 Gather(Texture2DArray<half4>, sampler, float3 location, int2 offset);
half4 GatherRed(Texture2DArray<half4>, sampler, float3 location);
half4 GatherRed(Texture2DArray<half4>, sampler, float3 location, int2 offset);
half4 GatherGreen(Texture2DArray<half4>, sampler, float3 location);
half4 GatherGreen(Texture2DArray<half4>, sampler, float3 location, int2 offset);
half4 GatherBlue(Texture2DArray<half4>, sampler, float3 location);
half4 GatherBlue(Texture2DArray<half4>, sampler, float3 location, int2 offset);
half4 GatherAlpha(Texture2DArray<half4>, sampler, float3 location);
half4 GatherAlpha(Texture2DArray<half4>, sampler, float3 location, int2 offset);
half4 Load(Texture2DArray<half4>, int4 location);
half4 Load(Texture2DArray<half4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<half4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
half4 Sample(Texture3D<half4>, sampler, float3 location);
half4 Sample(Texture3D<half4>, sampler, float3 location, int3 offset);
half4 Gather(Texture3D<half4>, sampler, float3 location);
half4 Gather(Texture3D<half4>, sampler, float3 location, int3 offset);
half4 GatherRed(Texture3D<half4>, sampler, float3 location);
half4 GatherRed(Texture3D<half4>, sampler, float3 location, int3 offset);
half4 GatherGreen(Texture3D<half4>, sampler, float3 location);
half4 GatherGreen(Texture3D<half4>, sampler, float3 location, int3 offset);
half4 GatherBlue(Texture3D<half4>, sampler, float3 location);
half4 GatherBlue(Texture3D<half4>, sampler, float3 location, int3 offset);
half4 GatherAlpha(Texture3D<half4>, sampler, float3 location);
half4 GatherAlpha(Texture3D<half4>, sampler, float3 location, int3 offset);
half4 Load(Texture3D<half4>, int4 location);
half4 Load(Texture3D<half4>, int4 location, int3 offset);
void GetDimensions(Texture3D<half4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
half4 Sample(TextureCube<half4>, sampler, float3 location);
half4 SampleBias(TextureCube<half4>, sampler, float3 location, float Bias);
half4 SampleGrad(TextureCube<half4>, sampler, float3 location, float3 DDX, float3 DDY);
half4 SampleLevel(TextureCube<half4>, sampler, float3 location, float LOD);
half4 Gather(TextureCube<half4>, sampler, float3 location);
half4 GatherRed(TextureCube<half4>, sampler, float3 location);
half4 GatherGreen(TextureCube<half4>, sampler, float3 location);
half4 GatherBlue(TextureCube<half4>, sampler, float3 location);
half4 GatherAlpha(TextureCube<half4>, sampler, float3 location);
void GetDimensions(TextureCube<half4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<half4>, thread uint* Width);
void GetDimensions(RWTexture1D<half4>, thread float* Width);
half4 Load(RWTexture1D<half4>, int location);
void Store(RWTexture1D<half4>, half4, uint location);
void GetDimensions(RWTexture1DArray<half4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<half4>, thread float* Width, thread uint* Elements);
half4 Load(RWTexture1DArray<half4>, int2 location);
void Store(RWTexture1DArray<half4>, half4, uint2 location);
void GetDimensions(RWTexture2D<half4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<half4>, thread float* Width, thread float* Height);
half4 Load(RWTexture2D<half4>, int2 location);
void Store(RWTexture2D<half4>, half4, uint2 location);
void GetDimensions(RWTexture2DArray<half4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<half4>, thread float* Width, thread float* Height, thread float* Elements);
half4 Load(RWTexture2DArray<half4>, int3 location);
void Store(RWTexture2DArray<half4>, half4, uint3 location);
void GetDimensions(RWTexture3D<half4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<half4>, thread float* Width, thread float* Height, thread float* Depth);
half4 Load(RWTexture3D<half4>, int3 location);
void Store(RWTexture3D<half4>, half4, uint3 location);
float Sample(Texture1D<float>, sampler, float location);
float Sample(Texture1D<float>, sampler, float location, int offset);
float Load(Texture1D<float>, int2 location);
float Load(Texture1D<float>, int2 location, int offset);
void GetDimensions(Texture1D<float>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
float Sample(Texture1DArray<float>, sampler, float2 location);
float Sample(Texture1DArray<float>, sampler, float2 location, int offset);
float Load(Texture1DArray<float>, int3 location);
float Load(Texture1DArray<float>, int3 location, int offset);
void GetDimensions(Texture1DArray<float>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
float Sample(Texture2D<float>, sampler, float2 location);
float Sample(Texture2D<float>, sampler, float2 location, int2 offset);
float SampleBias(Texture2D<float>, sampler, float2 location, float Bias);
float SampleBias(Texture2D<float>, sampler, float2 location, float Bias, int2 offset);
float SampleGrad(Texture2D<float>, sampler, float2 location, float2 DDX, float2 DDY);
float SampleGrad(Texture2D<float>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
float SampleLevel(Texture2D<float>, sampler, float2 location, float LOD);
float SampleLevel(Texture2D<float>, sampler, float2 location, float LOD, int2 offset);
float4 Gather(Texture2D<float>, sampler, float2 location);
float4 Gather(Texture2D<float>, sampler, float2 location, int2 offset);
float4 GatherRed(Texture2D<float>, sampler, float2 location);
float4 GatherRed(Texture2D<float>, sampler, float2 location, int2 offset);
float4 GatherGreen(Texture2D<float>, sampler, float2 location);
float4 GatherGreen(Texture2D<float>, sampler, float2 location, int2 offset);
float4 GatherBlue(Texture2D<float>, sampler, float2 location);
float4 GatherBlue(Texture2D<float>, sampler, float2 location, int2 offset);
float4 GatherAlpha(Texture2D<float>, sampler, float2 location);
float4 GatherAlpha(Texture2D<float>, sampler, float2 location, int2 offset);
float Load(Texture2D<float>, int3 location);
float Load(Texture2D<float>, int3 location, int2 offset);
void GetDimensions(Texture2D<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
float Sample(Texture2DArray<float>, sampler, float3 location);
float Sample(Texture2DArray<float>, sampler, float3 location, int2 offset);
float SampleBias(Texture2DArray<float>, sampler, float3 location, float Bias);
float SampleBias(Texture2DArray<float>, sampler, float3 location, float Bias, int2 offset);
float SampleGrad(Texture2DArray<float>, sampler, float3 location, float2 DDX, float2 DDY);
float SampleGrad(Texture2DArray<float>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
float SampleLevel(Texture2DArray<float>, sampler, float3 location, float LOD);
float SampleLevel(Texture2DArray<float>, sampler, float3 location, float LOD, int2 offset);
float4 Gather(Texture2DArray<float>, sampler, float3 location);
float4 Gather(Texture2DArray<float>, sampler, float3 location, int2 offset);
float4 GatherRed(Texture2DArray<float>, sampler, float3 location);
float4 GatherRed(Texture2DArray<float>, sampler, float3 location, int2 offset);
float4 GatherGreen(Texture2DArray<float>, sampler, float3 location);
float4 GatherGreen(Texture2DArray<float>, sampler, float3 location, int2 offset);
float4 GatherBlue(Texture2DArray<float>, sampler, float3 location);
float4 GatherBlue(Texture2DArray<float>, sampler, float3 location, int2 offset);
float4 GatherAlpha(Texture2DArray<float>, sampler, float3 location);
float4 GatherAlpha(Texture2DArray<float>, sampler, float3 location, int2 offset);
float Load(Texture2DArray<float>, int4 location);
float Load(Texture2DArray<float>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
float Sample(Texture3D<float>, sampler, float3 location);
float Sample(Texture3D<float>, sampler, float3 location, int3 offset);
float4 Gather(Texture3D<float>, sampler, float3 location);
float4 Gather(Texture3D<float>, sampler, float3 location, int3 offset);
float4 GatherRed(Texture3D<float>, sampler, float3 location);
float4 GatherRed(Texture3D<float>, sampler, float3 location, int3 offset);
float4 GatherGreen(Texture3D<float>, sampler, float3 location);
float4 GatherGreen(Texture3D<float>, sampler, float3 location, int3 offset);
float4 GatherBlue(Texture3D<float>, sampler, float3 location);
float4 GatherBlue(Texture3D<float>, sampler, float3 location, int3 offset);
float4 GatherAlpha(Texture3D<float>, sampler, float3 location);
float4 GatherAlpha(Texture3D<float>, sampler, float3 location, int3 offset);
float Load(Texture3D<float>, int4 location);
float Load(Texture3D<float>, int4 location, int3 offset);
void GetDimensions(Texture3D<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
float Sample(TextureCube<float>, sampler, float3 location);
float SampleBias(TextureCube<float>, sampler, float3 location, float Bias);
float SampleGrad(TextureCube<float>, sampler, float3 location, float3 DDX, float3 DDY);
float SampleLevel(TextureCube<float>, sampler, float3 location, float LOD);
float4 Gather(TextureCube<float>, sampler, float3 location);
float4 GatherRed(TextureCube<float>, sampler, float3 location);
float4 GatherGreen(TextureCube<float>, sampler, float3 location);
float4 GatherBlue(TextureCube<float>, sampler, float3 location);
float4 GatherAlpha(TextureCube<float>, sampler, float3 location);
void GetDimensions(TextureCube<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<float>, thread uint* Width);
void GetDimensions(RWTexture1D<float>, thread float* Width);
float Load(RWTexture1D<float>, int location);
void Store(RWTexture1D<float>, float, uint location);
void GetDimensions(RWTexture1DArray<float>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<float>, thread float* Width, thread uint* Elements);
float Load(RWTexture1DArray<float>, int2 location);
void Store(RWTexture1DArray<float>, float, uint2 location);
void GetDimensions(RWTexture2D<float>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<float>, thread float* Width, thread float* Height);
float Load(RWTexture2D<float>, int2 location);
void Store(RWTexture2D<float>, float, uint2 location);
void GetDimensions(RWTexture2DArray<float>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<float>, thread float* Width, thread float* Height, thread float* Elements);
float Load(RWTexture2DArray<float>, int3 location);
void Store(RWTexture2DArray<float>, float, uint3 location);
void GetDimensions(RWTexture3D<float>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<float>, thread float* Width, thread float* Height, thread float* Depth);
float Load(RWTexture3D<float>, int3 location);
void Store(RWTexture3D<float>, float, uint3 location);
float2 Sample(Texture1D<float2>, sampler, float location);
float2 Sample(Texture1D<float2>, sampler, float location, int offset);
float2 Load(Texture1D<float2>, int2 location);
float2 Load(Texture1D<float2>, int2 location, int offset);
void GetDimensions(Texture1D<float2>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
float2 Sample(Texture1DArray<float2>, sampler, float2 location);
float2 Sample(Texture1DArray<float2>, sampler, float2 location, int offset);
float2 Load(Texture1DArray<float2>, int3 location);
float2 Load(Texture1DArray<float2>, int3 location, int offset);
void GetDimensions(Texture1DArray<float2>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
float2 Sample(Texture2D<float2>, sampler, float2 location);
float2 Sample(Texture2D<float2>, sampler, float2 location, int2 offset);
float2 SampleBias(Texture2D<float2>, sampler, float2 location, float Bias);
float2 SampleBias(Texture2D<float2>, sampler, float2 location, float Bias, int2 offset);
float2 SampleGrad(Texture2D<float2>, sampler, float2 location, float2 DDX, float2 DDY);
float2 SampleGrad(Texture2D<float2>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
float2 SampleLevel(Texture2D<float2>, sampler, float2 location, float LOD);
float2 SampleLevel(Texture2D<float2>, sampler, float2 location, float LOD, int2 offset);
float4 Gather(Texture2D<float2>, sampler, float2 location);
float4 Gather(Texture2D<float2>, sampler, float2 location, int2 offset);
float4 GatherRed(Texture2D<float2>, sampler, float2 location);
float4 GatherRed(Texture2D<float2>, sampler, float2 location, int2 offset);
float4 GatherGreen(Texture2D<float2>, sampler, float2 location);
float4 GatherGreen(Texture2D<float2>, sampler, float2 location, int2 offset);
float4 GatherBlue(Texture2D<float2>, sampler, float2 location);
float4 GatherBlue(Texture2D<float2>, sampler, float2 location, int2 offset);
float4 GatherAlpha(Texture2D<float2>, sampler, float2 location);
float4 GatherAlpha(Texture2D<float2>, sampler, float2 location, int2 offset);
float2 Load(Texture2D<float2>, int3 location);
float2 Load(Texture2D<float2>, int3 location, int2 offset);
void GetDimensions(Texture2D<float2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
float2 Sample(Texture2DArray<float2>, sampler, float3 location);
float2 Sample(Texture2DArray<float2>, sampler, float3 location, int2 offset);
float2 SampleBias(Texture2DArray<float2>, sampler, float3 location, float Bias);
float2 SampleBias(Texture2DArray<float2>, sampler, float3 location, float Bias, int2 offset);
float2 SampleGrad(Texture2DArray<float2>, sampler, float3 location, float2 DDX, float2 DDY);
float2 SampleGrad(Texture2DArray<float2>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
float2 SampleLevel(Texture2DArray<float2>, sampler, float3 location, float LOD);
float2 SampleLevel(Texture2DArray<float2>, sampler, float3 location, float LOD, int2 offset);
float4 Gather(Texture2DArray<float2>, sampler, float3 location);
float4 Gather(Texture2DArray<float2>, sampler, float3 location, int2 offset);
float4 GatherRed(Texture2DArray<float2>, sampler, float3 location);
float4 GatherRed(Texture2DArray<float2>, sampler, float3 location, int2 offset);
float4 GatherGreen(Texture2DArray<float2>, sampler, float3 location);
float4 GatherGreen(Texture2DArray<float2>, sampler, float3 location, int2 offset);
float4 GatherBlue(Texture2DArray<float2>, sampler, float3 location);
float4 GatherBlue(Texture2DArray<float2>, sampler, float3 location, int2 offset);
float4 GatherAlpha(Texture2DArray<float2>, sampler, float3 location);
float4 GatherAlpha(Texture2DArray<float2>, sampler, float3 location, int2 offset);
float2 Load(Texture2DArray<float2>, int4 location);
float2 Load(Texture2DArray<float2>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<float2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
float2 Sample(Texture3D<float2>, sampler, float3 location);
float2 Sample(Texture3D<float2>, sampler, float3 location, int3 offset);
float4 Gather(Texture3D<float2>, sampler, float3 location);
float4 Gather(Texture3D<float2>, sampler, float3 location, int3 offset);
float4 GatherRed(Texture3D<float2>, sampler, float3 location);
float4 GatherRed(Texture3D<float2>, sampler, float3 location, int3 offset);
float4 GatherGreen(Texture3D<float2>, sampler, float3 location);
float4 GatherGreen(Texture3D<float2>, sampler, float3 location, int3 offset);
float4 GatherBlue(Texture3D<float2>, sampler, float3 location);
float4 GatherBlue(Texture3D<float2>, sampler, float3 location, int3 offset);
float4 GatherAlpha(Texture3D<float2>, sampler, float3 location);
float4 GatherAlpha(Texture3D<float2>, sampler, float3 location, int3 offset);
float2 Load(Texture3D<float2>, int4 location);
float2 Load(Texture3D<float2>, int4 location, int3 offset);
void GetDimensions(Texture3D<float2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
float2 Sample(TextureCube<float2>, sampler, float3 location);
float2 SampleBias(TextureCube<float2>, sampler, float3 location, float Bias);
float2 SampleGrad(TextureCube<float2>, sampler, float3 location, float3 DDX, float3 DDY);
float2 SampleLevel(TextureCube<float2>, sampler, float3 location, float LOD);
float4 Gather(TextureCube<float2>, sampler, float3 location);
float4 GatherRed(TextureCube<float2>, sampler, float3 location);
float4 GatherGreen(TextureCube<float2>, sampler, float3 location);
float4 GatherBlue(TextureCube<float2>, sampler, float3 location);
float4 GatherAlpha(TextureCube<float2>, sampler, float3 location);
void GetDimensions(TextureCube<float2>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<float2>, thread uint* Width);
void GetDimensions(RWTexture1D<float2>, thread float* Width);
float2 Load(RWTexture1D<float2>, int location);
void Store(RWTexture1D<float2>, float2, uint location);
void GetDimensions(RWTexture1DArray<float2>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<float2>, thread float* Width, thread uint* Elements);
float2 Load(RWTexture1DArray<float2>, int2 location);
void Store(RWTexture1DArray<float2>, float2, uint2 location);
void GetDimensions(RWTexture2D<float2>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<float2>, thread float* Width, thread float* Height);
float2 Load(RWTexture2D<float2>, int2 location);
void Store(RWTexture2D<float2>, float2, uint2 location);
void GetDimensions(RWTexture2DArray<float2>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<float2>, thread float* Width, thread float* Height, thread float* Elements);
float2 Load(RWTexture2DArray<float2>, int3 location);
void Store(RWTexture2DArray<float2>, float2, uint3 location);
void GetDimensions(RWTexture3D<float2>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<float2>, thread float* Width, thread float* Height, thread float* Depth);
float2 Load(RWTexture3D<float2>, int3 location);
void Store(RWTexture3D<float2>, float2, uint3 location);
float3 Sample(Texture1D<float3>, sampler, float location);
float3 Sample(Texture1D<float3>, sampler, float location, int offset);
float3 Load(Texture1D<float3>, int2 location);
float3 Load(Texture1D<float3>, int2 location, int offset);
void GetDimensions(Texture1D<float3>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
float3 Sample(Texture1DArray<float3>, sampler, float2 location);
float3 Sample(Texture1DArray<float3>, sampler, float2 location, int offset);
float3 Load(Texture1DArray<float3>, int3 location);
float3 Load(Texture1DArray<float3>, int3 location, int offset);
void GetDimensions(Texture1DArray<float3>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
float3 Sample(Texture2D<float3>, sampler, float2 location);
float3 Sample(Texture2D<float3>, sampler, float2 location, int2 offset);
float3 SampleBias(Texture2D<float3>, sampler, float2 location, float Bias);
float3 SampleBias(Texture2D<float3>, sampler, float2 location, float Bias, int2 offset);
float3 SampleGrad(Texture2D<float3>, sampler, float2 location, float2 DDX, float2 DDY);
float3 SampleGrad(Texture2D<float3>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
float3 SampleLevel(Texture2D<float3>, sampler, float2 location, float LOD);
float3 SampleLevel(Texture2D<float3>, sampler, float2 location, float LOD, int2 offset);
float4 Gather(Texture2D<float3>, sampler, float2 location);
float4 Gather(Texture2D<float3>, sampler, float2 location, int2 offset);
float4 GatherRed(Texture2D<float3>, sampler, float2 location);
float4 GatherRed(Texture2D<float3>, sampler, float2 location, int2 offset);
float4 GatherGreen(Texture2D<float3>, sampler, float2 location);
float4 GatherGreen(Texture2D<float3>, sampler, float2 location, int2 offset);
float4 GatherBlue(Texture2D<float3>, sampler, float2 location);
float4 GatherBlue(Texture2D<float3>, sampler, float2 location, int2 offset);
float4 GatherAlpha(Texture2D<float3>, sampler, float2 location);
float4 GatherAlpha(Texture2D<float3>, sampler, float2 location, int2 offset);
float3 Load(Texture2D<float3>, int3 location);
float3 Load(Texture2D<float3>, int3 location, int2 offset);
void GetDimensions(Texture2D<float3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
float3 Sample(Texture2DArray<float3>, sampler, float3 location);
float3 Sample(Texture2DArray<float3>, sampler, float3 location, int2 offset);
float3 SampleBias(Texture2DArray<float3>, sampler, float3 location, float Bias);
float3 SampleBias(Texture2DArray<float3>, sampler, float3 location, float Bias, int2 offset);
float3 SampleGrad(Texture2DArray<float3>, sampler, float3 location, float2 DDX, float2 DDY);
float3 SampleGrad(Texture2DArray<float3>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
float3 SampleLevel(Texture2DArray<float3>, sampler, float3 location, float LOD);
float3 SampleLevel(Texture2DArray<float3>, sampler, float3 location, float LOD, int2 offset);
float4 Gather(Texture2DArray<float3>, sampler, float3 location);
float4 Gather(Texture2DArray<float3>, sampler, float3 location, int2 offset);
float4 GatherRed(Texture2DArray<float3>, sampler, float3 location);
float4 GatherRed(Texture2DArray<float3>, sampler, float3 location, int2 offset);
float4 GatherGreen(Texture2DArray<float3>, sampler, float3 location);
float4 GatherGreen(Texture2DArray<float3>, sampler, float3 location, int2 offset);
float4 GatherBlue(Texture2DArray<float3>, sampler, float3 location);
float4 GatherBlue(Texture2DArray<float3>, sampler, float3 location, int2 offset);
float4 GatherAlpha(Texture2DArray<float3>, sampler, float3 location);
float4 GatherAlpha(Texture2DArray<float3>, sampler, float3 location, int2 offset);
float3 Load(Texture2DArray<float3>, int4 location);
float3 Load(Texture2DArray<float3>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<float3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
float3 Sample(Texture3D<float3>, sampler, float3 location);
float3 Sample(Texture3D<float3>, sampler, float3 location, int3 offset);
float4 Gather(Texture3D<float3>, sampler, float3 location);
float4 Gather(Texture3D<float3>, sampler, float3 location, int3 offset);
float4 GatherRed(Texture3D<float3>, sampler, float3 location);
float4 GatherRed(Texture3D<float3>, sampler, float3 location, int3 offset);
float4 GatherGreen(Texture3D<float3>, sampler, float3 location);
float4 GatherGreen(Texture3D<float3>, sampler, float3 location, int3 offset);
float4 GatherBlue(Texture3D<float3>, sampler, float3 location);
float4 GatherBlue(Texture3D<float3>, sampler, float3 location, int3 offset);
float4 GatherAlpha(Texture3D<float3>, sampler, float3 location);
float4 GatherAlpha(Texture3D<float3>, sampler, float3 location, int3 offset);
float3 Load(Texture3D<float3>, int4 location);
float3 Load(Texture3D<float3>, int4 location, int3 offset);
void GetDimensions(Texture3D<float3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
float3 Sample(TextureCube<float3>, sampler, float3 location);
float3 SampleBias(TextureCube<float3>, sampler, float3 location, float Bias);
float3 SampleGrad(TextureCube<float3>, sampler, float3 location, float3 DDX, float3 DDY);
float3 SampleLevel(TextureCube<float3>, sampler, float3 location, float LOD);
float4 Gather(TextureCube<float3>, sampler, float3 location);
float4 GatherRed(TextureCube<float3>, sampler, float3 location);
float4 GatherGreen(TextureCube<float3>, sampler, float3 location);
float4 GatherBlue(TextureCube<float3>, sampler, float3 location);
float4 GatherAlpha(TextureCube<float3>, sampler, float3 location);
void GetDimensions(TextureCube<float3>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<float3>, thread uint* Width);
void GetDimensions(RWTexture1D<float3>, thread float* Width);
float3 Load(RWTexture1D<float3>, int location);
void Store(RWTexture1D<float3>, float3, uint location);
void GetDimensions(RWTexture1DArray<float3>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<float3>, thread float* Width, thread uint* Elements);
float3 Load(RWTexture1DArray<float3>, int2 location);
void Store(RWTexture1DArray<float3>, float3, uint2 location);
void GetDimensions(RWTexture2D<float3>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<float3>, thread float* Width, thread float* Height);
float3 Load(RWTexture2D<float3>, int2 location);
void Store(RWTexture2D<float3>, float3, uint2 location);
void GetDimensions(RWTexture2DArray<float3>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<float3>, thread float* Width, thread float* Height, thread float* Elements);
float3 Load(RWTexture2DArray<float3>, int3 location);
void Store(RWTexture2DArray<float3>, float3, uint3 location);
void GetDimensions(RWTexture3D<float3>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<float3>, thread float* Width, thread float* Height, thread float* Depth);
float3 Load(RWTexture3D<float3>, int3 location);
void Store(RWTexture3D<float3>, float3, uint3 location);
float4 Sample(Texture1D<float4>, sampler, float location);
float4 Sample(Texture1D<float4>, sampler, float location, int offset);
float4 Load(Texture1D<float4>, int2 location);
float4 Load(Texture1D<float4>, int2 location, int offset);
void GetDimensions(Texture1D<float4>, uint MipLevel, thread uint* Width, thread uint* NumberOfLevels);
float4 Sample(Texture1DArray<float4>, sampler, float2 location);
float4 Sample(Texture1DArray<float4>, sampler, float2 location, int offset);
float4 Load(Texture1DArray<float4>, int3 location);
float4 Load(Texture1DArray<float4>, int3 location, int offset);
void GetDimensions(Texture1DArray<float4>, uint MipLevel, thread uint* Width, thread uint* Elements, thread uint* NumberOfLevels);
float4 Sample(Texture2D<float4>, sampler, float2 location);
float4 Sample(Texture2D<float4>, sampler, float2 location, int2 offset);
float4 SampleBias(Texture2D<float4>, sampler, float2 location, float Bias);
float4 SampleBias(Texture2D<float4>, sampler, float2 location, float Bias, int2 offset);
float4 SampleGrad(Texture2D<float4>, sampler, float2 location, float2 DDX, float2 DDY);
float4 SampleGrad(Texture2D<float4>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
float4 SampleLevel(Texture2D<float4>, sampler, float2 location, float LOD);
float4 SampleLevel(Texture2D<float4>, sampler, float2 location, float LOD, int2 offset);
float4 Gather(Texture2D<float4>, sampler, float2 location);
float4 Gather(Texture2D<float4>, sampler, float2 location, int2 offset);
float4 GatherRed(Texture2D<float4>, sampler, float2 location);
float4 GatherRed(Texture2D<float4>, sampler, float2 location, int2 offset);
float4 GatherGreen(Texture2D<float4>, sampler, float2 location);
float4 GatherGreen(Texture2D<float4>, sampler, float2 location, int2 offset);
float4 GatherBlue(Texture2D<float4>, sampler, float2 location);
float4 GatherBlue(Texture2D<float4>, sampler, float2 location, int2 offset);
float4 GatherAlpha(Texture2D<float4>, sampler, float2 location);
float4 GatherAlpha(Texture2D<float4>, sampler, float2 location, int2 offset);
float4 Load(Texture2D<float4>, int3 location);
float4 Load(Texture2D<float4>, int3 location, int2 offset);
void GetDimensions(Texture2D<float4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
float4 Sample(Texture2DArray<float4>, sampler, float3 location);
float4 Sample(Texture2DArray<float4>, sampler, float3 location, int2 offset);
float4 SampleBias(Texture2DArray<float4>, sampler, float3 location, float Bias);
float4 SampleBias(Texture2DArray<float4>, sampler, float3 location, float Bias, int2 offset);
float4 SampleGrad(Texture2DArray<float4>, sampler, float3 location, float2 DDX, float2 DDY);
float4 SampleGrad(Texture2DArray<float4>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
float4 SampleLevel(Texture2DArray<float4>, sampler, float3 location, float LOD);
float4 SampleLevel(Texture2DArray<float4>, sampler, float3 location, float LOD, int2 offset);
float4 Gather(Texture2DArray<float4>, sampler, float3 location);
float4 Gather(Texture2DArray<float4>, sampler, float3 location, int2 offset);
float4 GatherRed(Texture2DArray<float4>, sampler, float3 location);
float4 GatherRed(Texture2DArray<float4>, sampler, float3 location, int2 offset);
float4 GatherGreen(Texture2DArray<float4>, sampler, float3 location);
float4 GatherGreen(Texture2DArray<float4>, sampler, float3 location, int2 offset);
float4 GatherBlue(Texture2DArray<float4>, sampler, float3 location);
float4 GatherBlue(Texture2DArray<float4>, sampler, float3 location, int2 offset);
float4 GatherAlpha(Texture2DArray<float4>, sampler, float3 location);
float4 GatherAlpha(Texture2DArray<float4>, sampler, float3 location, int2 offset);
float4 Load(Texture2DArray<float4>, int4 location);
float4 Load(Texture2DArray<float4>, int4 location, int2 offset);
void GetDimensions(Texture2DArray<float4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
float4 Sample(Texture3D<float4>, sampler, float3 location);
float4 Sample(Texture3D<float4>, sampler, float3 location, int3 offset);
float4 Gather(Texture3D<float4>, sampler, float3 location);
float4 Gather(Texture3D<float4>, sampler, float3 location, int3 offset);
float4 GatherRed(Texture3D<float4>, sampler, float3 location);
float4 GatherRed(Texture3D<float4>, sampler, float3 location, int3 offset);
float4 GatherGreen(Texture3D<float4>, sampler, float3 location);
float4 GatherGreen(Texture3D<float4>, sampler, float3 location, int3 offset);
float4 GatherBlue(Texture3D<float4>, sampler, float3 location);
float4 GatherBlue(Texture3D<float4>, sampler, float3 location, int3 offset);
float4 GatherAlpha(Texture3D<float4>, sampler, float3 location);
float4 GatherAlpha(Texture3D<float4>, sampler, float3 location, int3 offset);
float4 Load(Texture3D<float4>, int4 location);
float4 Load(Texture3D<float4>, int4 location, int3 offset);
void GetDimensions(Texture3D<float4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Depth, thread uint* NumberOfLevels);
float4 Sample(TextureCube<float4>, sampler, float3 location);
float4 SampleBias(TextureCube<float4>, sampler, float3 location, float Bias);
float4 SampleGrad(TextureCube<float4>, sampler, float3 location, float3 DDX, float3 DDY);
float4 SampleLevel(TextureCube<float4>, sampler, float3 location, float LOD);
float4 Gather(TextureCube<float4>, sampler, float3 location);
float4 GatherRed(TextureCube<float4>, sampler, float3 location);
float4 GatherGreen(TextureCube<float4>, sampler, float3 location);
float4 GatherBlue(TextureCube<float4>, sampler, float3 location);
float4 GatherAlpha(TextureCube<float4>, sampler, float3 location);
void GetDimensions(TextureCube<float4>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTexture1D<float4>, thread uint* Width);
void GetDimensions(RWTexture1D<float4>, thread float* Width);
float4 Load(RWTexture1D<float4>, int location);
void Store(RWTexture1D<float4>, float4, uint location);
void GetDimensions(RWTexture1DArray<float4>, thread uint* Width, thread uint* Elements);
void GetDimensions(RWTexture1DArray<float4>, thread float* Width, thread uint* Elements);
float4 Load(RWTexture1DArray<float4>, int2 location);
void Store(RWTexture1DArray<float4>, float4, uint2 location);
void GetDimensions(RWTexture2D<float4>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTexture2D<float4>, thread float* Width, thread float* Height);
float4 Load(RWTexture2D<float4>, int2 location);
void Store(RWTexture2D<float4>, float4, uint2 location);
void GetDimensions(RWTexture2DArray<float4>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTexture2DArray<float4>, thread float* Width, thread float* Height, thread float* Elements);
float4 Load(RWTexture2DArray<float4>, int3 location);
void Store(RWTexture2DArray<float4>, float4, uint3 location);
void GetDimensions(RWTexture3D<float4>, thread uint* Width, thread uint* Height, thread uint* Depth);
void GetDimensions(RWTexture3D<float4>, thread float* Width, thread float* Height, thread float* Depth);
float4 Load(RWTexture3D<float4>, int3 location);
void Store(RWTexture3D<float4>, float4, uint3 location);
half Sample(TextureDepth2D<half>, sampler, float2 location);
half Sample(TextureDepth2D<half>, sampler, float2 location, int2 offset);
half SampleCmp(TextureDepth2D<half>, SamplerComparisonState, float2 location, float CompareValue);
half SampleCmp(TextureDepth2D<half>, SamplerComparisonState, float2 location, float CompareValue, int2 offset);
half SampleCmpLevelZero(TextureDepth2D<half>, SamplerComparisonState, float2 location, float CompareValue);
half SampleCmpLevelZero(TextureDepth2D<half>, SamplerComparisonState, float2 location, float CompareValue, int2 offset);
half SampleBias(TextureDepth2D<half>, sampler, float2 location, float Bias);
half SampleBias(TextureDepth2D<half>, sampler, float2 location, float Bias, int2 offset);
half SampleGrad(TextureDepth2D<half>, sampler, float2 location, float2 DDX, float2 DDY);
half SampleGrad(TextureDepth2D<half>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
half SampleLevel(TextureDepth2D<half>, sampler, float2 location, float LOD);
half SampleLevel(TextureDepth2D<half>, sampler, float2 location, float LOD, int2 offset);
half Gather(TextureDepth2D<half>, sampler, float2 location);
half Gather(TextureDepth2D<half>, sampler, float2 location, int2 offset);
half GatherRed(TextureDepth2D<half>, sampler, float2 location);
half GatherRed(TextureDepth2D<half>, sampler, float2 location, int2 offset);
half GatherGreen(TextureDepth2D<half>, sampler, float2 location);
half GatherGreen(TextureDepth2D<half>, sampler, float2 location, int2 offset);
half GatherBlue(TextureDepth2D<half>, sampler, float2 location);
half GatherBlue(TextureDepth2D<half>, sampler, float2 location, int2 offset);
half GatherAlpha(TextureDepth2D<half>, sampler, float2 location);
half GatherAlpha(TextureDepth2D<half>, sampler, float2 location, int2 offset);
half GatherCmp(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value);
half GatherCmp(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
half GatherCmpRed(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value);
half GatherCmpRed(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
half GatherCmpGreen(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value);
half GatherCmpGreen(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
half GatherCmpBlue(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value);
half GatherCmpBlue(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
half GatherCmpAlpha(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value);
half GatherCmpAlpha(TextureDepth2D<half>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
half Load(TextureDepth2D<half>, int3 location);
half Load(TextureDepth2D<half>, int3 location, int2 offset);
void GetDimensions(TextureDepth2D<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
half Sample(TextureDepth2DArray<half>, sampler, float3 location);
half Sample(TextureDepth2DArray<half>, sampler, float3 location, int2 offset);
half SampleCmp(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float CompareValue);
half SampleCmp(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float CompareValue, int2 offset);
half SampleCmpLevelZero(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float CompareValue);
half SampleCmpLevelZero(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float CompareValue, int2 offset);
half SampleBias(TextureDepth2DArray<half>, sampler, float3 location, float Bias);
half SampleBias(TextureDepth2DArray<half>, sampler, float3 location, float Bias, int2 offset);
half SampleGrad(TextureDepth2DArray<half>, sampler, float3 location, float2 DDX, float2 DDY);
half SampleGrad(TextureDepth2DArray<half>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
half SampleLevel(TextureDepth2DArray<half>, sampler, float3 location, float LOD);
half SampleLevel(TextureDepth2DArray<half>, sampler, float3 location, float LOD, int2 offset);
half Gather(TextureDepth2DArray<half>, sampler, float3 location);
half Gather(TextureDepth2DArray<half>, sampler, float3 location, int2 offset);
half GatherRed(TextureDepth2DArray<half>, sampler, float3 location);
half GatherRed(TextureDepth2DArray<half>, sampler, float3 location, int2 offset);
half GatherGreen(TextureDepth2DArray<half>, sampler, float3 location);
half GatherGreen(TextureDepth2DArray<half>, sampler, float3 location, int2 offset);
half GatherBlue(TextureDepth2DArray<half>, sampler, float3 location);
half GatherBlue(TextureDepth2DArray<half>, sampler, float3 location, int2 offset);
half GatherAlpha(TextureDepth2DArray<half>, sampler, float3 location);
half GatherAlpha(TextureDepth2DArray<half>, sampler, float3 location, int2 offset);
half GatherCmp(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmp(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
half GatherCmpRed(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpRed(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
half GatherCmpGreen(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpGreen(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
half GatherCmpBlue(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpBlue(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
half GatherCmpAlpha(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpAlpha(TextureDepth2DArray<half>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
half Load(TextureDepth2DArray<half>, int4 location);
half Load(TextureDepth2DArray<half>, int4 location, int2 offset);
void GetDimensions(TextureDepth2DArray<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
half Sample(TextureDepthCube<half>, sampler, float3 location);
half SampleCmp(TextureDepthCube<half>, SamplerComparisonState, float3 location, float CompareValue);
half SampleCmpLevelZero(TextureDepthCube<half>, SamplerComparisonState, float3 location, float CompareValue);
half SampleBias(TextureDepthCube<half>, sampler, float3 location, float Bias);
half SampleGrad(TextureDepthCube<half>, sampler, float3 location, float2 DDX, float2 DDY);
half SampleLevel(TextureDepthCube<half>, sampler, float3 location, float LOD);
half Gather(TextureDepthCube<half>, sampler, float3 location);
half GatherRed(TextureDepthCube<half>, sampler, float3 location);
half GatherGreen(TextureDepthCube<half>, sampler, float3 location);
half GatherBlue(TextureDepthCube<half>, sampler, float3 location);
half GatherAlpha(TextureDepthCube<half>, sampler, float3 location);
half GatherCmp(TextureDepthCube<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpRed(TextureDepthCube<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpGreen(TextureDepthCube<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpBlue(TextureDepthCube<half>, SamplerComparisonState, float3 location, float compare_value);
half GatherCmpAlpha(TextureDepthCube<half>, SamplerComparisonState, float3 location, float compare_value);
half Load(TextureDepthCube<half>, int4 location);
void GetDimensions(TextureDepthCube<half>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTextureDepth2D<half>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTextureDepth2D<half>, thread float* Width, thread float* Height);
half Load(RWTextureDepth2D<half>, int2 location);
void Store(RWTextureDepth2D<half>, half, uint2 location);
void GetDimensions(RWTextureDepth2DArray<half>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTextureDepth2DArray<half>, thread float* Width, thread float* Height, thread float* Elements);
half Load(RWTextureDepth2DArray<half>, int3 location);
void Store(RWTextureDepth2DArray<half>, half, uint3 location);
float Sample(TextureDepth2D<float>, sampler, float2 location);
float Sample(TextureDepth2D<float>, sampler, float2 location, int2 offset);
float SampleCmp(TextureDepth2D<float>, SamplerComparisonState, float2 location, float CompareValue);
float SampleCmp(TextureDepth2D<float>, SamplerComparisonState, float2 location, float CompareValue, int2 offset);
float SampleCmpLevelZero(TextureDepth2D<float>, SamplerComparisonState, float2 location, float CompareValue);
float SampleCmpLevelZero(TextureDepth2D<float>, SamplerComparisonState, float2 location, float CompareValue, int2 offset);
float SampleBias(TextureDepth2D<float>, sampler, float2 location, float Bias);
float SampleBias(TextureDepth2D<float>, sampler, float2 location, float Bias, int2 offset);
float SampleGrad(TextureDepth2D<float>, sampler, float2 location, float2 DDX, float2 DDY);
float SampleGrad(TextureDepth2D<float>, sampler, float2 location, float2 DDX, float2 DDY, int2 offset);
float SampleLevel(TextureDepth2D<float>, sampler, float2 location, float LOD);
float SampleLevel(TextureDepth2D<float>, sampler, float2 location, float LOD, int2 offset);
float Gather(TextureDepth2D<float>, sampler, float2 location);
float Gather(TextureDepth2D<float>, sampler, float2 location, int2 offset);
float GatherRed(TextureDepth2D<float>, sampler, float2 location);
float GatherRed(TextureDepth2D<float>, sampler, float2 location, int2 offset);
float GatherGreen(TextureDepth2D<float>, sampler, float2 location);
float GatherGreen(TextureDepth2D<float>, sampler, float2 location, int2 offset);
float GatherBlue(TextureDepth2D<float>, sampler, float2 location);
float GatherBlue(TextureDepth2D<float>, sampler, float2 location, int2 offset);
float GatherAlpha(TextureDepth2D<float>, sampler, float2 location);
float GatherAlpha(TextureDepth2D<float>, sampler, float2 location, int2 offset);
float GatherCmp(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value);
float GatherCmp(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
float GatherCmpRed(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value);
float GatherCmpRed(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
float GatherCmpGreen(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value);
float GatherCmpGreen(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
float GatherCmpBlue(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value);
float GatherCmpBlue(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
float GatherCmpAlpha(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value);
float GatherCmpAlpha(TextureDepth2D<float>, SamplerComparisonState, float2 location, float compare_value, int2 offset);
float Load(TextureDepth2D<float>, int3 location);
float Load(TextureDepth2D<float>, int3 location, int2 offset);
void GetDimensions(TextureDepth2D<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
float Sample(TextureDepth2DArray<float>, sampler, float3 location);
float Sample(TextureDepth2DArray<float>, sampler, float3 location, int2 offset);
float SampleCmp(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float CompareValue);
float SampleCmp(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float CompareValue, int2 offset);
float SampleCmpLevelZero(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float CompareValue);
float SampleCmpLevelZero(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float CompareValue, int2 offset);
float SampleBias(TextureDepth2DArray<float>, sampler, float3 location, float Bias);
float SampleBias(TextureDepth2DArray<float>, sampler, float3 location, float Bias, int2 offset);
float SampleGrad(TextureDepth2DArray<float>, sampler, float3 location, float2 DDX, float2 DDY);
float SampleGrad(TextureDepth2DArray<float>, sampler, float3 location, float2 DDX, float2 DDY, int2 offset);
float SampleLevel(TextureDepth2DArray<float>, sampler, float3 location, float LOD);
float SampleLevel(TextureDepth2DArray<float>, sampler, float3 location, float LOD, int2 offset);
float Gather(TextureDepth2DArray<float>, sampler, float3 location);
float Gather(TextureDepth2DArray<float>, sampler, float3 location, int2 offset);
float GatherRed(TextureDepth2DArray<float>, sampler, float3 location);
float GatherRed(TextureDepth2DArray<float>, sampler, float3 location, int2 offset);
float GatherGreen(TextureDepth2DArray<float>, sampler, float3 location);
float GatherGreen(TextureDepth2DArray<float>, sampler, float3 location, int2 offset);
float GatherBlue(TextureDepth2DArray<float>, sampler, float3 location);
float GatherBlue(TextureDepth2DArray<float>, sampler, float3 location, int2 offset);
float GatherAlpha(TextureDepth2DArray<float>, sampler, float3 location);
float GatherAlpha(TextureDepth2DArray<float>, sampler, float3 location, int2 offset);
float GatherCmp(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmp(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
float GatherCmpRed(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpRed(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
float GatherCmpGreen(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpGreen(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
float GatherCmpBlue(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpBlue(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
float GatherCmpAlpha(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpAlpha(TextureDepth2DArray<float>, SamplerComparisonState, float3 location, float compare_value, int2 offset);
float Load(TextureDepth2DArray<float>, int4 location);
float Load(TextureDepth2DArray<float>, int4 location, int2 offset);
void GetDimensions(TextureDepth2DArray<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* Elements, thread uint* NumberOfLevels);
float Sample(TextureDepthCube<float>, sampler, float3 location);
float SampleCmp(TextureDepthCube<float>, SamplerComparisonState, float3 location, float CompareValue);
float SampleCmpLevelZero(TextureDepthCube<float>, SamplerComparisonState, float3 location, float CompareValue);
float SampleBias(TextureDepthCube<float>, sampler, float3 location, float Bias);
float SampleGrad(TextureDepthCube<float>, sampler, float3 location, float2 DDX, float2 DDY);
float SampleLevel(TextureDepthCube<float>, sampler, float3 location, float LOD);
float Gather(TextureDepthCube<float>, sampler, float3 location);
float GatherRed(TextureDepthCube<float>, sampler, float3 location);
float GatherGreen(TextureDepthCube<float>, sampler, float3 location);
float GatherBlue(TextureDepthCube<float>, sampler, float3 location);
float GatherAlpha(TextureDepthCube<float>, sampler, float3 location);
float GatherCmp(TextureDepthCube<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpRed(TextureDepthCube<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpGreen(TextureDepthCube<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpBlue(TextureDepthCube<float>, SamplerComparisonState, float3 location, float compare_value);
float GatherCmpAlpha(TextureDepthCube<float>, SamplerComparisonState, float3 location, float compare_value);
float Load(TextureDepthCube<float>, int4 location);
void GetDimensions(TextureDepthCube<float>, uint MipLevel, thread uint* Width, thread uint* Height, thread uint* NumberOfLevels);
void GetDimensions(RWTextureDepth2D<float>, thread uint* Width, thread uint* Height);
void GetDimensions(RWTextureDepth2D<float>, thread float* Width, thread float* Height);
float Load(RWTextureDepth2D<float>, int2 location);
void Store(RWTextureDepth2D<float>, float, uint2 location);
void GetDimensions(RWTextureDepth2DArray<float>, thread uint* Width, thread uint* Height, thread uint* Elements);
void GetDimensions(RWTextureDepth2DArray<float>, thread float* Width, thread float* Height, thread float* Elements);
float Load(RWTextureDepth2DArray<float>, int3 location);
void Store(RWTextureDepth2DArray<float>, float, uint3 location);
